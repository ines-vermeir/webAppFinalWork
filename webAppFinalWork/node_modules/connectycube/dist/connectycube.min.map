{"version":3,"sources":["webpack://ConnectyCube/webpack/universalModuleDefinition","webpack://ConnectyCube/webpack/bootstrap","webpack://ConnectyCube/./src/cubeInternalUtils.js","webpack://ConnectyCube/./src/cubeConfig.js","webpack://ConnectyCube/./src/cubeDependencies.js","webpack://ConnectyCube/./src/messaging/cubeChatInternalUtils.js","webpack://ConnectyCube/./node_modules/crypto-js/core.js","webpack://ConnectyCube/./src/videocalling/cubeWebRTCHelpers.js","webpack://ConnectyCube/./src/videocalling/cubeWebRTCSignalingConstants.js","webpack://ConnectyCube/(webpack)/buildin/global.js","webpack://ConnectyCube/./src/cubeUtils.js","webpack://ConnectyCube/./node_modules/sdp-transform/lib/grammar.js","webpack://ConnectyCube/./node_modules/crypto-js/hmac.js","webpack://ConnectyCube/./src/videocalling/cubeRTCPeerConnection.js","webpack://ConnectyCube/./node_modules/fbemitter/lib/EmitterSubscription.js","webpack://ConnectyCube/./node_modules/fbjs/lib/invariant.js","webpack://ConnectyCube/./src/cubeMain.js","webpack://ConnectyCube/./src/cubeProxy.js","webpack://ConnectyCube/./node_modules/buffer/index.js","webpack://ConnectyCube/./node_modules/base64-js/index.js","webpack://ConnectyCube/./node_modules/ieee754/index.js","webpack://ConnectyCube/./node_modules/isarray/index.js","webpack://ConnectyCube/./node_modules/strophe.js/dist/strophe.js","webpack://ConnectyCube/./src/cubeStrophe.js","webpack://ConnectyCube/./node_modules/sdp-transform/lib/index.js","webpack://ConnectyCube/./node_modules/sdp-transform/lib/parser.js","webpack://ConnectyCube/./node_modules/sdp-transform/lib/writer.js","webpack://ConnectyCube/external \"nativescript-xmpp-client\"","webpack://ConnectyCube/external \"node-fetch\"","webpack://ConnectyCube/external \"form-data\"","webpack://ConnectyCube/external \"node-xmpp-client\"","webpack://ConnectyCube/./src/cubeAuth.js","webpack://ConnectyCube/./node_modules/crypto-js/hmac-sha1.js","webpack://ConnectyCube/./node_modules/crypto-js/sha1.js","webpack://ConnectyCube/./node_modules/crypto-js/hmac-sha256.js","webpack://ConnectyCube/./node_modules/crypto-js/sha256.js","webpack://ConnectyCube/./src/cubeUsers.js","webpack://ConnectyCube/./src/cubeStorage.js","webpack://ConnectyCube/./src/cubePushNotifications.js","webpack://ConnectyCube/./src/cubeData.js","webpack://ConnectyCube/./src/cubeAddressBook.js","webpack://ConnectyCube/./src/messaging/cubeChat.js","webpack://ConnectyCube/./src/messaging/cubeChatHelpers.js","webpack://ConnectyCube/./src/messaging/cubeStreamManagement.js","webpack://ConnectyCube/./src/messaging/cubeContactList.js","webpack://ConnectyCube/./src/messaging/cubePrivacyList.js","webpack://ConnectyCube/./src/messaging/cubeMultiUserChat.js","webpack://ConnectyCube/./src/messaging/cubeDialog.js","webpack://ConnectyCube/./src/messaging/cubeMessage.js","webpack://ConnectyCube/./src/videocalling/cubeWebRTCClient.js","webpack://ConnectyCube/./src/videocalling/cubeWebRTCSession.js","webpack://ConnectyCube/./src/videocalling/cubeWebRTCSignalingProcessor.js","webpack://ConnectyCube/./src/videocalling/cubeWebRTCSignalingProvider.js","webpack://ConnectyCube/./src/videocalling_conference/cubeVideoCallingConference.js","webpack://ConnectyCube/./src/videocalling_conference/janus.umd.js","webpack://ConnectyCube/./node_modules/fbemitter/index.js","webpack://ConnectyCube/./node_modules/fbemitter/lib/BaseEventEmitter.js","webpack://ConnectyCube/./node_modules/fbemitter/lib/EventSubscription.js","webpack://ConnectyCube/./node_modules/fbemitter/lib/EventSubscriptionVendor.js","webpack://ConnectyCube/./node_modules/fbjs/lib/emptyFunction.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__25__","__WEBPACK_EXTERNAL_MODULE__26__","__WEBPACK_EXTERNAL_MODULE__27__","__WEBPACK_EXTERNAL_MODULE__28__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","config","Utils","ObjectId","machine","Math","floor","random","toString","pid","increment","InternalUtils","getEnv","isWebRTCAvailble","safeCallbackCall","listenerCall","listenerName","arguments","split","argumentsCopy","length","push","shift","apply","err","console","error","randomNonce","unixTime","Date","now","getUrl","base","id","resource","endpoints","api","urls","type","isArray","arr","isObject","obj","isFunction","func","constructor","getBsonObjectId","timestamp","this","substr","DLog","self","loggers","logger","consoleLoggerFunction","args","log","Array","slice","_typeof","debug","forEach","j","getError","code","detail","moduleName","errorMsg","status","message","isExpiredSessionError","errors","ex","MergeArrayOfObjects","arrayTo","arrayFrom","merged","JSON","parse","stringify","firstLevel","newItem","user_id","toBase64","str","browser","btoa","encodeURIComponent","replace","match","p1","String","fromCharCode","reactnative","global","Buffer","version","creds","appId","authKey","authSecret","chat","muc","hash","chatProtocol","bosh","websocket","active","webSession","getSessionTimeInterval","getSessionTimeout","contactList","subscriptionMode","mutual","reconnectionTimeInterval","streamManagement","enable","videochat","answerTimeInterval","dialingTimeInterval","disconnectTimeInterval","statsReportTimeInterval","iceServers","username","credential","session","login","users","blobs","subscriptions","events","data","addressbook","addressbookRegistered","on","sessionExpired","timeout","options","keys","nextkey","fetchImpl","formDataImpl","XMPPClient","RTCPeerConnection","RTCSessionDescription","RTCIceCandidate","MediaStream","mediaDevices","SDPTransform","fetch","FormData","Strophe","assign","navigator","nativescript","node","XMPPWebSocketTransport","Config","XMPP","ERR_UNKNOWN_INTERFACE","cbChatHelpers","MARKERS","CLIENT","CHAT","STATES","CARBONS","ROSTER","MUC","PRIVACY","LAST","buildUserJid","params","jid","userId","buildUserJidLocalPart","createMessageStanza","$msg","xml","Stanza","createIqStanza","$iq","createPresenceStanza","$pres","createNonza","elementName","$build","getAttr","el","attrName","attr","getAttribute","attrs","getElement","stanza","elName","querySelector","getChild","getAllElements","querySelectorAll","getElementText","txt","textContent","getChildText","_JStoXML","title","msg","field","up","_XMLtoJS","extension","len","childNodes","tagName","filledExtraParams","helper","attach","parseExtraParams","extraParams","dialogId","attributes","attachments","len2","parseInt","dialog_id","wholeNodeContent","k","lenght","children","attrKeys","size","child","moduleIdentifier","getUniqueId","suffix","uuid","getErrorFromXMLNode","stanzaError","errorElement","errorCode","errorText","CryptoJS","undefined","F","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","nBytes","rcache","m_w","m_z","mask","result","_r","C_enc","enc","hexChars","bite","join","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","Error","utf8Str","unescape","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","processedWords","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","WebRTCHelpers","getUserJid","getIdFromNode","indexOf","userCurrentJid","client","_local","_domain","_resource","user","trace","text","traceWarning","warn","traceError","dataURItoBlob","dataURI","contentType","binary","atob","Blob","Uint8Array","getVersionFirefox","ua","userAgent","ffInfo","getVersionSafari","sVer","SessionConnectionState","UNDEFINED","CONNECTING","CONNECTED","FAILED","DISCONNECTED","CLOSED","COMPLETED","CallType","VIDEO","AUDIO","WebRTCSignalingConstants","MODULE_ID","SignalingType","CALL","ACCEPT","REJECT","STOP","CANDIDATE","PARAMETERS_CHANGED","g","Function","isBrowser","document","isReactNative","product","isNativeScript","android","NSObject","isAvaible","grammar","v","reg","names","format","u","z","b","a","rate","address","direction","sessionConfig","raddr","tcptype","generation","attribute","maxMessageSize","RegExp","dir2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","Helpers","sdptransform","setMediaBitrate","sdp","media","bitrate","lines","line","modifier","amount","newLines","State","NEW","CHECKING","_init","delegate","userID","sessionID","remoteSDP","state","onicecandidate","onIceCandidateCallback","onsignalingstatechange","onSignalingStateCallback","oniceconnectionstatechange","onIceConnectionStateCallback","remoteStream","ontrack","onAddRemoteMediaCallback","onStatusClosedChecker","onaddstream","dialingTimer","statsReportTimer","iceCandidates","release","_clearDialingTimer","_clearStatsReportTimer","connectionState","close","updateRemoteSDP","newSDP","getRemoteSDP","setRemoteSessionDescription","remoteSessionDescription","callback","desc","ffVersion","bandwidth","setRemoteDescription","then","addLocalStream","localStream","addStream","getAndSetLocalSessionDescription","callType","successCallback","parsedSDP","groups","mids","write","setLocalDescription","errorCallback","createOffer","offer","reason","createAnswer","answer","addCandidates","candidate","sdpMLineIndex","sdpMid","addIceCandidate","signalingState","processIceCandidates","event","ICECandidate","_onRemoteStreamListener","stream","addTrack","track","getVideoTracks","getAudioTracks","_getStatsWrap","iceConnectionState","_onSessionConnectionStateChangedListener","clearTimeout","_clearWaitingReconnectTimer","_startWaitingReconnectTimer","setTimeout","clearInterval","statsReportInterval","lastResult","isNaN","setInterval","peer","lastResults","statistic","local","audio","video","remote","getLocalStreams","localVideoSettings","getSettings","frameHeight","height","frameWidth","width","_getBitratePerSecond","isLocal","seconds","bytesSent","bytesReceived","round","_getFramesPerSecond","framesPerSecond","framesSent","framesReceived","getStats","results","item","mediaType","packetsReceived","framerateMean","packetsSent","candidateType","mozLocalTransport","transport","protocol","ip","ipAddress","port","portNumber","kind","remoteSource","_getStats","_onCallStatsReport","waitingReconnectTimeoutCallback","_closeSessionIfAllConnectionsClosed","_startDialingTimer","withOnNotAnswerCallback","_dialingCallback","skipIncrement","processOnNotAnswer","processCall","EmitterSubscription","_EventSubscription","subscriber","listener","context","Constructor","TypeError","_classCallCheck","subClass","superClass","writable","configurable","setPrototypeOf","__proto__","_inherits","validateFormat","condition","f","argIndex","framesToPop","ConnectyCube","credentials","configMap","set","Proxy","Auth","Users","Storage","PushNotifications","Data","AddressBook","Chat","DialogProxy","MessageProxy","service","auth","storage","pushnotifications","dialog","utils","WebRTCClient","xmppClient","webrtcSignalingProcessor","signalingProcessor","videochatconference","token","setSession","getSession","createSession","destroySession","createWebSession","checkWebSessionUntilUpgrade","upgradeWebSession","webToken","logout","CB","ServiceProxy","sdkInstance","currentUserId","reqCount","setCurrentUserId","getCurrentUserId","handleResponse","response","next","retry","logRequest","clonedData","file","url","ajax","cbRequestBody","cbResponse","isGetOrHeadType","cbSessionToken","iscbRequest","isMultipartFormData","cbDataType","dataType","cbUrl","cbRequest","_fixedEncodeURIComponent","_requestCallback","body","responseMessage","responseBody","statusCode","headers","errno","syscall","method","cbData","fileToCustomObject","append","isNeedStringify","map","sort","_getBodyRequest","Content-Type","json","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","isBuffer","checked","copy","buffer","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","b64","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","uint8","extraBytes","output","parts","encodeChunk","lookup","num","isLE","mLen","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","./node_modules/webpack/buildin/global.js","eval","./src/bosh.js","__webpack_exports__","core__WEBPACK_IMPORTED_MODULE_0__","Request","elem","rid","sends","_requestId","xmlData","serialize","origFunc","date","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","documentElement","responseText","DOMParser","parseFromString","ErrorCondition","BAD_FORMAT","XMLHttpRequest","overrideMimeType","ActiveXObject","onreadystatechange","Bosh","connection","_conn","sid","hold","wait","inactivity","lastResponseHeaders","_requests","strip","_buildBody","bodyWrap","xmlns","NS","HTTPBIND","keepalive","_sessionCachingSupported","_cacheSession","_reset","sessionStorage","removeItem","nextValidRid","_connect","route","to","domain","xml:lang","content","ver","xmpp:version","xmlns:xmpp","BOSH","_connect_cb","tree","_onRequestStateChange","_throttledRequestHandler","_attach","wind","connect_callback","getDomainFromJid","authenticated","connected","_changeConnectStatus","Status","ATTACHED","_restore","getItem","getBareJidFromJid","getNodeFromJid","restored","setItem","typ","cond","conflict","getElementsByTagName","CONNFAIL","_doDisconnect","_disconnect","pres","_sendTerminate","_emptyQueue","_callProtocolErrorHandlers","req","reqStatus","_getRequestStatus","err_callback","protocolErrorHandlers","HTTP","_hitError","_onDisconnectTimeout","_no_auth_received","_abortAllRequests","pop","_onIdle","disconnecting","info","paused","xmpp:restart","cnode","_dataRecv","time_elapsed","SECONDARY_TIMEOUT","TIMEOUT","def","readyState","getAllResponseHeaders","valid_request","too_many_retries","maxRetries","_removeRequest","reqIs0","_restartRequest","DISCONNECTING","_processRequest","_this","primary_timeout","secondary_timeout","server_error","content_type","open","sync","setRequestHeader","withCredentials","e2","disconnect","sendFunc","customHeaders","header","send","backoff","xmlOutput","Connection","nodeName","rawOutput","_reqToData","_send","_this2","_idleTimeout","_sendRestart","./src/core.js","md5__WEBPACK_IMPORTED_MODULE_0__","sha1__WEBPACK_IMPORTED_MODULE_1__","utils__WEBPACK_IMPORTED_MODULE_2__","_toConsumableArray","arr2","_arrayWithoutHoles","iter","iterator","_iterableToArray","_nonIterableSpread","Builder","VERSION","AUTH","PROFILE","DISCO_INFO","DISCO_ITEMS","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","blockquote","br","cite","em","img","li","ol","span","strong","ul","css","validTag","tag","validAttribute","validCSS","style","ERROR","AUTHENTICATING","AUTHFAIL","REDIRECT","CONNTIMEOUT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","addNamespace","forEachChild","elemName","childNode","nodeType","isTagEqual","_xmlGenerator","_makeGenerator","doc","implementation","createDocument","documentMode","_getIEXmlDom","appendChild","createElement","xmlGenerator","docStrings","xmlElement","xmlTextNode","setAttribute","xmlescape","xmlunescape","createTextNode","xmlHtmlNode","html","async","loadXML","getText","nodeValue","copyElement","_i","createHtml","cssText","cssAttrs","cssName","cssValue","_i2","createDocumentFragment","_i3","_i4","escapeNode","unescapeNode","bare","getResourceFromJid","_handleError","stack","fatal","sourceURL","handler","fileName","lineNumber","level","reduce","getNamedItem","_connectionPlugins","addConnectionPlugin","ptype","nodeTree","parentNode","moreattrs","removeAttribute","impNode","xmlGen","importNode","newElem","h","fragment","innerHTML","xhtml","Handler","matchBareFromJid","ignoreNamespaceFragment","matchBare","getNamespace","elNamespace","namespaceMatch","nsMatch","isMatch","elem_type","run","TimedHandler","period","lastCalled","getTime","proto","_proto","Websocket","features","_sasl_data","do_session","do_bind","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","_disconnectTimeout","do_authentication","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","addCookies","cookies","registerSASLMechanisms","mechanisms","pause","resume","addProtocolErrorHandler","status_code","connect","pass","authcid","authzid","servtype","restore","xmlInput","rawInput","_queueData","flush","sendPresence","errback","_this3","timeoutHandler","addHandler","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","_this4","iqtype","element","_this5","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","registerSASLMechanism","mechanism","_addSysTimedHandler","plugin","statusChanged","raw","_this6","UNKOWN_REASON","newList","_i5","_hand","_callback","getElementsByTagNameNS","matched","mech","authenticate","sortMechanismsByPriority","higher","priority","_attemptSASLAuth","mechanism_found","test","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","onChallenge","_attemptLegacyAuth","_auth1_cb","challenge","iq","_auth2_cb","_this7","serverSignature","matches","onSuccess","streamfeature_handlers","wrapper","_sasl_auth1_cb","_sasl_bind_cb","jidNode","_sasl_session_cb","onFailure","_this8","_i6","_thand","SASLMechanism","_connection","auth_str","utf16to8","test_cnonce","cnonce","hexdigest","nonce","salt","Hi","U","U_old","authMessage","attribMatch","core_hmac_sha1","binb2str","clientKey","serverKey","str_hmac_sha1","clientSignature","str_sha1","b64_hmac_sha1","_quote","realm","host","digest_uri","cred","A1","A2","SHA1","MD5","b64_sha1","./src/md5.js","safe_add","lsw","str2binl","bin","md5_cmn","q","cnt","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","olda","oldb","oldc","oldd","binarray","charAt","binl2hex","binl2str","./src/sha1.js","core_sha1","olde","w","rol","sha1_ft","sha1_kt","bkey","str2binb","ipad","opad","binb2b64","triplet","./src/strophe.js","./src/utils.js","cookieName","expires","path","cookieObj","isObj","cookieValue","cookie","./src/websocket.js","new_service","location","pathname","_buildStream","_check_streamerror","connectstatus","errorString","_closeSocket","socket","WebSocket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","_handleStreamStart","streamStart","parsedMessage","see_uri","_streamWrap","_onMessage","closeString","rawStanza","search","firstChild","startString","chatPRTCL","conn","parser","writer","parseFmtpConfig","parseParams","parsePayloads","parseRemoteCandidates","parseImageAttributes","parseSimulcastStreamList","toIntIfInt","parseReg","needsBlank","keyLocation","rawName","attachProperties","validLine","filter","rtp","fmtp","paramReducer","acc","expr","candidates","component","substring","scid","formatRegExp","makeLine","formatStr","defaultOuterOrder","defaultInnerOrder","opts","mLine","payloads","outerOrder","innerOrder","sha1","sha256","AuthProxy","webSessionCheckInterval","ajaxParams","paramsOrCallback","application_id","auth_key","password","email","provider","scope","secret","generateAuthMsg","signature","cryptoSessionMsg","sessionMsg","val1","signMessage","qr_code","long","qrCode","interval","timeoutError","timeleft","_clearWebSessionCheckTimer","web_token","HmacSHA1","W","_hash","M","H","nBitsTotal","nBitsLeft","HmacSHA256","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","SHA256","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","t1","DATE_FIELDS","NUMBER_FIELDS","resetPasswordUrl","UsersProxy","generateFilter","param","filters","order","full_name","facebook_id","twitter_id","phone","external","signup","delete","resetPassword","StorageProxy","parseUri","strictMode","exec","uri","$0","$1","$2","blob","createAndUpload","fileId","createParams","tag_list","createResult","blob_object_access","authority","queryKey","upload","markUploaded","xmlDoc","getInfo","getFile","uid","privateUrl","fileUID","publicUrl","strict","loose","SubscriptionsProxy","EventsProxy","base64Encode","DataProxy","className","_id","requestedData","requestedTypeOf","typesData","ids","criteria","responceNormalized","deleted","deletedCount","SuccessfullyDeleted","total_deleted","uploadFile","field_name","downloadFile","fileUrl","deleteFile","_isFakeErrorEmptyAddressBook","errDetails","uploadAddressBook","optionsOrcallback","cb","contacts","force","udid","udidOrCallback","getRegisteredUsers","isCompactOrCallback","isCompact","compact","ChatUtils","ChatHelpers","StreamManagement","ContactListProxy","PrivacyListProxy","MucProxy","ChatProxy","XHandlerReferences","XAddTrackedHandler","XDeleteHandlers","Client","autostart","cbUserName","cbUserPassword","originSendFunction","nodeStanzasCallbacks","isConnected","_isConnecting","_isLogout","_checkConnectionTimer","helpers","xmppClientListeners","privacylist","_sentMessageCallback","messageLost","messageSent","onSentMessageCallback","extraParamsParsed","recipientId","recipient","messageId","markable","delivered","composing","invite","delay","bodyContent","forwarded","forwardedMessage","getDialogIdFromNode","getIdFromResource","marker","onMessageTypingListener","onDeliveredStatusListener","onReadStatusListener","autoSendReceiveStatusParams","sendDeliveredStatus","recipient_id","onMessageListener","_onPresence","xXMLNS","contact","getUserIdFromRoomJid","onKickOccupant","actorElement","initiatorUserJid","joinedRooms","getRoomJidFromRoomFullJid","onLeaveOccupant","onJoinOccupant","endsWith","subscription","ask","_sendSubscriptionPresence","onSubscribeListener","onConfirmSubscribeListener","onRejectSubscribeListener","onContactListListener","_onIQ","stanzaId","isLastActivity","onLastUserActivityListener","query","_onSystemMessageListener","onSystemMessageListener","_onMessageErrorListener","onMessageErrorListener","userJid","isInitialConnect","onReconnectFailedListener","_postConnectActions","roster","onDisconnectedListener","_establishConnection","removeAllListeners","is","removeListener","callbackConnect","callbackOnline","callbackOffline","callbackDisconnect","setIsConnectedToFalse","callbackStatus","callbackStanza","callbackError","callbackOutput","callbackInput","presence","sentMessageCallback","setUserCurrentJid","_enableCarbons","rooms","onReconnectListener","jidOrUserId","stanzaParams","getUserCurrentJid","messageStanza","sendSystemMessage","sendIsTypingStatus","typeChat","sendIsStopTypingStatus","sendReadStatus","getLastUserActivity","iqParams","iqStanza","stop","carbonParams","_userCurrentJid","chatType","getRecipientId","occupantsIds","UserId","getUserNickWithMucDomain","getRoomJidFromDialogId","getRoomJid","arrayElements","getDialogJid","identifier","_NS","_isStreamManagementEnabled","_clientProcessedStanzasCounter","_clientSentStanzasCounter","_timeInterval","_parser","_c","_originalSend","_stanzasQueue","enableParams","_addEnableHandlers","_timeoutCallback","updatedStanzasQueue","time","_incomingStanzaHandler","_increaseReceivedStanzasCounter","answerStanza","_checkCounterOnIncomeStanza","stanzaXML","outerHTML","_sendStanzasRequest","expect","getClientSentStanzasCounter","count","_callbackWrap","items","_getItems","isUniqName","add","confirm","reject","updateName","remove","presenceParams","presenceStanza","userMuc","userAction","mutualBlock","listUserId","listPrivacy","action","createPrivacyItem","jidOrMuc","createPrivacyItemMutal","index","stanzaResult","getChildElements","getList","usersList","stanzaQuery","listWithUpdates","existentList","updatedList","getNames","defaultList","activeList","allLists","defaultName","activeName","allNames","default","setAsDefault","dialogIdOrJid","dialogJid","handleJoinAnswer","errorEl","errorMessage","maxstanzas","leave","roomJid","listOnlineUsers","dialogJID","onlineUsers","DIALOGS_API_URL","occupants_ids","params_or_callback","MESSAGES_API_URL","unreadCount","chat_dialog_ids","WebRTCSession","WebRTCSignalingProcessor","WebRTCSignalingProvider","SignalingConstants","__instance","signalingProvider","PeerConnectionState","sessions","ondevicechange","_onDevicesChangeListener","getMediaDevices","spec","specDevices","errMsg","Promise","resolve","enumerateDevices","devices","device","createNewSession","opponentsIDs","opponentsIdNASessions","opponents","ACTIVE","getOpponentsIdNASessions","callerID","exOpponents","currentOpponents","ans","cOpponents","every","isOpponentsEqual","_createAndStoreSession","newSession","initiatorID","opIDs","currentUserID","onUserNotAnswerListener","onRemoteStreamListener","onSessionConnectionStateChangedListener","onSessionCloseListener","onCallStatsReport","ID","clearSession","sessionId","isExistNewOrActiveSessionExceptSessionID","exist","_onCallListener","userInfo","platform","sendMessage","onInvalidEventsListener","processOnCall","onCallListener","_onAcceptListener","onAcceptCallListener","processOnAccept","_onRejectListener","onRejectCallListener","processOnReject","_onStopListener","onStopCallListener","processOnStop","_onIceCandidatesListener","processOnIceCandidates","_onUpdateListener","onUpdateCallListener","onDevicesChangeListener","MediaDevicesImpl","peerConnections","mediaParams","answerTimer","startCallTime","acceptCallTime","_prepareExtension","_prepareIceServers","iceServersCopy","HUNGUP","REJECTED","getUserMedia","elementId","attachMediaStream","connectionStateForUser","peerConnection","getElementById","srcObject","URL","createObjectURL","muted","mirror","webkitTransform","transform","onloadedmetadata","play","detachMediaStream","switchMediaTracks","deviceIds","deviceId","getTracks","_replaceTracks","peers","ops","newStreamTracks","getSenders","sender","replaceTrack","find","_callInternal","_createPeer","safariVersion","accept","_clearAnswerTimer","_acceptInternal","oppIDs","_uniqueOpponentsIDsWithoutInitiator","offerTime","_startWaitingOfferOrAnswerTimer","opID","localDescription","peersLen","_close","closeConnection","traceWarn","mute","_muteStream","unmute","_uniqueOpponentsIDs","pConn","_startAnswerTimer","_clearWaitingOfferOrAnswerTimer","pc","sendCandidate","stats","peerConnectionType","pcConfig","_closeLocalMediaStream","isAllConnectionsClosed","peerState","peerCon","audioTrack","videoTrack","bool","enabled","waitingOfferOrAnswerTimer","_getExtension","signalType","opponent","childrenNodes","extraParamsChildNodes","itemTagName","len3","childName","childValue","len2v","signalingType","opponentId","Janus","coreConfig","EventEmitter","VideoConferencingClient","configParams","adapter","configs","server","engine","videoRoomPlugin","isOnlyAudio","currentDialogId","remoteFeeds","remoteJseps","remoteFeedsAttachingInProgress","currentMidiaDeviceId","bitrateTimers","emitter","listDevices","listVideoinputDevices","videoSelect","deviceInfo","videoinputDescription","label","videoinputId","callbacks","isWebrtcSupported","success","destroyed","timeoutSessionCallback","getSessionId","destroy","attachVideoConferencingPlugin","isRemote","remoteFeed","pluginHandle","listen","request","room","feed","browserDetails","wrapError","consentDialog","mediaState","medium","webrtcState","slowLink","uplink","nacks","iceState","jsep","feedId","useAudio","useVideo","publishers","userDisplayName","emit","detachRemoteFeed","handleRemoteJsep","onlocalstream","onremotestream","oncleanup","detached","getPluginId","getId","detachVideoConferencingPlugin","clean","detach","chatDialogId","joinEvent","resp","leaveEvent","listOnlineParticipants","listRequest","participants","toggleAudioMute","isAudioMuted","unmuteAudio","muteAudio","toggleRemoteAudioMute","audioTracks","isRemoteAudioMuted","toggleVideoMute","isVideoMuted","unmuteVideo","muteVideo","toggleRemoteVideoMute","videoTracks","isRemoteVideoMuted","switchVideoinput","mediaDeviceId","replaceVideo","iceRestart","userIdOrCallbacks","restart","inputParams","videoQuality","quality","videoFrameRate","frameRate","audioRecv","videoRecv","audioSend","videoSend","ideal","publish","showBitrate","getBitrate","hideBitrate","eventType","addListener","gatewayCallbacks","initDone","noop","websockets","ws","wsHandlers","wsKeepaliveTimeoutId","servers","serversIndex","iceTransportPolicy","bundlePolicy","ipv6Support","ipv6","maxev","max_poll_events","apisecret","destroyOnUnload","pluginHandles","retries","transactions","eventHandler","longpoll","httpAPICall","verb","handleEvent","textStatus","errorThrown","skipTimeout","hangup","ondetached","transaction","reportSuccess","plugindata","vdebug","keepAlive","janus","session_id","randomString","handleId","sendTrickleCandidate","sendData","webrtcStuff","dataChannel","sendDtmf","dtmfSender","myStream","tracks","local_audio_track","createDTMFSender","ontonechange","tone","dtmf","tones","duration","gap","insertDTMF","destroyHandle","asyncRequest","cleanupWebrtc","streamsDone","streamExternal","removeAudio","replaceAudio","removeTrack","removeVideo","addTracks","isAudioSendEnabled","addAudio","isVideoSendEnabled","addVideo","pc_config","pc_constraints","optional","DtlsSrtpKeyAgreement","googIPv6","rtcConstraints","webRTCAdapter","volume","trickle","iceDone","completed","mySdp","sdpSent","sendSDP","streams","onended","ev","isDataEnabled","onDataChannelStateChange","dcState","ondataopen","createDataChannel","ordered","ondata","simulcast","mediaConstraints","offerToReceiveAudio","isAudioRecvEnabled","offerToReceiveVideo","isVideoRecvEnabled","sendVideo","parameters","getParameters","setParameters","encodings","maxBitrate","ssrc","ssrc_fid","cname","msid","mslabel","insertAt","mline","fid","mungeSdpForSimulcasting","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","prepareWebrtc","webrtcError","addData","mst","constraints","audioSupport","videoSupport","callbackUserMedia","getScreenMedia","gsmCallback","audioStream","screenshareFrameRate","cache","chromever","maxver","googLeakyBucket","maxWidth","screen","maxHeight","minFrameRate","maxFrameRate","chromeMediaSource","pending","postMessage","mozMediaSource","mediaSource","lastTime","currentTime","polly","addEventListener","origin","sourceId","googTemporalLayeredScreencast","chromeMediaSourceId","audioExist","some","videoExist","needAudioDevice","failIfNoAudio","isAudioSendRequired","needVideoDevice","failIfNoVideo","isVideoSendRequired","haveAudioDevice","haveVideoDevice","prepareWebrtcPeer","getVolume","timer","stat","isMuted","inStats","googCodecName","bsnow","tsnow","bsbefore","tsbefore","timePassed","bitRate","hangupRequest","eventName","newWebSocket","getServer","unbindWebSocket","removeEventListener","onUnbindMessage","onUnbindError","opaqueId","opaque_id","started","getPlugin","sendRequest","createHandle","extensionId","isExtensionEnabled","checkJanusExtension","useDefaultDependencies","deps","socketCls","fetchOptions","fetching","timerId","race","ok","useOldDependencies","jq","jQuery","payload","xhrFields","usedDependencies","dependencies","reattachMediaStream","oldOBF","onbeforeunload","charSet","randomPoz","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","fbemitter","EventSubscriptionVendor","emptyFunction","invariant","BaseEventEmitter","_subscriber","_currentSubscription","addSubscription","once","removeCurrentListener","removeAllSubscriptions","removeSubscription","listeners","getSubscriptionsForType","thatReturnsTrue","ii","__emitToSubscription","EventSubscription","_subscriptionsForType","subscriptionsForType","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsNull","thatReturnsThis","thatReturnsArgument"],"mappings":"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","file":"connectycube.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"nativescript-xmpp-client\"), require(\"node-fetch\"), require(\"form-data\"), require(\"node-xmpp-client\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"nativescript-xmpp-client\", \"node-fetch\", \"form-data\", \"node-xmpp-client\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ConnectyCube\"] = factory(require(\"nativescript-xmpp-client\"), require(\"node-fetch\"), require(\"form-data\"), require(\"node-xmpp-client\"));\n\telse\n\t\troot[\"ConnectyCube\"] = factory(root[\"nativescript-xmpp-client\"], root[\"node-fetch\"], root[\"form-data\"], root[\"node-xmpp-client\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__25__, __WEBPACK_EXTERNAL_MODULE__26__, __WEBPACK_EXTERNAL_MODULE__27__, __WEBPACK_EXTERNAL_MODULE__28__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","const config = require('./cubeConfig'),\n\tUtils = require('./cubeUtils');\n\n// The object for type MongoDB.Bson.ObjectId\n// http://docs.mongodb.org/manual/reference/object-id/\nlet ObjectId = {\n\tmachine: Math.floor(Math.random() * 16777216).toString(16),\n\tpid: Math.floor(Math.random() * 32767).toString(16),\n\tincrement: 0\n};\n\nconst InternalUtils = {\n\tgetEnv: function () {\n\t\treturn Utils.getEnv();\n\t},\n\n\tisWebRTCAvailble: function () {\n\t\treturn Utils.isWebRTCAvailble();\n\t},\n\n\tsafeCallbackCall: function () {\n\t\tlet listenerString = arguments[0].toString(),\n\t\t\tlistenerName = listenerString.split('(')[0].split(' ')[1],\n\t\t\targumentsCopy = [],\n\t\t\tlistenerCall;\n\n\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\targumentsCopy.push(arguments[i]);\n\t\t}\n\n\t\tlistenerCall = argumentsCopy.shift();\n\n\t\ttry {\n\t\t\tlistenerCall.apply(null, argumentsCopy);\n\t\t} catch (err) {\n\t\t\tif (listenerName === '') {\n\t\t\t\tconsole.error('Error: ' + err);\n\t\t\t} else {\n\t\t\t\tconsole.error('Error in listener ' + listenerName + ': ' + err);\n\t\t\t}\n\t\t}\n\t},\n\n\trandomNonce: function () {\n\t\treturn Math.floor(Math.random() * 10000);\n\t},\n\n\tunixTime: function () {\n\t\treturn Math.floor(Date.now() / 1000);\n\t},\n\n\tgetUrl: function (base, id) {\n\t\tvar resource = id ? '/' + id : '';\n\t\treturn 'https://' + config.endpoints.api + '/' + base + resource + config.urls.type;\n\t},\n\n\tisArray: function (arr) {\n\t\treturn Object.prototype.toString.call(arr) === '[object Array]';\n\t},\n\n\tisObject: function (obj) {\n\t\treturn Object.prototype.toString.call(obj) === '[object Object]';\n\t},\n\n\tisFunction: function (func) {\n\t\treturn !!(func && func.constructor && func.call && func.apply);\n\t},\n\n\t// Generating BSON ObjectId and converting it to a 24 character string representation\n\t// Changed from https://github.com/justaprogrammer/ObjectId.js/blob/master/src/main/javascript/Objectid.js\n\tgetBsonObjectId: function () {\n\t\tlet timestamp = this.unixTime().toString(16),\n\t\t\tincrement = (ObjectId.increment++).toString(16);\n\n\t\tif (increment > 0xffffff) ObjectId.increment = 0;\n\n\t\treturn (\n\t\t\t'00000000'.substr(0, 8 - timestamp.length) +\n\t\t\ttimestamp +\n\t\t\t'000000'.substr(0, 6 - ObjectId.machine.length) +\n\t\t\tObjectId.machine +\n\t\t\t'0000'.substr(0, 4 - ObjectId.pid.length) +\n\t\t\tObjectId.pid +\n\t\t\t'000000'.substr(0, 6 - increment.length) +\n\t\t\tincrement\n\t\t);\n\t},\n\n\tDLog: function () {\n\t\tconst self = this;\n\n\t\tif (self.loggers) {\n\t\t\tfor (let i = 0; i < self.loggers.length; ++i) {\n\t\t\t\tself.loggers[i](arguments);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet logger;\n\n\t\tself.loggers = [];\n\n\t\tlet consoleLoggerFunction = function () {\n\t\t\tlet logger = function (args) {\n\t\t\t\tconsole.log.apply(console, Array.prototype.slice.call(args));\n\t\t\t};\n\n\t\t\treturn logger;\n\t\t};\n\n\t\t// Build loggers\n\t\t// format \"debug: { }\"\n\n\t\tif (typeof config.debug === 'object') {\n\t\t\tif (typeof config.debug.mode === 'number') {\n\t\t\t\tif (config.debug.mode == 1) {\n\t\t\t\t\tlogger = consoleLoggerFunction();\n\t\t\t\t\tself.loggers.push(logger);\n\t\t\t\t}\n\t\t\t} else if (typeof config.debug.mode === 'object') {\n\t\t\t\tconfig.debug.mode.forEach(function (mode) {\n\t\t\t\t\tif (mode === 1) {\n\t\t\t\t\t\tlogger = consoleLoggerFunction();\n\t\t\t\t\t\tself.loggers.push(logger);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// format \"debug: true\"\n\t\t\t// backward compatibility\n\t\t} else if (typeof config.debug === 'boolean') {\n\t\t\tif (config.debug) {\n\t\t\t\tlogger = consoleLoggerFunction();\n\t\t\t\tself.loggers.push(logger);\n\t\t\t}\n\t\t}\n\n\t\tif (self.loggers) {\n\t\t\tfor (let j = 0; j < self.loggers.length; ++j) {\n\t\t\t\tself.loggers[j](arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tgetError: function (code, detail, moduleName) {\n\t\tlet errorMsg = {\n\t\t\tcode: code,\n\t\t\tstatus: 'error',\n\t\t\tdetail: detail\n\t\t};\n\n\t\tswitch (code) {\n\t\t\tcase 401:\n\t\t\t\terrorMsg.message = 'Unauthorized';\n\t\t\t\tbreak;\n\n\t\t\tcase 403:\n\t\t\t\terrorMsg.message = 'Forbidden';\n\t\t\t\tbreak;\n\n\t\t\tcase 408:\n\t\t\t\terrorMsg.message = 'Request Timeout';\n\t\t\t\tbreak;\n\n\t\t\tcase 422:\n\t\t\t\terrorMsg.message = 'Unprocessable Entity';\n\t\t\t\tbreak;\n\n\t\t\tcase 502:\n\t\t\t\terrorMsg.message = 'Bad Gateway';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\terrorMsg.message = 'Unknown error';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.DLog('[' + moduleName + ']', 'Error:', detail);\n\n\t\treturn errorMsg;\n\t},\n\n\tisExpiredSessionError: function (error) {\n\t\ttry {\n\t\t\treturn error && error.code === 401 && error.message.errors.base[0] === 'Required session does not exist';\n\t\t} catch (ex) {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\tMergeArrayOfObjects: function (arrayTo, arrayFrom) {\n\t\tconst merged = JSON.parse(JSON.stringify(arrayTo));\n\n\t\tfirstLevel: for (let i = 0; i < arrayFrom.length; i++) {\n\t\t\tconst newItem = arrayFrom[i];\n\n\t\t\tfor (let j = 0; j < merged.length; j++) {\n\t\t\t\tif (newItem.user_id === merged[j].user_id) {\n\t\t\t\t\tmerged[j] = newItem;\n\t\t\t\t\tcontinue firstLevel;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmerged.push(newItem);\n\t\t}\n\t\treturn merged;\n\t},\n\n\ttoBase64: function (str) {\n\t\tif (this.getEnv().browser) {\n\t\t\treturn btoa(\n\t\t\t\tencodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n\t\t\t\t\treturn String.fromCharCode('0x' + p1);\n\t\t\t\t})\n\t\t\t);\n\t\t} else if (this.getEnv().reactnative) {\n\t\t\treturn global.btoa(str);\n\t\t} else {\n\t\t\t// Node.js & Native Script\n\t\t\treturn new Buffer(str).toString('base64');\n\t\t}\n\t}\n};\n\nmodule.exports = InternalUtils;\n","let config = {\n    version: '1.7.2',\n    creds: {\n        appId: '',\n        authKey: '',\n        authSecret: ''\n    },\n    endpoints: {\n        api: 'api.connectycube.com',\n        chat: 'chat.connectycube.com',\n        muc: 'muc.chat.connectycube.com'\n    },\n    hash: 'sha1',\n    chatProtocol: {\n        bosh: 'https://chat.connectycube.com:5281',\n        websocket: 'wss://chat.connectycube.com:5291',\n        active: 2\n    },\n    webSession: {\n        getSessionTimeInterval: 3,\n        getSessionTimeout: 120\n    },\n    chat: {\n        contactList: {\n            subscriptionMode: {\n                mutual: true\n            }\n        },\n        reconnectionTimeInterval: 5,\n        streamManagement: {\n            enable: false\n        }\n    },\n    videochat: {\n        answerTimeInterval: 60,\n        dialingTimeInterval: 5,\n        disconnectTimeInterval: 30,\n        statsReportTimeInterval: false,\n        iceServers: [\n            {\n                urls: 'stun:stun.l.google.com:19302'\n            },\n            {\n                urls: 'stun:turn.connectycube.com'\n            },\n            {\n                urls: 'turn:turn.connectycube.com:5349?transport=udp',\n                username: 'connectycube',\n                credential: '4c29501ca9207b7fb9c4b4b6b04faeb1'\n            },\n            {\n                urls: 'turn:turn.connectycube.com:5349?transport=tcp',\n                username: 'connectycube',\n                credential: '4c29501ca9207b7fb9c4b4b6b04faeb1'\n            }\n        ]\n    },\n    urls: {\n        session: 'session',\n        webSession: 'session/web',\n        login: 'login',\n        users: 'users',\n        chat: 'chat',\n        blobs: 'blobs',\n        subscriptions: 'subscriptions',\n        events: 'events',\n        data: 'data',\n        addressbook: 'address_book',\n        addressbookRegistered: 'address_book/registered_users',\n        type: '.json'\n    },\n    on: {\n        sessionExpired: null\n    },\n    timeout: null,\n    debug: {\n        mode: 0\n    }\n};\n\nconfig.set = function (options) {\n    if (typeof options.endpoints === 'object' && options.endpoints.chat) {\n        config.endpoints.muc = 'muc.' + options.endpoints.chat;\n        config.chatProtocol.bosh = 'https://' + options.endpoints.chat + ':5281';\n        config.chatProtocol.websocket = 'wss://' + options.endpoints.chat + ':5291';\n    }\n\n    Object.keys(options).forEach(function (key) {\n        if (key !== 'set' && config.hasOwnProperty(key)) {\n            if (typeof options[key] !== 'object') {\n                config[key] = options[key];\n            } else {\n                Object.keys(options[key]).forEach(function (nextkey) {\n                    if (config[key].hasOwnProperty(nextkey)) {\n                        config[key][nextkey] = options[key][nextkey];\n                    }\n                });\n            }\n        }\n    });\n};\n\nmodule.exports = config;\n","const Utils = require('./cubeInternalUtils');\n\nlet fetchImpl,\n\tformDataImpl,\n\tXMPPClient,\n\tXMPPWebSocketTransport;\n\nlet RTCPeerConnection,\n\tRTCSessionDescription,\n\tRTCIceCandidate,\n\tMediaStream,\n\tmediaDevices,\n\tSDPTransform;\n\nif (Utils.getEnv().browser) {\n\tfetchImpl = fetch;\n\tformDataImpl = FormData;\n\tStrophe = require('strophe.js');\n\tObject.assign(window, Strophe);\n\tXMPPClient = require('./cubeStrophe');\n\n\tRTCPeerConnection = window.RTCPeerConnection;\n\tRTCSessionDescription = window.RTCSessionDescription;\n\tRTCIceCandidate = window.RTCIceCandidate;\n\tMediaStream = window.MediaStream;\n\tmediaDevices = navigator.mediaDevices;\n\tSDPTransform = require('sdp-transform');\n} else if (Utils.getEnv().nativescript) {\n\tfetchImpl = fetch;\n\tformDataImpl = FormData;\n\tXMPPClient = require('nativescript-xmpp-client');\n} else if (Utils.getEnv().node) {\n\tfetchImpl = require('node-fetch');\n\tformDataImpl = require('form-data');\n\tXMPPClient = require('node-xmpp-client');\n}\n\nmodule.exports = {\n\tfetchImpl: fetchImpl,\n\tformDataImpl: formDataImpl,\n\tXMPPClient: XMPPClient,\n\tXMPPWebSocketTransport: XMPPWebSocketTransport,\n\tRTCPeerConnection: RTCPeerConnection,\n\tRTCSessionDescription: RTCSessionDescription,\n\tRTCIceCandidate: RTCIceCandidate,\n\tMediaStream: MediaStream,\n\tmediaDevices: mediaDevices,\n\tSDPTransform: SDPTransform\n};\n","'use strict';\n\nconst Utils = require('../cubeInternalUtils'),\n    Config = require('../cubeConfig'),\n    XMPP = require('../cubeDependencies').XMPPClient,\n    ERR_UNKNOWN_INTERFACE = 'Unknown interface. SDK support browser / node env.',\n    MARKERS = {\n        CLIENT: 'jabber:client',\n        CHAT: 'urn:xmpp:chat-markers:0',\n        STATES: 'http://jabber.org/protocol/chatstates',\n        MARKERS: 'urn:xmpp:chat-markers:0',\n        CARBONS: 'urn:xmpp:carbons:2',\n        ROSTER: 'jabber:iq:roster',\n        MUC: 'http://jabber.org/protocol/muc',\n        PRIVACY: 'jabber:iq:privacy',\n        LAST: 'jabber:iq:last'\n    };\n\nvar cbChatHelpers = {\n    MARKERS: MARKERS,\n\n    /**\n     * @param {params} this object may contains Jid or Id property\n     * @return {string} jid of user\n     */\n    buildUserJid: function(params) {\n        var jid;\n\n        if ('userId' in params) {\n            jid = params.userId + '-' + Config.creds.appId + '@' + Config.endpoints.chat;\n\n            if ('resource' in params) {\n                jid = jid + '/' + params.resource;\n            }\n        } else if ('jid' in params) {\n            jid = params.jid;\n        }\n\n        return jid;\n    },\n    buildUserJidLocalPart: function(userId) {\n        return userId + '-' + Config.creds.appId;\n    },\n    createMessageStanza: function(params) {\n        if (Utils.getEnv().browser) {\n            return $msg(params);\n        } else if (Utils.getEnv().reactnative) {\n            return XMPP.xml('message', params);\n        } else {\n            // Node.js & Native Script\n            return new XMPP.Stanza('message', params);\n        }\n    },\n    createIqStanza: function(params) {\n        if (Utils.getEnv().browser) {\n            return $iq(params);\n        } else if (Utils.getEnv().reactnative) {\n            return XMPP.xml('iq', params);\n        } else {\n            // Node.js & Native Script\n            return new XMPP.Stanza('iq', params);\n        }\n    },\n    createPresenceStanza: function(params) {\n        if (Utils.getEnv().browser) {\n            return $pres(params);\n        } else if (Utils.getEnv().reactnative) {\n            return XMPP.xml('presence', params);\n        } else {\n            // Node.js & Native Script\n            return new XMPP.Stanza('presence', params);\n        }\n    },\n    createNonza: function(elementName, params) {\n        if (Utils.getEnv().browser) {\n            return $build(elementName, params);\n        } else if (Utils.getEnv().reactnative) {\n            return XMPP.xml(elementName, params);\n        } else {\n            // Node.js & Native Script\n            return new XMPP.Stanza(elementName, params);\n        }\n    },\n    getAttr: function(el, attrName) {\n        var attr;\n\n        if (!el) {\n            return null;\n        }\n\n        if (typeof el.getAttribute === 'function') {\n            attr = el.getAttribute(attrName);\n        } else if (el.attrs) {\n            attr = el.attrs[attrName];\n        }\n\n        return attr ? attr : null;\n    },\n    getElement: function(stanza, elName) {\n        var el;\n\n        if (typeof stanza.querySelector === 'function') {\n            el = stanza.querySelector(elName);\n        } else if (typeof stanza.getChild === 'function') {\n            el = stanza.getChild(elName);\n        } else {\n            throw ERR_UNKNOWN_INTERFACE;\n        }\n\n        return el ? el : null;\n    },\n    getAllElements: function(stanza, elName) {\n        var el;\n\n        if (typeof stanza.querySelectorAll === 'function') {\n            el = stanza.querySelectorAll(elName);\n        } else if (typeof stanza.getChild === 'function') {\n            el = stanza.getChild(elName);\n        } else {\n            throw ERR_UNKNOWN_INTERFACE;\n        }\n\n        return el ? el : null;\n    },\n    getElementText: function(stanza, elName) {\n        var el, txt;\n\n        if (typeof stanza.querySelector === 'function') {\n            el = stanza.querySelector(elName);\n            txt = el ? el.textContent : null;\n        } else if (typeof stanza.getChildText === 'function') {\n            txt = stanza.getChildText(elName);\n        } else {\n            throw ERR_UNKNOWN_INTERFACE;\n        }\n\n        return txt ? txt : null;\n    },\n    _JStoXML: function(title, obj, msg) {\n        var self = this;\n\n        msg.c(title);\n\n        Object.keys(obj).forEach(function(field) {\n            if (typeof obj[field] === 'object') {\n                self._JStoXML(field, obj[field], msg);\n            } else {\n                msg.c(field)\n                    .t(obj[field])\n                    .up();\n            }\n        });\n\n        msg.up();\n    },\n    _XMLtoJS: function(extension, title, obj) {\n        var self = this;\n\n        extension[title] = {};\n\n        for (var i = 0, len = obj.childNodes.length; i < len; i++) {\n            if (obj.childNodes[i].childNodes.length > 1) {\n                extension[title] = self._XMLtoJS(extension[title], obj.childNodes[i].tagName, obj.childNodes[i]);\n            } else {\n                extension[title][obj.childNodes[i].tagName] = obj.childNodes[i].textContent;\n            }\n        }\n        return extension;\n    },\n    filledExtraParams: function(stanza, extension) {\n        var helper = this;\n\n        Object.keys(extension).forEach(function(field) {\n            if (field === 'attachments') {\n                extension[field].forEach(function(attach) {\n                    if (Utils.getEnv().browser) {\n                        stanza.c('attachment', attach).up();\n                    } else {\n                        stanza\n                            .getChild('extraParams')\n                            .c('attachment', attach)\n                            .up();\n                    }\n                });\n            } else if (typeof extension[field] === 'object') {\n                helper._JStoXML(field, extension[field], stanza);\n            } else {\n                if (Utils.getEnv().browser) {\n                    stanza\n                        .c(field)\n                        .t(extension[field])\n                        .up();\n                } else {\n                    stanza\n                        .getChild('extraParams')\n                        .c(field)\n                        .t(extension[field])\n                        .up();\n                }\n            }\n        });\n\n        stanza.up();\n\n        return stanza;\n    },\n    parseExtraParams: function(extraParams) {\n        var self = this;\n\n        if (!extraParams) {\n            return null;\n        }\n\n        var extension = {};\n\n        var dialogId, attach, attributes;\n\n        var attachments = [];\n\n        if (Utils.getEnv().browser) {\n            for (var i = 0, len = extraParams.childNodes.length; i < len; i++) {\n                // parse attachments\n                if (extraParams.childNodes[i].tagName === 'attachment') {\n                    attach = {};\n                    attributes = extraParams.childNodes[i].attributes;\n\n                    for (var j = 0, len2 = attributes.length; j < len2; j++) {\n                        if (attributes[j].name === 'size') {\n                            attach[attributes[j].name] = parseInt(attributes[j].value);\n                        } else {\n                            attach[attributes[j].name] = attributes[j].value;\n                        }\n                    }\n\n                    attachments.push(attach);\n\n                    // parse 'dialog_id'\n                } else if (extraParams.childNodes[i].tagName === 'dialog_id') {\n                    dialogId = extraParams.childNodes[i].textContent;\n                    extension.dialog_id = dialogId;\n\n                    // parse other user's custom parameters\n                } else {\n                    if (extraParams.childNodes[i].childNodes.length > 1) {\n                        // Firefox issue with 4K XML node limit:\n                        // http://www.coderholic.com/firefox-4k-xml-node-limit/\n                        var nodeTextContentSize = extraParams.childNodes[i].textContent.length;\n\n                        if (nodeTextContentSize > 4096) {\n                            var wholeNodeContent = '';\n                            for (var k = 0; k < extraParams.childNodes[i].childNodes.length; ++k) {\n                                wholeNodeContent += extraParams.childNodes[i].childNodes[k].textContent;\n                            }\n                            extension[extraParams.childNodes[i].tagName] = wholeNodeContent;\n                        } else {\n                            extension = self._XMLtoJS(\n                                extension,\n                                extraParams.childNodes[i].tagName,\n                                extraParams.childNodes[i]\n                            );\n                        }\n                    } else {\n                        extension[extraParams.childNodes[i].tagName] = extraParams.childNodes[i].textContent;\n                    }\n                }\n            }\n        } else {\n            for (var c = 0, lenght = extraParams.children.length; c < lenght; c++) {\n                if (extraParams.children[c].name === 'attachment') {\n                    attach = {};\n                    attributes = extraParams.children[c].attrs;\n\n                    var attrKeys = Object.keys(attributes);\n\n                    for (var l = 0; l < attrKeys.length; l++) {\n                        if (attrKeys[l] === 'size') {\n                            attach.size = parseInt(attributes.size);\n                        } else {\n                            attach[attrKeys[l]] = attributes[attrKeys[l]];\n                        }\n                    }\n\n                    attachments.push(attach);\n                } else if (extraParams.children[c].name === 'dialog_id') {\n                    dialogId = extraParams.getChildText('dialog_id');\n                    extension.dialog_id = dialogId;\n                }\n\n                if (extraParams.children[c].children.length === 1) {\n                    var child = extraParams.children[c];\n\n                    extension[child.name] = child.children[0];\n                }\n            }\n        }\n\n        if (attachments.length > 0) {\n            extension.attachments = attachments;\n        }\n\n        if (extension.moduleIdentifier) {\n            delete extension.moduleIdentifier;\n        }\n\n        return {\n            extension: extension,\n            dialogId: dialogId\n        };\n    },\n    getUniqueId: function(suffix) {\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = (Math.random() * 16) | 0,\n                v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n        if (typeof suffix == 'string' || typeof suffix == 'number') {\n            return uuid + ':' + suffix;\n        } else {\n            return uuid + '';\n        }\n    },\n    getErrorFromXMLNode: function(stanzaError) {\n        var errorElement = this.getElement(stanzaError, 'error');\n        var errorCode = parseInt(this.getAttr(errorElement, 'code'));\n        var errorText = this.getElementText(errorElement, 'text');\n\n        return Utils.getError(errorCode, errorText);\n    }\n};\n\nmodule.exports = cbChatHelpers;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));","'use strict';\n\nvar config = require('../cubeConfig');\nconst Utils = require('../cubeInternalUtils');\n\nvar WebRTCHelpers = {};\n\nWebRTCHelpers = {\n    getUserJid: function(id, appId) {\n        return id + '-' + appId + '@' + config.endpoints.chat;\n    },\n\n    getIdFromNode: function(jid) {\n        if (jid.indexOf('@') < 0) return null;\n        return parseInt(jid.split('@')[0].split('-')[0]);\n    },\n\n    userCurrentJid: function(client) {\n      if (Utils.getEnv().browser) {\n        return client.jid;\n      } else if (Utils.getEnv().reactnative) {\n        return client.jid._local + '@' + client.jid._domain + '/' + client.jid._resource;\n      } else {\n        // Node.js & Native Script\n        return client.jid.user + '@' + client.jid._domain + '/' + client.jid._resource;\n      }\n    },\n\n    trace: function(text) {\n        if (config.debug) {\n            console.log('[VideoChat]:', text);\n        }\n    },\n\n    traceWarning: function(text) {\n        if (config.debug) {\n            console.warn('[VideoChat]:', text);\n        }\n    },\n\n    traceError: function(text) {\n        if (config.debug) {\n            console.error('[VideoChat]:', text);\n        }\n    },\n\n    // Convert Data URI to Blob\n    dataURItoBlob: function(dataURI, contentType) {\n        var arr = [],\n            binary = window.atob(dataURI.split(',')[1]);\n\n        for (var i = 0, len = binary.length; i < len; i++) {\n            arr.push(binary.charCodeAt(i));\n        }\n\n        return new Blob([new Uint8Array(arr)], {type: contentType});\n    },\n\n    /**\n     * It's functions to fixed issue\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1377434\n     */\n    getVersionFirefox: function() {\n        var ua = navigator ? navigator.userAgent : false;\n        var version;\n\n        if (ua) {\n            var ffInfo = ua.match(/(?:firefox)[ \\/](\\d+)/i) || [];\n            version = ffInfo[1] ? + ffInfo[1] : null;\n        }\n\n        return version;\n    },\n\n    getVersionSafari: function() {\n        var ua = navigator ? navigator.userAgent : false;\n        var version;\n\n        if (ua) {\n            var sInfo = ua.match(/(?:safari)[ \\/](\\d+)/i) || [];\n\n            if (sInfo.length) {\n                var sVer = ua.match(/(?:version)[ \\/](\\d+)/i) || [];\n\n                if (sVer) {\n                    version = sVer[1] ? + sVer[1] : null;\n                } else {\n                    version = null;\n                }\n            } else {\n                version = null;\n            }\n        }\n\n        return version;\n    }\n};\n\n/**\n * [SessionConnectionState]\n * @type {Object}\n */\nWebRTCHelpers.SessionConnectionState = {\n    UNDEFINED: 0,\n    CONNECTING: 1,\n    CONNECTED: 2,\n    FAILED: 3,\n    DISCONNECTED: 4,\n    CLOSED: 5,\n    COMPLETED: 6\n};\n\n/**\n * [CallType]\n * @type {Object}\n */\nWebRTCHelpers.CallType = {\n    VIDEO: 1,\n    AUDIO: 2\n};\n\nmodule.exports = WebRTCHelpers;\n","'use strict';\n\nfunction WebRTCSignalingConstants() {}\n\nWebRTCSignalingConstants.MODULE_ID = \"WebRTCVideoChat\";\n\nWebRTCSignalingConstants.SignalingType = {\n    CALL: 'call',\n    ACCEPT: 'accept',\n    REJECT: 'reject',\n    STOP: 'hangUp',\n    CANDIDATE: 'iceCandidates',\n    PARAMETERS_CHANGED: 'update'\n};\n\nmodule.exports = WebRTCSignalingConstants;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const Utils = {\n\tisBrowser: typeof document !== 'undefined',\n\tisReactNative: typeof navigator != 'undefined' && navigator.product == 'ReactNative',\n\tisNativeScript:\n\t\ttypeof global === 'object' && (typeof global.android !== 'undefined' || typeof global.NSObject !== 'undefined'),\n\n\t/**\n\t * [getEnv get a name of an execution environment]\n\t * @return {object} return names of env. (node/browsernativescript/reactnative)\n\t */\n\tgetEnv: function () {\n\t\treturn {\n\t\t\tnativescript: this.isNativeScript,\n\t\t\treactnative: this.isReactNative,\n\t\t\tbrowser: this.isBrowser,\n\t\t\tnode: !this.isBrowser && !this.isNativeScript && !this.isReactNative\n\t\t};\n\t},\n\n\tisWebRTCAvailble: function () {\n\n\t\tlet isAvaible = false;\n\n\t\tif (this.isBrowser) {\n\t\t\tif (window.RTCPeerConnection && window.RTCIceCandidate && window.RTCSessionDescription) {\n\t\t\t\tisAvaible = true;\n\t\t\t}\n\t\t} else if (this.isReactNative){\n\t\t\tisAvaible = true;\n\t\t}\n\n\t\treturn isAvaible;\n\t}\n};\n\nmodule.exports = Utils;\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // RFC4570\n      //a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    { //a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    { //a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name:'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name:'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));","'use strict';\n\n\n/** Modules */\nvar config = require('../cubeConfig');\nvar Helpers = require('./cubeWebRTCHelpers');\n\nvar sdptransform = require('../cubeDependencies').SDPTransform;\n\nvar RTCPeerConnection = require('../cubeDependencies').RTCPeerConnection;\nvar RTCSessionDescription = require('../cubeDependencies').RTCSessionDescription;\nvar RTCIceCandidate = require('../cubeDependencies').RTCIceCandidate;\nvar MediaStream = require('../cubeDependencies').MediaStream;\n\nRTCPeerConnection.State = {\n    NEW: 1,\n    CONNECTING: 2,\n    CHECKING: 3,\n    CONNECTED: 4,\n    DISCONNECTED: 5,\n    FAILED: 6,\n    CLOSED: 7,\n    COMPLETED: 8\n};\n\nRTCPeerConnection.prototype._init = function(delegate, userID, sessionID, type) {\n    Helpers.trace('RTCPeerConnection init. userID: ' + userID + ', sessionID: ' + sessionID + ', type: ' + type);\n\n    this.delegate = delegate;\n\n    this.sessionID = sessionID;\n    this.userID = userID;\n    this.type = type;\n    this.remoteSDP = null;\n\n    this.state = RTCPeerConnection.State.NEW;\n\n    this.onicecandidate = this.onIceCandidateCallback.bind(this);\n    this.onsignalingstatechange = this.onSignalingStateCallback.bind(this);\n    this.oniceconnectionstatechange = this.onIceConnectionStateCallback.bind(this);\n\n    if (Helpers.getVersionSafari() >= 11) {\n        this.remoteStream = new MediaStream();\n        this.ontrack = this.onAddRemoteMediaCallback.bind(this);\n        this.onStatusClosedChecker = undefined;\n    } else {\n        this.remoteStream = null;\n        this.onaddstream = this.onAddRemoteMediaCallback.bind(this);\n    }\n\n    /** We use this timer interval to dial a user - produce the call requests each N seconds. */\n    this.dialingTimer = null;\n    this.answerTimeInterval = 0;\n    this.statsReportTimer = null;\n\n    this.iceCandidates = [];\n};\n\nRTCPeerConnection.prototype.release = function(){\n    this._clearDialingTimer();\n    this._clearStatsReportTimer();\n\n    if (this.connectionState !== 'closed') {\n        this.close();\n    }\n\n    // TODO: 'closed' state doesn't fires on Safari 11 (do it manually)\n    if (Helpers.getVersionSafari() >= 11) {\n        this.onIceConnectionStateCallback();\n    }\n};\n\nRTCPeerConnection.prototype.updateRemoteSDP = function(newSDP){\n    if (!newSDP) {\n        throw new Error(\"sdp string can't be empty.\");\n    } else {\n        this.remoteSDP = newSDP;\n    }\n};\n\nRTCPeerConnection.prototype.getRemoteSDP = function(){\n    return this.remoteSDP;\n};\n\nRTCPeerConnection.prototype.setRemoteSessionDescription = function(type, remoteSessionDescription, callback) {\n    var self = this,\n        desc = new RTCSessionDescription({sdp: remoteSessionDescription, type: type}),\n        ffVersion = Helpers.getVersionFirefox();\n\n    if (ffVersion !== null && (ffVersion === 56 || ffVersion === 57) && !self.delegate.bandwidth) {\n        desc.sdp = _modifySDPforFixIssueFFAndFreezes(desc.sdp);\n    } else {\n        desc.sdp = setMediaBitrate(desc.sdp, 'video', self.delegate.bandwidth);\n    }\n\n    function successCallback(desc) {\n        callback(null);\n    }\n\n    function errorCallback(error) {\n        callback(error);\n    }\n\n    self.setRemoteDescription(desc).then(successCallback, errorCallback);\n};\n\nRTCPeerConnection.prototype.addLocalStream = function(localStream){\n    if (localStream) {\n        this.addStream(localStream);\n    } else {\n        throw new Error(\"'RTCPeerConnection.addStream' error: stream is 'null'.\");\n    }\n};\n\nRTCPeerConnection.prototype.getAndSetLocalSessionDescription = function(callType, callback) {\n    var self = this;\n\n    self.state = RTCPeerConnection.State.CONNECTING;\n\n    if (self.type === 'offer') {\n        // Additional parameters for SDP Constraints\n        // http://www.w3.org/TR/webrtc/#h-offer-answer-options\n\n        self.createOffer().then(function(offer) {\n            offer.sdp = setMediaBitrate(offer.sdp, 'video', self.delegate.bandwidth);\n            successCallback(offer);\n        }).catch(function(reason) {\n            errorCallback(reason);\n        });\n\n    } else {\n        self.createAnswer().then(function(answer) {\n            answer.sdp = setMediaBitrate(answer.sdp, 'video', self.delegate.bandwidth);\n            successCallback(answer);\n        }).catch(function(reason) {\n            errorCallback(reason);\n        });\n    }\n\n    function successCallback(desc) {\n        /**\n         * It's to fixed issue\n         * https://bugzilla.mozilla.org/show_bug.cgi?id=1377434\n         * callType === 2 is audio only\n         */\n        var ffVersion = Helpers.getVersionFirefox();\n\n        if (ffVersion !== null && ffVersion < 55 && callType === 2 && self.type === 'offer') {\n            desc.sdp = _modifySDPforFixIssue(desc.sdp);\n        }\n\n        self.setLocalDescription(desc).then(function() {\n            callback(null);\n        }).catch(function(error) {\n            errorCallback(error);\n        });\n    }\n\n    function errorCallback(error) {\n        callback(error);\n    }\n};\n\nRTCPeerConnection.prototype.addCandidates = function(iceCandidates) {\n    var candidate;\n\n    for (var i = 0, len = iceCandidates.length; i < len; i++) {\n        candidate = {\n            sdpMLineIndex: iceCandidates[i].sdpMLineIndex,\n            sdpMid: iceCandidates[i].sdpMid,\n            candidate: iceCandidates[i].candidate\n        };\n        this.addIceCandidate(\n            new RTCIceCandidate(candidate),\n            function() {},\n            function(error){\n                Helpers.traceError(\"Error on 'addIceCandidate': \" + error);\n            }\n        );\n    }\n};\n\nRTCPeerConnection.prototype.toString = function sessionToString() {\n    return 'sessionID: ' + this.sessionID + ', userID:  ' + this.userID + ', type: ' + this.type + ', state: ' + this.state;\n};\n\n/**\n * CALLBACKS\n */\nRTCPeerConnection.prototype.onSignalingStateCallback = function() {\n    if (this.signalingState === 'stable' && this.iceCandidates.length > 0){\n        this.delegate.processIceCandidates(this, this.iceCandidates);\n        this.iceCandidates.length = 0;\n    }\n};\n\nRTCPeerConnection.prototype.onIceCandidateCallback = function(event) {\n    var candidate = event.candidate;\n\n    if (candidate) {\n        /**\n         * collecting internally the ice candidates\n         * will send a bit later\n         */\n        var ICECandidate = {\n            sdpMLineIndex: candidate.sdpMLineIndex,\n            sdpMid: candidate.sdpMid,\n            candidate: candidate.candidate\n        };\n\n        if (this.signalingState === 'stable') {\n            this.delegate.processIceCandidates(this, [ICECandidate]);\n        } else {\n            this.iceCandidates.push(ICECandidate);\n        }\n    }\n};\n\n/** handler of remote media stream */\nRTCPeerConnection.prototype.onAddRemoteMediaCallback = function(event) {\n    var self = this;\n\n    if (typeof self.delegate._onRemoteStreamListener === 'function') {\n        if (event.type === 'addstream') {\n            self.remoteStream = event.stream;\n        } else {\n            self.remoteStream.addTrack(event.track);\n        }\n\n        if (((self.delegate.callType == 1) && self.remoteStream.getVideoTracks().length) ||\n            ((self.delegate.callType == 2) && self.remoteStream.getAudioTracks().length)) {\n            this.delegate._onRemoteStreamListener(self.userID, self.remoteStream);\n        }\n\n        self._getStatsWrap();\n    }\n};\n\nRTCPeerConnection.prototype.onIceConnectionStateCallback = function() {\n    Helpers.trace(\"onIceConnectionStateCallback: \" + this.iceConnectionState);\n    var self = this;\n    /**\n     * read more about all states:\n     * http://w3c.github.io/webrtc-pc/#idl-def-RTCIceConnectionState\n     * 'disconnected' happens in a case when a user has killed an application (for example, on iOS/Android via task manager).\n     * So we should notify our user about it.\n     */\n    if (typeof this.delegate._onSessionConnectionStateChangedListener === 'function'){\n        var connectionState = null;\n\n        if (Helpers.getVersionSafari() >= 11) {\n            clearTimeout(this.onStatusClosedChecker);\n        }\n\n        switch (this.iceConnectionState) {\n            case 'checking':\n                this.state = RTCPeerConnection.State.CHECKING;\n                connectionState = Helpers.SessionConnectionState.CONNECTING;\n                break;\n\n            case 'connected':\n                this._clearWaitingReconnectTimer();\n                this.state = RTCPeerConnection.State.CONNECTED;\n                connectionState = Helpers.SessionConnectionState.CONNECTED;\n                break;\n\n            case 'completed':\n                this._clearWaitingReconnectTimer();\n                this.state = RTCPeerConnection.State.COMPLETED;\n                connectionState = Helpers.SessionConnectionState.COMPLETED;\n                break;\n\n            case 'failed':\n                this.state = RTCPeerConnection.State.FAILED;\n                connectionState = Helpers.SessionConnectionState.FAILED;\n                break;\n\n            case 'disconnected':\n                this._startWaitingReconnectTimer();\n                this.state = RTCPeerConnection.State.DISCONNECTED;\n                connectionState = Helpers.SessionConnectionState.DISCONNECTED;\n\n                // repeat to call onIceConnectionStateCallback to get status \"closed\"\n                if (Helpers.getVersionSafari() >= 11) {\n                    this.onStatusClosedChecker = setTimeout(function() {\n                        self.onIceConnectionStateCallback();\n                    }, 500);\n                }\n                break;\n\n            // TODO: this state doesn't fires on Safari 11\n            case 'closed':\n                this._clearWaitingReconnectTimer();\n                this.state = RTCPeerConnection.State.CLOSED;\n                connectionState = Helpers.SessionConnectionState.CLOSED;\n                break;\n\n            default:\n                break;\n        }\n\n        if (connectionState) {\n            self.delegate._onSessionConnectionStateChangedListener(this.userID, connectionState);\n        }\n    }\n};\n\n/**\n * PRIVATE\n */\nRTCPeerConnection.prototype._clearStatsReportTimer = function(){\n    if (this.statsReportTimer){\n        clearInterval(this.statsReportTimer);\n        this.statsReportTimer = null;\n    }\n};\n\nRTCPeerConnection.prototype._getStatsWrap = function() {\n    var self = this,\n        statsReportInterval,\n        lastResult;\n\n    if (config.videochat && config.videochat.statsReportTimeInterval) {\n        if (isNaN(+config.videochat.statsReportTimeInterval)) {\n            Helpers.traceError('statsReportTimeInterval (' + config.videochat.statsReportTimeInterval + ') must be integer.');\n            return;\n        }\n        statsReportInterval = config.videochat.statsReportTimeInterval * 1000;\n\n        var _statsReportCallback = function() {\n            _getStats(self, lastResult, function(results, lastResults) {\n                lastResult = lastResults;\n                self.delegate._onCallStatsReport(self.userID, results, null);\n            }, function errorLog(err) {\n                Helpers.traceError('_getStats error. ' + err.name + ': ' + err.message);\n                self.delegate._onCallStatsReport(self.userID, null, err);\n            });\n        };\n\n        Helpers.trace('Stats tracker has been started.');\n        self.statsReportTimer = setInterval(_statsReportCallback, statsReportInterval);\n    }\n};\n\nRTCPeerConnection.prototype._clearWaitingReconnectTimer = function() {\n    if(this.waitingReconnectTimeoutCallback){\n        Helpers.trace('_clearWaitingReconnectTimer');\n        clearTimeout(this.waitingReconnectTimeoutCallback);\n        this.waitingReconnectTimeoutCallback = null;\n    }\n};\n\nRTCPeerConnection.prototype._startWaitingReconnectTimer = function() {\n    var self = this,\n        timeout = config.videochat.disconnectTimeInterval * 1000,\n        waitingReconnectTimeoutCallback = function() {\n            Helpers.trace('waitingReconnectTimeoutCallback');\n\n            clearTimeout(self.waitingReconnectTimeoutCallback);\n\n            self.release();\n\n            self.delegate._closeSessionIfAllConnectionsClosed();\n        };\n\n    Helpers.trace('_startWaitingReconnectTimer, timeout: ' + timeout);\n\n    self.waitingReconnectTimeoutCallback = setTimeout(waitingReconnectTimeoutCallback, timeout);\n};\n\nRTCPeerConnection.prototype._clearDialingTimer = function(){\n    if(this.dialingTimer){\n        Helpers.trace('_clearDialingTimer');\n\n        clearInterval(this.dialingTimer);\n        this.dialingTimer = null;\n        this.answerTimeInterval = 0;\n    }\n};\n\nRTCPeerConnection.prototype._startDialingTimer = function(extension, withOnNotAnswerCallback){\n    var self = this;\n    var dialingTimeInterval = config.videochat.dialingTimeInterval*1000;\n\n    Helpers.trace('_startDialingTimer, dialingTimeInterval: ' + dialingTimeInterval);\n\n    var _dialingCallback = function(extension, withOnNotAnswerCallback, skipIncrement){\n        if(!skipIncrement){\n            self.answerTimeInterval += config.videochat.dialingTimeInterval*1000;\n        }\n\n        Helpers.trace('_dialingCallback, answerTimeInterval: ' + self.answerTimeInterval);\n\n        if(self.answerTimeInterval >= config.videochat.answerTimeInterval*1000){\n            self._clearDialingTimer();\n\n            if(withOnNotAnswerCallback){\n                self.delegate.processOnNotAnswer(self);\n            }\n        }else{\n            self.delegate.processCall(self, extension);\n        }\n    };\n\n    self.dialingTimer = setInterval(_dialingCallback, dialingTimeInterval, extension, withOnNotAnswerCallback, false);\n\n    // call for the 1st time\n    _dialingCallback(extension, withOnNotAnswerCallback, true);\n};\n\n/**\n * PRIVATE\n */\nfunction _getStats(peer, lastResults, successCallback, errorCallback) {\n    var statistic = {\n        'local': {\n            'audio': {},\n            'video': {},\n            'candidate': {}\n        },\n        'remote': {\n            'audio': {},\n            'video': {},\n            'candidate': {}\n        }\n    };\n\n    if (Helpers.getVersionFirefox()) {\n        var localStream = peer.getLocalStreams().length ? peer.getLocalStreams()[0] : peer.delegate.localStream,\n            localVideoSettings = localStream.getVideoTracks().length ? localStream.getVideoTracks()[0].getSettings() : null;\n\n        statistic.local.video.frameHeight = localVideoSettings && localVideoSettings.height;\n        statistic.local.video.frameWidth = localVideoSettings && localVideoSettings.width;\n    }\n\n    peer.getStats(null).then(function(results) {\n        results.forEach(function(result) {\n            var item;\n\n            if (result.bytesReceived && result.type === 'inbound-rtp') {\n                item = statistic.remote[result.mediaType];\n                item.bitrate = _getBitratePerSecond(result, lastResults, false);\n                item.bytesReceived = result.bytesReceived;\n                item.packetsReceived = result.packetsReceived;\n                item.timestamp = result.timestamp;\n                if (result.mediaType === 'video' && result.framerateMean) {\n                    item.framesPerSecond = Math.round(result.framerateMean * 10) / 10;\n                }\n            } else if (result.bytesSent && result.type === 'outbound-rtp') {\n                item = statistic.local[result.mediaType];\n                item.bitrate = _getBitratePerSecond(result, lastResults, true);\n                item.bytesSent = result.bytesSent;\n                item.packetsSent = result.packetsSent;\n                item.timestamp = result.timestamp;\n                if (result.mediaType === 'video' && result.framerateMean) {\n                    item.framesPerSecond = Math.round(result.framerateMean * 10) / 10;\n                }\n            } else if (result.type === 'local-candidate') {\n                item = statistic.local.candidate;\n                if (result.candidateType === 'host' && result.mozLocalTransport === 'udp' && result.transport === 'udp') {\n                    item.protocol = result.transport;\n                    item.ip = result.ipAddress;\n                    item.port = result.portNumber;\n                } else if (!Helpers.getVersionFirefox()) {\n                    item.protocol = result.protocol;\n                    item.ip = result.ip;\n                    item.port = result.port;\n                }\n            } else if (result.type === 'remote-candidate') {\n                item = statistic.remote.candidate;\n                item.protocol = result.protocol || result.transport;\n                item.ip = result.ip || result.ipAddress;\n                item.port = result.port || result.portNumber;\n            } else if (result.type === 'track' && result.kind === 'video' && !Helpers.getVersionFirefox()) {\n                if (result.remoteSource) {\n                    item = statistic.remote.video;\n                    item.frameHeight = result.frameHeight;\n                    item.frameWidth = result.frameWidth;\n                    item.framesPerSecond = _getFramesPerSecond(result, lastResults, false);\n                } else {\n                    item = statistic.local.video;\n                    item.frameHeight = result.frameHeight;\n                    item.frameWidth = result.frameWidth;\n                    item.framesPerSecond = _getFramesPerSecond(result, lastResults, true);\n                }\n            }\n        });\n        successCallback(statistic, results);\n    }, errorCallback);\n\n    function _getBitratePerSecond(result, lastResults, isLocal) {\n        var lastResult = lastResults && lastResults.get(result.id),\n            seconds = lastResult ? ((result.timestamp - lastResult.timestamp) / 1000) : 5,\n            kilo = 1024,\n            bit = 8,\n            bitrate;\n\n        if (!lastResult) {\n            bitrate = 0;\n        } else if (isLocal) {\n            bitrate = bit * (result.bytesSent - lastResult.bytesSent) / (kilo * seconds);\n        } else {\n            bitrate = bit * (result.bytesReceived - lastResult.bytesReceived) / (kilo * seconds);\n        }\n\n        return Math.round(bitrate);\n    }\n\n    function _getFramesPerSecond(result, lastResults, isLocal) {\n        var lastResult = lastResults && lastResults.get(result.id),\n            seconds = lastResult ? ((result.timestamp - lastResult.timestamp) / 1000) : 5,\n            framesPerSecond;\n\n        if (!lastResult) {\n            framesPerSecond = 0;\n        } else if (isLocal) {\n            framesPerSecond = (result.framesSent - lastResult.framesSent) / seconds;\n        } else {\n            framesPerSecond = (result.framesReceived - lastResult.framesReceived) / seconds;\n        }\n\n        return Math.round(framesPerSecond * 10) / 10;\n    }\n}\n\n/**\n * It's functions to fixed issue\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1377434\n */\nfunction _modifySDPforFixIssue(sdp) {\n    var parsedSDP = sdptransform.parse(sdp);\n\n    parsedSDP.groups = parsedSDP.groups ? parsedSDP.groups : [];\n    parsedSDP.groups.push({\n        mids: 'sdparta_0',\n        type: 'BUNDLE'\n    });\n\n    return sdptransform.write(parsedSDP);\n}\n\n/**\n * It's functions to fixed issue\n * https://blog.mozilla.org/webrtc/when-your-video-freezes/\n */\nfunction _modifySDPforFixIssueFFAndFreezes(sdp) {\n    return setMediaBitrate(sdp, 'video', 12288);\n}\n\nfunction setMediaBitrate(sdp, media, bitrate) {\n    if (!bitrate) {\n        return sdp.replace(/b=AS:.*\\r\\n/, '').replace(/b=TIAS:.*\\r\\n/, '');\n    }\n\n    var lines = sdp.split('\\n'),\n        line = -1,\n        modifier = Helpers.getVersionFirefox() ? 'TIAS' : 'AS',\n        amount = Helpers.getVersionFirefox() ? bitrate*1024 : bitrate;\n\n    for (var i = 0; i < lines.length; i++) {\n        if (lines[i].indexOf(\"m=\"+media) === 0) {\n            line = i;\n            break;\n        }\n    }\n\n    if (line === -1) {\n        return sdp;\n    }\n\n    line++;\n\n    while(lines[line].indexOf('i=') === 0 || lines[line].indexOf('c=') === 0) {\n        line++;\n    }\n\n    if (lines[line].indexOf('b') === 0) {\n        lines[line] = 'b='+modifier+':'+amount;\n        return lines.join('\\n');\n    }\n\n    var newLines = lines.slice(0, line);\n    newLines.push('b='+modifier+':'+amount);\n    newLines = newLines.concat(lines.slice(line, lines.length));\n\n    return newLines.join('\\n');\n}\n\nmodule.exports = RTCPeerConnection;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = require('./EventSubscription');\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","const config = require('./cubeConfig');\n\nfunction ConnectyCube() { }\n\nConnectyCube.prototype = {\n\t/**\n\t * Return current version of ConnectyCube JS SDK\n\t * @memberof ConnectyCube\n\t * */\n\tversion: config.version,\n\n\t/**\n\t * @memberof ConnectyCube\n\t * @param {Object} credentials - A map with App credentials.\n\t * @param {Object} configMap - A map with SDK configs.\n\t */\n\tinit: function (credentials, configMap) {\n\t\tif (configMap && typeof configMap === 'object') {\n\t\t\tconfig.set(configMap);\n\t\t}\n\n\t\t/** include dependencies */\n\t\tconst Proxy = require('./cubeProxy'),\n\t\t\tAuth = require('./cubeAuth'),\n\t\t\tUsers = require('./cubeUsers'),\n\t\t\tStorage = require('./cubeStorage'),\n\t\t\tPushNotifications = require('./cubePushNotifications'),\n\t\t\tData = require('./cubeData'),\n\t\t\tAddressBook = require('./cubeAddressBook'),\n\t\t\tChat = require('./messaging/cubeChat'),\n\t\t\tDialogProxy = require('./messaging/cubeDialog'),\n\t\t\tMessageProxy = require('./messaging/cubeMessage'),\n\t\t\tUtils = require('./cubeUtils');\n\n\t\tthis.service = new Proxy();\n\t\tthis.auth = new Auth(this.service);\n\t\tthis.users = new Users(this.service);\n\t\tthis.storage = new Storage(this.service);\n\t\tthis.pushnotifications = new PushNotifications(this.service);\n\t\tthis.data = new Data(this.service);\n\t\tthis.addressbook = new AddressBook(this.service);\n\t\tthis.chat = new Chat(this.service);\n\t\tthis.chat.dialog = new DialogProxy(this.service);\n\t\tthis.chat.message = new MessageProxy(this.service);\n\t\tthis.utils = Utils;\n\n\t\t// add WebRTC API if API is avaible\n\t\tif (Utils.isWebRTCAvailble()) {\n\t\t\t// p2p calls client\n\t\t\tconst WebRTCClient = require('./videocalling/cubeWebRTCClient');\n\n\t\t\tthis.videochat = new WebRTCClient(this.service, this.chat.xmppClient);\n\t\t\tthis.chat.webrtcSignalingProcessor = this.videochat.signalingProcessor;\n\t\t\t// conf calls client\n\t\t\tthis.videochatconference = require('./videocalling_conference/cubeVideoCallingConference');\n\t\t} else {\n\t\t\tthis.videochat = false;\n\t\t\tthis.videochatconference = false;\n\t\t}\n\n\t\t// Initialization by outside token\n\t\tif (credentials.token) {\n\t\t\tconfig.creds.appId = credentials.appId;\n\t\t\tthis.service.setSession({ token: credentials.token });\n\t\t} else {\n\t\t\tconfig.creds.appId = credentials.appId;\n\t\t\tconfig.creds.authKey = credentials.authKey;\n\t\t\tconfig.creds.authSecret = credentials.authSecret;\n\t\t}\n\t},\n\n\t/**\n\t * Retrieve current session\n\t * @memberof ConnectyCube\n\t * @param {getSessionCallback} callback - The getSessionCallback function.\n\t * */\n\tgetSession: function (callback) {\n\t\t/**\n\t\t * This callback return return error or session object.\n\t\t * @callback getSessionCallback\n\t\t * @param {Object} error - The error object\n\t\t * @param {Object} session - Contains of session object\n\t\t * */\n\t\tthis.auth.getSession(callback);\n\t},\n\n\t/**\n\t * Creat new session.\n\t * @memberof ConnectyCube\n\t * @param {Object} params Parameters.\n\t * @param {createSessionCallback} callback -\n\t * */\n\tcreateSession: function (params, callback) {\n\t\t/**\n\t\t * This callback return error or session object.\n\t\t * @callback createSessionCallback\n\t\t * @param {Object} error - The error object\n\t\t * @param {Object} session - Contains of session object\n\t\t * */\n\t\tthis.auth.createSession(params, callback);\n\t},\n\n\t/**\n\t * Destroy current session.\n\t * @memberof ConnectyCube\n\t * @param {destroySessionCallback} callback - The destroySessionCallback function.\n\t * */\n\tdestroySession: function (callback) {\n\t\t/**\n\t\t * This callback returns error or null.\n\t\t * @callback destroySessionCallback\n\t\t * @param {Object | Null} error - The error object if got en error and null if success.\n\t\t * */\n\t\tthis.auth.destroySession(callback);\n\t},\n\n\t/**\n\t * Create web session.\n\t * @memberof ConnectyCube\n\t * @param {Object} params - Params object with the web session settings.\n\t * @param {createWebSessionCallback} callback - The createWebSessionCallback function.\n\t * */\n\tcreateWebSession: function (params, callback) {\n\t\t/**\n\t\t * This callback return error or SVG with QR code.\n\t\t * @callback createWebSessionCallback\n\t\t * @param {Object} params - Params object for create web session.\n\t\t * @param {number} [params.long=0] - Used to set web session lifetime (\"0\" - 2 hours, \"1\" - 30 days).\n\t\t * @param {Object | Null} error - The error object if got en error and null if success.\n\t\t * @param {Null | String} qr_code - The QR code's XML string if everything goes well and null on error.\n\t\t * */\n\t\tthis.auth.createWebSession(params, callback);\n\t},\n\n\t/**\n\t * Check the web session state and wait until a user_id field is upgraded.\n\t * A common flow here is when a mobile phone scans a QR code and then upgrade a Web session token with its user_id.\n\t * @memberof ConnectyCube\n\t * @param {checkWebSessionUntilUpgradeCallback} callback - The checkWebSessionUntilUpgradeCallback function.\n\t * @returns {Number} - The timer's ID.\n\t * */\n\tcheckWebSessionUntilUpgrade: function (callback) {\n\t\t/**\n\t\t * This callback return error or updated web session.\n\t\t * @callback checkWebSessionUntilUpgradeCallback\n\t\t * @param {Object | Null} error - The timeout error object and null if success.\n\t\t * @param {Null | Object} session - The upgraded session object if everything goes well and null on error.\n\t\t * */\n\t\treturn this.auth.checkWebSessionUntilUpgrade(callback);\n\t},\n\n\t/**\n\t * Upgrade the web session.\n\t * @memberof ConnectyCube\n\t * @param {upgradeWebSessionCallback} callback - The upgradeWebSessionCallback function.\n\t * */\n\tupgradeWebSession: function (webToken, callback) {\n\t\t/**\n\t\t * This callback return error or null.\n\t\t * @callback upgradeWebSessionCallback\n\t\t * @param {Object | Null} error - The error object if got en error and null if success.\n\t\t * */\n\t\tthis.auth.upgradeWebSession(webToken, callback);\n\t},\n\n\t/**\n\t * User login.\n\t * @memberof ConnectyCube\n\t * @param {Object} params - Params object for login into the session.\n\t * @param {loginCallback} callback - The loginCallback function.\n\t * */\n\tlogin: function (params, callback) {\n\t\t/**\n\t\t * This callback return error or user Object.\n\t\t * @callback loginCallback\n\t\t * @param {Object | Null} error - The error object if got en error and null if success.\n\t\t * @param {Null | Object} result - User data object if everything goes well and null on error.\n\t\t * */\n\t\tthis.auth.login(params, callback);\n\t},\n\n\t/**\n\t * User logout.\n\t * @memberof ConnectyCube\n\t * @param {logoutCallback} callback - The logoutCallback function.\n\t * */\n\tlogout: function (callback) {\n\t\t/**\n\t\t * This callback return error or null.\n\t\t * @callback logoutCallback\n\t\t * @param {Object | Null} error - The error object if got en error and null if success.\n\t\t * */\n\t\tthis.auth.logout(callback);\n\t}\n};\n\n/**\n * @namespace\n */\nlet CB = new ConnectyCube();\nCB.ConnectyCube = ConnectyCube;\n\nmodule.exports = CB;\n","const config = require('./cubeConfig'),\n\tUtils = require('./cubeInternalUtils'),\n\tfetchImpl = require('./cubeDependencies').fetchImpl,\n\tformDataImpl = require('./cubeDependencies').formDataImpl;\n\nfunction ServiceProxy() {\n\tthis.sdkInstance = {\n\t\tconfig: config,\n\t\tsession: null\n\t};\n\n\tthis.currentUserId = null;\n\n\tthis.reqCount = 0;\n}\n\nServiceProxy.prototype = {\n\tsetSession: function (session) {\n\t\tthis.sdkInstance.session = session;\n\t},\n\n\tgetSession: function () {\n\t\treturn this.sdkInstance.session;\n\t},\n\n\tsetCurrentUserId: function (userId) {\n\t\tthis.currentUserId = userId;\n\t},\n\n\tgetCurrentUserId: function () {\n\t\treturn this.currentUserId;\n\t},\n\n\thandleResponse: function (error, response, next, retry) {\n\t\t// can add middleware here...\n\t\tif (Utils.isExpiredSessionError(error) && typeof config.on.sessionExpired === 'function') {\n\t\t\tconfig.on.sessionExpired(function () {\n\t\t\t\tnext(error, response);\n\t\t\t}, retry);\n\t\t} else {\n\t\t\tif (error) {\n\t\t\t\tnext(error, null);\n\t\t\t} else {\n\t\t\t\tnext(null, response);\n\t\t\t}\n\t\t}\n\t},\n\n\tlogRequest: function (params) {\n\t\tlet clonedData;\n\n\t\t++this.reqCount;\n\n\t\tif (params.data && params.data.file) {\n\t\t\tclonedData = JSON.parse(JSON.stringify(params.data));\n\t\t\tclonedData.file = '...';\n\t\t} else if (Utils.getEnv().nativescript) {\n\t\t\tclonedData = JSON.stringify(params.data);\n\t\t} else {\n\t\t\tclonedData = params.data;\n\t\t}\n\n\t\tUtils.DLog(\n\t\t\t'[Request][' + this.reqCount + ']',\n\t\t\t(params.type || 'GET') + ' ' + params.url,\n\t\t\tclonedData ? clonedData : ''\n\t\t);\n\t},\n\n\tajax: function (params, callback) {\n\t\tthis.logRequest(params);\n\n\t\tconst self = this,\n\t\t\tisGetOrHeadType = !params.type || params.type === 'GET' || params.type === 'HEAD',\n\t\t\tcbSessionToken = self.sdkInstance && self.sdkInstance.session && self.sdkInstance.session.token,\n\t\t\tiscbRequest = params.url.indexOf('s3.amazonaws.com') === -1,\n\t\t\tisMultipartFormData = params.contentType === false,\n\t\t\tcbDataType = params.dataType || 'json';\n\n\t\tlet cbUrl = params.url,\n\t\t\tcbRequest = {},\n\t\t\tcbRequestBody,\n\t\t\tcbResponse;\n\n\t\tcbRequest.method = params.type || 'GET';\n\n\t\tif (params.data) {\n\t\t\tcbRequestBody = _getBodyRequest();\n\n\t\t\tif (isGetOrHeadType) {\n\t\t\t\tcbUrl += '?' + cbRequestBody;\n\t\t\t} else {\n\t\t\t\tcbRequest.body = cbRequestBody;\n\t\t\t}\n\t\t}\n\n\t\tif (!isMultipartFormData) {\n\t\t\tcbRequest.headers = {\n\t\t\t\t'Content-Type': params.contentType || 'application/x-www-form-urlencoded; charset=UTF-8'\n\t\t\t};\n\t\t}\n\n\t\tif (iscbRequest) {\n\t\t\tif (!cbRequest.headers) {\n\t\t\t\tcbRequest.headers = {};\n\t\t\t}\n\n\t\t\tcbRequest.headers['CB-SDK'] = 'JS ' + config.version + ' - Client';\n\n\t\t\tif (cbSessionToken) {\n\t\t\t\tcbRequest.headers['CB-Token'] = cbSessionToken;\n\t\t\t}\n\t\t}\n\n\t\tif (config.timeout) {\n\t\t\tcbRequest.timeout = config.timeout;\n\t\t}\n\n\t\tfetchImpl(cbUrl, cbRequest)\n\t\t\t.then(\n\t\t\t\tfunction (response) {\n\t\t\t\t\tcbResponse = response;\n\n\t\t\t\t\tif (cbDataType === 'text') {\n\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\t// Need to research this issue, response doesn't exist if server will return empty body (status 200)\n\t\t\t\t\tcbResponse = {\n\t\t\t\t\t\tstatus: 200\n\t\t\t\t\t};\n\n\t\t\t\t\treturn ' ';\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then(\n\t\t\t\tfunction (body) {\n\t\t\t\t\t_requestCallback(null, cbResponse, body);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t_requestCallback(error);\n\t\t\t\t}\n\t\t\t);\n\n\t\t/*\n         * Private functions\n         * Only for ServiceProxy.ajax() method closure\n         */\n\n\t\tfunction _fixedEncodeURIComponent(str) {\n\t\t\treturn encodeURIComponent(str).replace(/[#$&+,/:;=?@\\[\\]]/g, function (c) {\n\t\t\t\treturn '%' + c.charCodeAt(0).toString(16);\n\t\t\t});\n\t\t}\n\n\t\tfunction _getBodyRequest() {\n\t\t\tconst data = params.data;\n\n\t\t\tlet cbData;\n\n\t\t\tif (isMultipartFormData) {\n\t\t\t\tcbData = new formDataImpl();\n\n\t\t\t\tObject.keys(data).forEach(function (item) {\n\t\t\t\t\tif (params.fileToCustomObject && item === 'file') {\n\t\t\t\t\t\tcbData.append(item, data[item].data, data[item].name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcbData.append(item, params.data[item]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (params.isNeedStringify) {\n\t\t\t\tcbData = JSON.stringify(data);\n\t\t\t} else {\n\t\t\t\tcbData = Object.keys(data)\n\t\t\t\t\t.map(function (k) {\n\t\t\t\t\t\tif (Utils.isObject(data[k])) {\n\t\t\t\t\t\t\treturn Object.keys(data[k])\n\t\t\t\t\t\t\t\t.map(function (v) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t_fixedEncodeURIComponent(k) +\n\t\t\t\t\t\t\t\t\t\t'[' +\n\t\t\t\t\t\t\t\t\t\t(Utils.isArray(data[k]) ? '' : v) +\n\t\t\t\t\t\t\t\t\t\t']=' +\n\t\t\t\t\t\t\t\t\t\t_fixedEncodeURIComponent(data[k][v])\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t\t\t.join('&');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t_fixedEncodeURIComponent(k) +\n\t\t\t\t\t\t\t\t(Utils.isArray(data[k]) ? '[]' : '') +\n\t\t\t\t\t\t\t\t'=' +\n\t\t\t\t\t\t\t\t_fixedEncodeURIComponent(data[k])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.sort()\n\t\t\t\t\t.join('&');\n\t\t\t}\n\n\t\t\treturn cbData;\n\t\t}\n\n\t\tfunction _requestCallback(error, response, body) {\n\t\t\tconst statusCode = response && (response.status || response.statusCode);\n\n\t\t\tlet responseMessage, responseBody;\n\n\t\t\tif (error || (statusCode !== 200 && statusCode !== 201 && statusCode !== 202)) {\n\t\t\t\tlet errorMsg;\n\n\t\t\t\ttry {\n\t\t\t\t\terrorMsg = {\n\t\t\t\t\t\tcode: (response && statusCode) || (error && error.code),\n\t\t\t\t\t\tstatus: (response && response.headers && response.headers.status) || 'error',\n\t\t\t\t\t\tmessage: body || (error && error.errno),\n\t\t\t\t\t\tdetail: (body && body.errors) || (error && error.syscall)\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrorMsg = error;\n\t\t\t\t}\n\n\t\t\t\tresponseBody = body || error || body.errors;\n\t\t\t\tresponseMessage = Utils.getEnv().nativescript ? JSON.stringify(responseBody) : responseBody;\n\n\t\t\t\tUtils.DLog('[Response][' + self.reqCount + ']', 'error', statusCode, responseMessage);\n\n\t\t\t\tif (params.url.indexOf(config.urls.session) === -1) {\n\t\t\t\t\tself.handleResponse(errorMsg, null, callback, retry);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(errorMsg, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresponseBody = body && body !== ' ' ? body : 'empty body';\n\t\t\t\tresponseMessage = Utils.getEnv().nativescript ? JSON.stringify(responseBody) : responseBody;\n\n\t\t\t\tUtils.DLog('[Response][' + self.reqCount + ']', responseMessage);\n\n\t\t\t\tif (params.url.indexOf(config.urls.session) === -1) {\n\t\t\t\t\tself.handleResponse(null, body, callback, retry);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, body);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction retry(session) {\n\t\t\tif (!!session) {\n\t\t\t\tself.setSession(session);\n\t\t\t\tself.ajax(params, callback);\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = ServiceProxy;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"strophe\"] = factory();\n\telse\n\t\troot[\"strophe\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/strophe.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n\n/***/ \"./src/bosh.js\":\n/*!*********************!*\\\n  !*** ./src/bosh.js ***!\n  \\*********************/\n/*! no exports provided */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ \"./src/core.js\");\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* global window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject */\n\nvar Strophe = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Strophe;\nvar $build = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$build;\n/** PrivateClass: Strophe.Request\n *  _Private_ helper class that provides a cross implementation abstraction\n *  for a BOSH related XMLHttpRequest.\n *\n *  The Strophe.Request class is used internally to encapsulate BOSH request\n *  information.  It is not meant to be used from user's code.\n */\n\n/** PrivateConstructor: Strophe.Request\n *  Create and initialize a new Strophe.Request object.\n *\n *  Parameters:\n *    (XMLElement) elem - The XML data to be sent in the request.\n *    (Function) func - The function that will be called when the\n *      XMLHttpRequest readyState changes.\n *    (Integer) rid - The BOSH rid attribute associated with this request.\n *    (Integer) sends - The number of times this same request has been sent.\n */\n\nStrophe.Request = function (elem, func, rid, sends) {\n  this.id = ++Strophe._requestId;\n  this.xmlData = elem;\n  this.data = Strophe.serialize(elem); // save original function in case we need to make a new request\n  // from this one.\n\n  this.origFunc = func;\n  this.func = func;\n  this.rid = rid;\n  this.date = NaN;\n  this.sends = sends || 0;\n  this.abort = false;\n  this.dead = null;\n\n  this.age = function () {\n    if (!this.date) {\n      return 0;\n    }\n\n    var now = new Date();\n    return (now - this.date) / 1000;\n  };\n\n  this.timeDead = function () {\n    if (!this.dead) {\n      return 0;\n    }\n\n    var now = new Date();\n    return (now - this.dead) / 1000;\n  };\n\n  this.xhr = this._newXHR();\n};\n\nStrophe.Request.prototype = {\n  /** PrivateFunction: getResponse\n   *  Get a response from the underlying XMLHttpRequest.\n   *\n   *  This function attempts to get a response from the request and checks\n   *  for errors.\n   *\n   *  Throws:\n   *    \"parsererror\" - A parser error occured.\n   *    \"bad-format\" - The entity has sent XML that cannot be processed.\n   *\n   *  Returns:\n   *    The DOM element tree of the response.\n   */\n  getResponse: function getResponse() {\n    var node = null;\n\n    if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n      node = this.xhr.responseXML.documentElement;\n\n      if (node.tagName === \"parsererror\") {\n        Strophe.error(\"invalid response received\");\n        Strophe.error(\"responseText: \" + this.xhr.responseText);\n        Strophe.error(\"responseXML: \" + Strophe.serialize(this.xhr.responseXML));\n        throw new Error(\"parsererror\");\n      }\n    } else if (this.xhr.responseText) {\n      // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n      Strophe.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n      node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n\n      if (!node) {\n        throw new Error('Parsing produced null node');\n      } else if (node.querySelector('parsererror')) {\n        Strophe.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n        Strophe.error(\"responseText: \" + this.xhr.responseText);\n        var error = new Error();\n        error.name = Strophe.ErrorCondition.BAD_FORMAT;\n        throw error;\n      }\n    }\n\n    return node;\n  },\n\n  /** PrivateFunction: _newXHR\n   *  _Private_ helper function to create XMLHttpRequests.\n   *\n   *  This function creates XMLHttpRequests across all implementations.\n   *\n   *  Returns:\n   *    A new XMLHttpRequest.\n   */\n  _newXHR: function _newXHR() {\n    var xhr = null;\n\n    if (window.XMLHttpRequest) {\n      xhr = new XMLHttpRequest();\n\n      if (xhr.overrideMimeType) {\n        xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n      }\n    } else if (window.ActiveXObject) {\n      xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n    } // use Function.bind() to prepend ourselves as an argument\n\n\n    xhr.onreadystatechange = this.func.bind(null, this);\n    return xhr;\n  }\n};\n/** Class: Strophe.Bosh\n *  _Private_ helper class that handles BOSH Connections\n *\n *  The Strophe.Bosh class is used internally by Strophe.Connection\n *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n */\n\n/** File: bosh.js\n *  A JavaScript library to enable BOSH in Strophejs.\n *\n *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n *  More information on BOSH can be found in XEP 124.\n */\n\n/** PrivateConstructor: Strophe.Bosh\n *  Create and initialize a Strophe.Bosh object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n *\n *  Returns:\n *    A new Strophe.Bosh object.\n */\n\nStrophe.Bosh = function (connection) {\n  this._conn = connection;\n  /* request id for body tags */\n\n  this.rid = Math.floor(Math.random() * 4294967295);\n  /* The current session ID. */\n\n  this.sid = null; // default BOSH values\n\n  this.hold = 1;\n  this.wait = 60;\n  this.window = 5;\n  this.errors = 0;\n  this.inactivity = null;\n  this.lastResponseHeaders = null;\n  this._requests = [];\n};\n\nStrophe.Bosh.prototype = {\n  /** Variable: strip\n   *\n   *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n   *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n   *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n   *\n   *  > Strophe.Bosh.prototype.strip = \"body\";\n   *\n   *  This will enable stripping of the body tag in both\n   *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n   */\n  strip: null,\n\n  /** PrivateFunction: _buildBody\n   *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n   *\n   *  Returns:\n   *    A Strophe.Builder with a <body/> element.\n   */\n  _buildBody: function _buildBody() {\n    var bodyWrap = $build('body', {\n      'rid': this.rid++,\n      'xmlns': Strophe.NS.HTTPBIND\n    });\n\n    if (this.sid !== null) {\n      bodyWrap.attrs({\n        'sid': this.sid\n      });\n    }\n\n    if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n      this._cacheSession();\n    }\n\n    return bodyWrap;\n  },\n\n  /** PrivateFunction: _reset\n   *  Reset the connection.\n   *\n   *  This function is called by the reset function of the Strophe Connection\n   */\n  _reset: function _reset() {\n    this.rid = Math.floor(Math.random() * 4294967295);\n    this.sid = null;\n    this.errors = 0;\n\n    if (this._conn._sessionCachingSupported()) {\n      window.sessionStorage.removeItem('strophe-bosh-session');\n    }\n\n    this._conn.nextValidRid(this.rid);\n  },\n\n  /** PrivateFunction: _connect\n   *  _Private_ function that initializes the BOSH connection.\n   *\n   *  Creates and sends the Request that initializes the BOSH connection.\n   */\n  _connect: function _connect(wait, hold, route) {\n    this.wait = wait || this.wait;\n    this.hold = hold || this.hold;\n    this.errors = 0;\n\n    var body = this._buildBody().attrs({\n      \"to\": this._conn.domain,\n      \"xml:lang\": \"en\",\n      \"wait\": this.wait,\n      \"hold\": this.hold,\n      \"content\": \"text/xml; charset=utf-8\",\n      \"ver\": \"1.6\",\n      \"xmpp:version\": \"1.0\",\n      \"xmlns:xmpp\": Strophe.NS.BOSH\n    });\n\n    if (route) {\n      body.attrs({\n        'route': route\n      });\n    }\n\n    var _connect_cb = this._conn._connect_cb;\n\n    this._requests.push(new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n    this._throttledRequestHandler();\n  },\n\n  /** PrivateFunction: _attach\n   *  Attach to an already created and authenticated BOSH session.\n   *\n   *  This function is provided to allow Strophe to attach to BOSH\n   *  sessions which have been created externally, perhaps by a Web\n   *  application.  This is often used to support auto-login type features\n   *  without putting user credentials into the page.\n   *\n   *  Parameters:\n   *    (String) jid - The full JID that is bound by the session.\n   *    (String) sid - The SID of the BOSH session.\n   *    (String) rid - The current RID of the BOSH session.  This RID\n   *      will be used by the next request.\n   *    (Function) callback The connect callback function.\n   *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n   *      time the server will wait before returning an empty result for\n   *      a request.  The default setting of 60 seconds is recommended.\n   *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n   *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n   *      number of connections the server will hold at one time.  This\n   *      should almost always be set to 1 (the default).\n   *    (Integer) wind - The optional HTTBIND window value.  This is the\n   *      allowed range of request ids that are valid.  The default is 5.\n   */\n  _attach: function _attach(jid, sid, rid, callback, wait, hold, wind) {\n    this._conn.jid = jid;\n    this.sid = sid;\n    this.rid = rid;\n    this._conn.connect_callback = callback;\n    this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\n    this._conn.authenticated = true;\n    this._conn.connected = true;\n    this.wait = wait || this.wait;\n    this.hold = hold || this.hold;\n    this.window = wind || this.window;\n\n    this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\n  },\n\n  /** PrivateFunction: _restore\n   *  Attempt to restore a cached BOSH session\n   *\n   *  Parameters:\n   *    (String) jid - The full JID that is bound by the session.\n   *      This parameter is optional but recommended, specifically in cases\n   *      where prebinded BOSH sessions are used where it's important to know\n   *      that the right session is being restored.\n   *    (Function) callback The connect callback function.\n   *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n   *      time the server will wait before returning an empty result for\n   *      a request.  The default setting of 60 seconds is recommended.\n   *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n   *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n   *      number of connections the server will hold at one time.  This\n   *      should almost always be set to 1 (the default).\n   *    (Integer) wind - The optional HTTBIND window value.  This is the\n   *      allowed range of request ids that are valid.  The default is 5.\n   */\n  _restore: function _restore(jid, callback, wait, hold, wind) {\n    var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n\n    if (typeof session !== \"undefined\" && session !== null && session.rid && session.sid && session.jid && (typeof jid === \"undefined\" || jid === null || Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) || // If authcid is null, then it's an anonymous login, so\n    // we compare only the domains:\n    Strophe.getNodeFromJid(jid) === null && Strophe.getDomainFromJid(session.jid) === jid)) {\n      this._conn.restored = true;\n\n      this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n    } else {\n      var error = new Error(\"_restore: no restoreable session.\");\n      error.name = \"StropheSessionError\";\n      throw error;\n    }\n  },\n\n  /** PrivateFunction: _cacheSession\n   *  _Private_ handler for the beforeunload event.\n   *\n   *  This handler is used to process the Bosh-part of the initial request.\n   *  Parameters:\n   *    (Strophe.Request) bodyWrap - The received stanza.\n   */\n  _cacheSession: function _cacheSession() {\n    if (this._conn.authenticated) {\n      if (this._conn.jid && this.rid && this.sid) {\n        window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n          'jid': this._conn.jid,\n          'rid': this.rid,\n          'sid': this.sid\n        }));\n      }\n    } else {\n      window.sessionStorage.removeItem('strophe-bosh-session');\n    }\n  },\n\n  /** PrivateFunction: _connect_cb\n   *  _Private_ handler for initial connection request.\n   *\n   *  This handler is used to process the Bosh-part of the initial request.\n   *  Parameters:\n   *    (Strophe.Request) bodyWrap - The received stanza.\n   */\n  _connect_cb: function _connect_cb(bodyWrap) {\n    var typ = bodyWrap.getAttribute(\"type\");\n\n    if (typ !== null && typ === \"terminate\") {\n      // an error occurred\n      var cond = bodyWrap.getAttribute(\"condition\");\n      Strophe.error(\"BOSH-Connection failed: \" + cond);\n      var conflict = bodyWrap.getElementsByTagName(\"conflict\");\n\n      if (cond !== null) {\n        if (cond === \"remote-stream-error\" && conflict.length > 0) {\n          cond = \"conflict\";\n        }\n\n        this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n      } else {\n        this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n      }\n\n      this._conn._doDisconnect(cond);\n\n      return Strophe.Status.CONNFAIL;\n    } // check to make sure we don't overwrite these if _connect_cb is\n    // called multiple times in the case of missing stream:features\n\n\n    if (!this.sid) {\n      this.sid = bodyWrap.getAttribute(\"sid\");\n    }\n\n    var wind = bodyWrap.getAttribute('requests');\n\n    if (wind) {\n      this.window = parseInt(wind, 10);\n    }\n\n    var hold = bodyWrap.getAttribute('hold');\n\n    if (hold) {\n      this.hold = parseInt(hold, 10);\n    }\n\n    var wait = bodyWrap.getAttribute('wait');\n\n    if (wait) {\n      this.wait = parseInt(wait, 10);\n    }\n\n    var inactivity = bodyWrap.getAttribute('inactivity');\n\n    if (inactivity) {\n      this.inactivity = parseInt(inactivity, 10);\n    }\n  },\n\n  /** PrivateFunction: _disconnect\n   *  _Private_ part of Connection.disconnect for Bosh\n   *\n   *  Parameters:\n   *    (Request) pres - This stanza will be sent before disconnecting.\n   */\n  _disconnect: function _disconnect(pres) {\n    this._sendTerminate(pres);\n  },\n\n  /** PrivateFunction: _doDisconnect\n   *  _Private_ function to disconnect.\n   *\n   *  Resets the SID and RID.\n   */\n  _doDisconnect: function _doDisconnect() {\n    this.sid = null;\n    this.rid = Math.floor(Math.random() * 4294967295);\n\n    if (this._conn._sessionCachingSupported()) {\n      window.sessionStorage.removeItem('strophe-bosh-session');\n    }\n\n    this._conn.nextValidRid(this.rid);\n  },\n\n  /** PrivateFunction: _emptyQueue\n   * _Private_ function to check if the Request queue is empty.\n   *\n   *  Returns:\n   *    True, if there are no Requests queued, False otherwise.\n   */\n  _emptyQueue: function _emptyQueue() {\n    return this._requests.length === 0;\n  },\n\n  /** PrivateFunction: _callProtocolErrorHandlers\n   *  _Private_ function to call error handlers registered for HTTP errors.\n   *\n   *  Parameters:\n   *    (Strophe.Request) req - The request that is changing readyState.\n   */\n  _callProtocolErrorHandlers: function _callProtocolErrorHandlers(req) {\n    var reqStatus = this._getRequestStatus(req);\n\n    var err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n\n    if (err_callback) {\n      err_callback.call(this, reqStatus);\n    }\n  },\n\n  /** PrivateFunction: _hitError\n   *  _Private_ function to handle the error count.\n   *\n   *  Requests are resent automatically until their error count reaches\n   *  5.  Each time an error is encountered, this function is called to\n   *  increment the count and disconnect if the count is too high.\n   *\n   *  Parameters:\n   *    (Integer) reqStatus - The request status.\n   */\n  _hitError: function _hitError(reqStatus) {\n    this.errors++;\n    Strophe.warn(\"request errored, status: \" + reqStatus + \", number of errors: \" + this.errors);\n\n    if (this.errors > 4) {\n      this._conn._onDisconnectTimeout();\n    }\n  },\n\n  /** PrivateFunction: _no_auth_received\n   *\n   * Called on stream start/restart when no stream:features\n   * has been received and sends a blank poll request.\n   */\n  _no_auth_received: function _no_auth_received(callback) {\n    Strophe.warn(\"Server did not yet offer a supported authentication \" + \"mechanism. Sending a blank poll request.\");\n\n    if (callback) {\n      callback = callback.bind(this._conn);\n    } else {\n      callback = this._conn._connect_cb.bind(this._conn);\n    }\n\n    var body = this._buildBody();\n\n    this._requests.push(new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, callback), body.tree().getAttribute(\"rid\")));\n\n    this._throttledRequestHandler();\n  },\n\n  /** PrivateFunction: _onDisconnectTimeout\n   *  _Private_ timeout handler for handling non-graceful disconnection.\n   *\n   *  Cancels all remaining Requests and clears the queue.\n   */\n  _onDisconnectTimeout: function _onDisconnectTimeout() {\n    this._abortAllRequests();\n  },\n\n  /** PrivateFunction: _abortAllRequests\n   *  _Private_ helper function that makes sure all pending requests are aborted.\n   */\n  _abortAllRequests: function _abortAllRequests() {\n    while (this._requests.length > 0) {\n      var req = this._requests.pop();\n\n      req.abort = true;\n      req.xhr.abort(); // jslint complains, but this is fine. setting to empty func\n      // is necessary for IE6\n\n      req.xhr.onreadystatechange = function () {}; // jshint ignore:line\n\n    }\n  },\n\n  /** PrivateFunction: _onIdle\n   *  _Private_ handler called by Strophe.Connection._onIdle\n   *\n   *  Sends all queued Requests or polls with empty Request if there are none.\n   */\n  _onIdle: function _onIdle() {\n    var data = this._conn._data; // if no requests are in progress, poll\n\n    if (this._conn.authenticated && this._requests.length === 0 && data.length === 0 && !this._conn.disconnecting) {\n      Strophe.info(\"no requests during idle cycle, sending \" + \"blank request\");\n      data.push(null);\n    }\n\n    if (this._conn.paused) {\n      return;\n    }\n\n    if (this._requests.length < 2 && data.length > 0) {\n      var body = this._buildBody();\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] !== null) {\n          if (data[i] === \"restart\") {\n            body.attrs({\n              \"to\": this._conn.domain,\n              \"xml:lang\": \"en\",\n              \"xmpp:restart\": \"true\",\n              \"xmlns:xmpp\": Strophe.NS.BOSH\n            });\n          } else {\n            body.cnode(data[i]).up();\n          }\n        }\n      }\n\n      delete this._conn._data;\n      this._conn._data = [];\n\n      this._requests.push(new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n      this._throttledRequestHandler();\n    }\n\n    if (this._requests.length > 0) {\n      var time_elapsed = this._requests[0].age();\n\n      if (this._requests[0].dead !== null) {\n        if (this._requests[0].timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n          this._throttledRequestHandler();\n        }\n      }\n\n      if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\n        Strophe.warn(\"Request \" + this._requests[0].id + \" timed out, over \" + Math.floor(Strophe.TIMEOUT * this.wait) + \" seconds since last activity\");\n\n        this._throttledRequestHandler();\n      }\n    }\n  },\n\n  /** PrivateFunction: _getRequestStatus\n   *\n   *  Returns the HTTP status code from a Strophe.Request\n   *\n   *  Parameters:\n   *    (Strophe.Request) req - The Strophe.Request instance.\n   *    (Integer) def - The default value that should be returned if no\n   *          status value was found.\n   */\n  _getRequestStatus: function _getRequestStatus(req, def) {\n    var reqStatus;\n\n    if (req.xhr.readyState === 4) {\n      try {\n        reqStatus = req.xhr.status;\n      } catch (e) {\n        // ignore errors from undefined status attribute. Works\n        // around a browser bug\n        Strophe.error(\"Caught an error while retrieving a request's status, \" + \"reqStatus: \" + reqStatus);\n      }\n    }\n\n    if (typeof reqStatus === \"undefined\") {\n      reqStatus = typeof def === 'number' ? def : 0;\n    }\n\n    return reqStatus;\n  },\n\n  /** PrivateFunction: _onRequestStateChange\n   *  _Private_ handler for Strophe.Request state changes.\n   *\n   *  This function is called when the XMLHttpRequest readyState changes.\n   *  It contains a lot of error handling logic for the many ways that\n   *  requests can fail, and calls the request callback when requests\n   *  succeed.\n   *\n   *  Parameters:\n   *    (Function) func - The handler for the request.\n   *    (Strophe.Request) req - The request that is changing readyState.\n   */\n  _onRequestStateChange: function _onRequestStateChange(func, req) {\n    Strophe.debug(\"request id \" + req.id + \".\" + req.sends + \" state changed to \" + req.xhr.readyState);\n\n    if (req.abort) {\n      req.abort = false;\n      return;\n    }\n\n    if (req.xhr.readyState !== 4) {\n      // The request is not yet complete\n      return;\n    }\n\n    var reqStatus = this._getRequestStatus(req);\n\n    this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n\n    if (this.disconnecting && reqStatus >= 400) {\n      this._hitError(reqStatus);\n\n      this._callProtocolErrorHandlers(req);\n\n      return;\n    }\n\n    var valid_request = reqStatus > 0 && reqStatus < 500;\n    var too_many_retries = req.sends > this._conn.maxRetries;\n\n    if (valid_request || too_many_retries) {\n      // remove from internal queue\n      this._removeRequest(req);\n\n      Strophe.debug(\"request id \" + req.id + \" should now be removed\");\n    }\n\n    if (reqStatus === 200) {\n      // request succeeded\n      var reqIs0 = this._requests[0] === req;\n      var reqIs1 = this._requests[1] === req; // if request 1 finished, or request 0 finished and request\n      // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n      // restart the other - both will be in the first spot, as the\n      // completed request has been removed from the queue already\n\n      if (reqIs1 || reqIs0 && this._requests.length > 0 && this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n        this._restartRequest(0);\n      }\n\n      this._conn.nextValidRid(Number(req.rid) + 1);\n\n      Strophe.debug(\"request id \" + req.id + \".\" + req.sends + \" got 200\");\n      func(req); // call handler\n\n      this.errors = 0;\n    } else if (reqStatus === 0 || reqStatus >= 400 && reqStatus < 600 || reqStatus >= 12000) {\n      // request failed\n      Strophe.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n\n      this._hitError(reqStatus);\n\n      this._callProtocolErrorHandlers(req);\n\n      if (reqStatus >= 400 && reqStatus < 500) {\n        this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\n\n        this._conn._doDisconnect();\n      }\n    } else {\n      Strophe.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n    }\n\n    if (!valid_request && !too_many_retries) {\n      this._throttledRequestHandler();\n    } else if (too_many_retries && !this._conn.connected) {\n      this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"giving-up\");\n    }\n  },\n\n  /** PrivateFunction: _processRequest\n   *  _Private_ function to process a request in the queue.\n   *\n   *  This function takes requests off the queue and sends them and\n   *  restarts dead requests.\n   *\n   *  Parameters:\n   *    (Integer) i - The index of the request in the queue.\n   */\n  _processRequest: function _processRequest(i) {\n    var _this = this;\n\n    var req = this._requests[i];\n\n    var reqStatus = this._getRequestStatus(req, -1); // make sure we limit the number of retries\n\n\n    if (req.sends > this._conn.maxRetries) {\n      this._conn._onDisconnectTimeout();\n\n      return;\n    }\n\n    var time_elapsed = req.age();\n    var primary_timeout = !isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait);\n    var secondary_timeout = req.dead !== null && req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait);\n    var server_error = req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500);\n\n    if (primary_timeout || secondary_timeout || server_error) {\n      if (secondary_timeout) {\n        Strophe.error(\"Request \".concat(this._requests[i].id, \" timed out (secondary), restarting\"));\n      }\n\n      req.abort = true;\n      req.xhr.abort(); // setting to null fails on IE6, so set to empty function\n\n      req.xhr.onreadystatechange = function () {};\n\n      this._requests[i] = new Strophe.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n      req = this._requests[i];\n    }\n\n    if (req.xhr.readyState === 0) {\n      Strophe.debug(\"request id \" + req.id + \".\" + req.sends + \" posting\");\n\n      try {\n        var content_type = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n        req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n\n        if (typeof req.xhr.setRequestHeader !== 'undefined') {\n          // IE9 doesn't have setRequestHeader\n          req.xhr.setRequestHeader(\"Content-Type\", content_type);\n        }\n\n        if (this._conn.options.withCredentials) {\n          req.xhr.withCredentials = true;\n        }\n      } catch (e2) {\n        Strophe.error(\"XHR open failed: \" + e2.toString());\n\n        if (!this._conn.connected) {\n          this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"bad-service\");\n        }\n\n        this._conn.disconnect();\n\n        return;\n      } // Fires the XHR request -- may be invoked immediately\n      // or on a gradually expanding retry window for reconnects\n\n\n      var sendFunc = function sendFunc() {\n        req.date = new Date();\n\n        if (_this._conn.options.customHeaders) {\n          var headers = _this._conn.options.customHeaders;\n\n          for (var header in headers) {\n            if (Object.prototype.hasOwnProperty.call(headers, header)) {\n              req.xhr.setRequestHeader(header, headers[header]);\n            }\n          }\n        }\n\n        req.xhr.send(req.data);\n      }; // Implement progressive backoff for reconnects --\n      // First retry (send === 1) should also be instantaneous\n\n\n      if (req.sends > 1) {\n        // Using a cube of the retry number creates a nicely\n        // expanding retry window\n        var backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait), Math.pow(req.sends, 3)) * 1000;\n        setTimeout(function () {\n          // XXX: setTimeout should be called only with function expressions (23974bc1)\n          sendFunc();\n        }, backoff);\n      } else {\n        sendFunc();\n      }\n\n      req.sends++;\n\n      if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\n        if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n          this._conn.xmlOutput(req.xmlData.childNodes[0]);\n        } else {\n          this._conn.xmlOutput(req.xmlData);\n        }\n      }\n\n      if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\n        this._conn.rawOutput(req.data);\n      }\n    } else {\n      Strophe.debug(\"_processRequest: \" + (i === 0 ? \"first\" : \"second\") + \" request has readyState of \" + req.xhr.readyState);\n    }\n  },\n\n  /** PrivateFunction: _removeRequest\n   *  _Private_ function to remove a request from the queue.\n   *\n   *  Parameters:\n   *    (Strophe.Request) req - The request to remove.\n   */\n  _removeRequest: function _removeRequest(req) {\n    Strophe.debug(\"removing request\");\n\n    for (var i = this._requests.length - 1; i >= 0; i--) {\n      if (req === this._requests[i]) {\n        this._requests.splice(i, 1);\n      }\n    } // IE6 fails on setting to null, so set to empty function\n\n\n    req.xhr.onreadystatechange = function () {};\n\n    this._throttledRequestHandler();\n  },\n\n  /** PrivateFunction: _restartRequest\n   *  _Private_ function to restart a request that is presumed dead.\n   *\n   *  Parameters:\n   *    (Integer) i - The index of the request in the queue.\n   */\n  _restartRequest: function _restartRequest(i) {\n    var req = this._requests[i];\n\n    if (req.dead === null) {\n      req.dead = new Date();\n    }\n\n    this._processRequest(i);\n  },\n\n  /** PrivateFunction: _reqToData\n   * _Private_ function to get a stanza out of a request.\n   *\n   * Tries to extract a stanza out of a Request Object.\n   * When this fails the current connection will be disconnected.\n   *\n   *  Parameters:\n   *    (Object) req - The Request.\n   *\n   *  Returns:\n   *    The stanza that was passed.\n   */\n  _reqToData: function _reqToData(req) {\n    try {\n      return req.getResponse();\n    } catch (e) {\n      if (e.message !== \"parsererror\") {\n        throw e;\n      }\n\n      this._conn.disconnect(\"strophe-parsererror\");\n    }\n  },\n\n  /** PrivateFunction: _sendTerminate\n   *  _Private_ function to send initial disconnect sequence.\n   *\n   *  This is the first step in a graceful disconnect.  It sends\n   *  the BOSH server a terminate body and includes an unavailable\n   *  presence if authentication has completed.\n   */\n  _sendTerminate: function _sendTerminate(pres) {\n    Strophe.info(\"_sendTerminate was called\");\n\n    var body = this._buildBody().attrs({\n      type: \"terminate\"\n    });\n\n    if (pres) {\n      body.cnode(pres.tree());\n    }\n\n    var req = new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\"));\n\n    this._requests.push(req);\n\n    this._throttledRequestHandler();\n  },\n\n  /** PrivateFunction: _send\n   *  _Private_ part of the Connection.send function for BOSH\n   *\n   * Just triggers the RequestHandler to send the messages that are in the queue\n   */\n  _send: function _send() {\n    var _this2 = this;\n\n    clearTimeout(this._conn._idleTimeout);\n\n    this._throttledRequestHandler();\n\n    this._conn._idleTimeout = setTimeout(function () {\n      return _this2._conn._onIdle();\n    }, 100);\n  },\n\n  /** PrivateFunction: _sendRestart\n   *\n   *  Send an xmpp:restart stanza.\n   */\n  _sendRestart: function _sendRestart() {\n    this._throttledRequestHandler();\n\n    clearTimeout(this._conn._idleTimeout);\n  },\n\n  /** PrivateFunction: _throttledRequestHandler\n   *  _Private_ function to throttle requests to the connection window.\n   *\n   *  This function makes sure we don't send requests so fast that the\n   *  request ids overflow the connection window in the case that one\n   *  request died.\n   */\n  _throttledRequestHandler: function _throttledRequestHandler() {\n    if (!this._requests) {\n      Strophe.debug(\"_throttledRequestHandler called with \" + \"undefined requests\");\n    } else {\n      Strophe.debug(\"_throttledRequestHandler called with \" + this._requests.length + \" requests\");\n    }\n\n    if (!this._requests || this._requests.length === 0) {\n      return;\n    }\n\n    if (this._requests.length > 0) {\n      this._processRequest(0);\n    }\n\n    if (this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window) {\n      this._processRequest(1);\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"./src/core.js\":\n/*!*********************!*\\\n  !*** ./src/core.js ***!\n  \\*********************/\n/*! exports provided: Strophe, $build, $iq, $msg, $pres, SHA1, MD5, default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Strophe\", function() { return Strophe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$build\", function() { return $build; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$iq\", function() { return $iq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$msg\", function() { return $msg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$pres\", function() { return $pres; });\n/* harmony import */ var md5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! md5 */ \"./src/md5.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MD5\", function() { return md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var sha1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sha1 */ \"./src/sha1.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SHA1\", function() { return sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils */ \"./src/utils.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2018, OGG, LLC\n*/\n\n/*global define, document, sessionStorage, setTimeout, clearTimeout, ActiveXObject, DOMParser, btoa, atob, module */\n\n\n\n/** Function: $build\n *  Create a Strophe.Builder.\n *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n *\n *  Parameters:\n *    (String) name - The root element name.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\n\nfunction $build(name, attrs) {\n  return new Strophe.Builder(name, attrs);\n}\n/** Function: $msg\n *  Create a Strophe.Builder with a <message/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <message/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\n\n\nfunction $msg(attrs) {\n  return new Strophe.Builder(\"message\", attrs);\n}\n/** Function: $iq\n *  Create a Strophe.Builder with an <iq/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <iq/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\n\n\nfunction $iq(attrs) {\n  return new Strophe.Builder(\"iq\", attrs);\n}\n/** Function: $pres\n *  Create a Strophe.Builder with a <presence/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <presence/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\n\n\nfunction $pres(attrs) {\n  return new Strophe.Builder(\"presence\", attrs);\n}\n/** Class: Strophe\n *  An object container for all Strophe library functions.\n *\n *  This class is just a container for all the objects and constants\n *  used in the library.  It is not meant to be instantiated, but to\n *  provide a namespace for library objects, constants, and functions.\n */\n\n\nvar Strophe = {\n  /** Constant: VERSION */\n  VERSION: \"1.3.2\",\n\n  /** Constants: XMPP Namespace Constants\n   *  Common namespace constants from the XMPP RFCs and XEPs.\n   *\n   *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n   *  NS.BOSH - BOSH namespace from XEP 206.\n   *  NS.CLIENT - Main XMPP client namespace.\n   *  NS.AUTH - Legacy authentication namespace.\n   *  NS.ROSTER - Roster operations namespace.\n   *  NS.PROFILE - Profile namespace.\n   *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n   *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n   *  NS.MUC - Multi-User Chat namespace from XEP 45.\n   *  NS.SASL - XMPP SASL namespace from RFC 3920.\n   *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n   *  NS.BIND - XMPP Binding namespace from RFC 3920.\n   *  NS.SESSION - XMPP Session namespace from RFC 3920.\n   *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n   *  NS.XHTML - XHTML body namespace from XEP 71.\n   */\n  NS: {\n    HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n    BOSH: \"urn:xmpp:xbosh\",\n    CLIENT: \"jabber:client\",\n    AUTH: \"jabber:iq:auth\",\n    ROSTER: \"jabber:iq:roster\",\n    PROFILE: \"jabber:iq:profile\",\n    DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n    DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n    MUC: \"http://jabber.org/protocol/muc\",\n    SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n    STREAM: \"http://etherx.jabber.org/streams\",\n    FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n    BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n    SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n    VERSION: \"jabber:iq:version\",\n    STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n    XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n    XHTML: \"http://www.w3.org/1999/xhtml\"\n  },\n\n  /** Constants: XHTML_IM Namespace\n   *  contains allowed tags, tag attributes, and css properties.\n   *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n   *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n   *  allowed tags and their attributes.\n   */\n  XHTML: {\n    tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n    attributes: {\n      'a': ['href'],\n      'blockquote': ['style'],\n      'br': [],\n      'cite': ['style'],\n      'em': [],\n      'img': ['src', 'alt', 'style', 'height', 'width'],\n      'li': ['style'],\n      'ol': ['style'],\n      'p': ['style'],\n      'span': ['style'],\n      'strong': [],\n      'ul': ['style'],\n      'body': []\n    },\n    css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration'],\n\n    /** Function: XHTML.validTag\n     *\n     * Utility method to determine whether a tag is allowed\n     * in the XHTML_IM namespace.\n     *\n     * XHTML tag names are case sensitive and must be lower case.\n     */\n    validTag: function validTag(tag) {\n      for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n        if (tag === Strophe.XHTML.tags[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /** Function: XHTML.validAttribute\n     *\n     * Utility method to determine whether an attribute is allowed\n     * as recommended per XEP-0071\n     *\n     * XHTML attribute names are case sensitive and must be lower case.\n     */\n    validAttribute: function validAttribute(tag, attribute) {\n      if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n        for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n          if (attribute === Strophe.XHTML.attributes[tag][i]) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    validCSS: function validCSS(style) {\n      for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n        if (style === Strophe.XHTML.css[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  },\n\n  /** Constants: Connection Status Constants\n   *  Connection status constants for use by the connection handler\n   *  callback.\n   *\n   *  Status.ERROR - An error has occurred\n   *  Status.CONNECTING - The connection is currently being made\n   *  Status.CONNFAIL - The connection attempt failed\n   *  Status.AUTHENTICATING - The connection is authenticating\n   *  Status.AUTHFAIL - The authentication attempt failed\n   *  Status.CONNECTED - The connection has succeeded\n   *  Status.DISCONNECTED - The connection has been terminated\n   *  Status.DISCONNECTING - The connection is currently being terminated\n   *  Status.ATTACHED - The connection has been attached\n   *  Status.REDIRECT - The connection has been redirected\n   *  Status.CONNTIMEOUT - The connection has timed out\n   */\n  Status: {\n    ERROR: 0,\n    CONNECTING: 1,\n    CONNFAIL: 2,\n    AUTHENTICATING: 3,\n    AUTHFAIL: 4,\n    CONNECTED: 5,\n    DISCONNECTED: 6,\n    DISCONNECTING: 7,\n    ATTACHED: 8,\n    REDIRECT: 9,\n    CONNTIMEOUT: 10\n  },\n  ErrorCondition: {\n    BAD_FORMAT: \"bad-format\",\n    CONFLICT: \"conflict\",\n    MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n    NO_AUTH_MECH: \"no-auth-mech\",\n    UNKNOWN_REASON: \"unknown\"\n  },\n\n  /** Constants: Log Level Constants\n   *  Logging level indicators.\n   *\n   *  LogLevel.DEBUG - Debug output\n   *  LogLevel.INFO - Informational output\n   *  LogLevel.WARN - Warnings\n   *  LogLevel.ERROR - Errors\n   *  LogLevel.FATAL - Fatal errors\n   */\n  LogLevel: {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    FATAL: 4\n  },\n\n  /** PrivateConstants: DOM Element Type Constants\n   *  DOM element types.\n   *\n   *  ElementType.NORMAL - Normal element.\n   *  ElementType.TEXT - Text data element.\n   *  ElementType.FRAGMENT - XHTML fragment element.\n   */\n  ElementType: {\n    NORMAL: 1,\n    TEXT: 3,\n    CDATA: 4,\n    FRAGMENT: 11\n  },\n\n  /** PrivateConstants: Timeout Values\n   *  Timeout values for error states.  These values are in seconds.\n   *  These should not be changed unless you know exactly what you are\n   *  doing.\n   *\n   *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n   *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n   *      This defaults to 1.1, and with default wait, 66 seconds.\n   *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n   *      Strophe can detect early failure, it will consider the request\n   *      failed if it doesn't return after\n   *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n   *      This defaults to 0.1, and with default wait, 6 seconds.\n   */\n  TIMEOUT: 1.1,\n  SECONDARY_TIMEOUT: 0.1,\n\n  /** Function: addNamespace\n   *  This function is used to extend the current namespaces in\n   *  Strophe.NS.  It takes a key and a value with the key being the\n   *  name of the new namespace, with its actual value.\n   *  For example:\n   *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n   *\n   *  Parameters:\n   *    (String) name - The name under which the namespace will be\n   *      referenced under Strophe.NS\n   *    (String) value - The actual namespace.\n   */\n  addNamespace: function addNamespace(name, value) {\n    Strophe.NS[name] = value;\n  },\n\n  /** Function: forEachChild\n   *  Map a function over some or all child elements of a given element.\n   *\n   *  This is a small convenience function for mapping a function over\n   *  some or all of the children of an element.  If elemName is null, all\n   *  children will be passed to the function, otherwise only children\n   *  whose tag names match elemName will be passed.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The element to operate on.\n   *    (String) elemName - The child element tag name filter.\n   *    (Function) func - The function to apply to each child.  This\n   *      function should take a single argument, a DOM element.\n   */\n  forEachChild: function forEachChild(elem, elemName, func) {\n    for (var i = 0; i < elem.childNodes.length; i++) {\n      var childNode = elem.childNodes[i];\n\n      if (childNode.nodeType === Strophe.ElementType.NORMAL && (!elemName || this.isTagEqual(childNode, elemName))) {\n        func(childNode);\n      }\n    }\n  },\n\n  /** Function: isTagEqual\n   *  Compare an element's tag name with a string.\n   *\n   *  This function is case sensitive.\n   *\n   *  Parameters:\n   *    (XMLElement) el - A DOM element.\n   *    (String) name - The element name.\n   *\n   *  Returns:\n   *    true if the element's tag name matches _el_, and false\n   *    otherwise.\n   */\n  isTagEqual: function isTagEqual(el, name) {\n    return el.tagName === name;\n  },\n\n  /** PrivateVariable: _xmlGenerator\n   *  _Private_ variable that caches a DOM document to\n   *  generate elements.\n   */\n  _xmlGenerator: null,\n\n  /** PrivateFunction: _makeGenerator\n   *  _Private_ function that creates a dummy XML DOM document to serve as\n   *  an element and text node generator.\n   */\n  _makeGenerator: function _makeGenerator() {\n    var doc; // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n    // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n    // less than 10 in the case of IE9 and below.\n\n    if (document.implementation.createDocument === undefined || document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n      doc = this._getIEXmlDom();\n      doc.appendChild(doc.createElement('strophe'));\n    } else {\n      doc = document.implementation.createDocument('jabber:client', 'strophe', null);\n    }\n\n    return doc;\n  },\n\n  /** Function: xmlGenerator\n   *  Get the DOM document to generate elements.\n   *\n   *  Returns:\n   *    The currently used DOM document.\n   */\n  xmlGenerator: function xmlGenerator() {\n    if (!Strophe._xmlGenerator) {\n      Strophe._xmlGenerator = Strophe._makeGenerator();\n    }\n\n    return Strophe._xmlGenerator;\n  },\n\n  /** PrivateFunction: _getIEXmlDom\n   *  Gets IE xml doc object\n   *\n   *  Returns:\n   *    A Microsoft XML DOM Object\n   *  See Also:\n   *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n   */\n  _getIEXmlDom: function _getIEXmlDom() {\n    var doc = null;\n    var docStrings = [\"Msxml2.DOMDocument.6.0\", \"Msxml2.DOMDocument.5.0\", \"Msxml2.DOMDocument.4.0\", \"MSXML2.DOMDocument.3.0\", \"MSXML2.DOMDocument\", \"MSXML.DOMDocument\", \"Microsoft.XMLDOM\"];\n\n    for (var d = 0; d < docStrings.length; d++) {\n      if (doc === null) {\n        try {\n          doc = new ActiveXObject(docStrings[d]);\n        } catch (e) {\n          doc = null;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return doc;\n  },\n\n  /** Function: xmlElement\n   *  Create an XML DOM element.\n   *\n   *  This function creates an XML DOM element correctly across all\n   *  implementations. Note that these are not HTML DOM elements, which\n   *  aren't appropriate for XMPP stanzas.\n   *\n   *  Parameters:\n   *    (String) name - The name for the element.\n   *    (Array|Object) attrs - An optional array or object containing\n   *      key/value pairs to use as element attributes. The object should\n   *      be in the format {'key': 'value'} or {key: 'value'}. The array\n   *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n   *    (String) text - The text child data for the element.\n   *\n   *  Returns:\n   *    A new XML DOM element.\n   */\n  xmlElement: function xmlElement(name) {\n    if (!name) {\n      return null;\n    }\n\n    var node = Strophe.xmlGenerator().createElement(name); // FIXME: this should throw errors if args are the wrong type or\n    // there are more than two optional args\n\n    for (var a = 1; a < arguments.length; a++) {\n      var arg = arguments[a];\n\n      if (!arg) {\n        continue;\n      }\n\n      if (typeof arg === \"string\" || typeof arg === \"number\") {\n        node.appendChild(Strophe.xmlTextNode(arg));\n      } else if (_typeof(arg) === \"object\" && typeof arg.sort === \"function\") {\n        for (var i = 0; i < arg.length; i++) {\n          var attr = arg[i];\n\n          if (_typeof(attr) === \"object\" && typeof attr.sort === \"function\" && attr[1] !== undefined && attr[1] !== null) {\n            node.setAttribute(attr[0], attr[1]);\n          }\n        }\n      } else if (_typeof(arg) === \"object\") {\n        for (var k in arg) {\n          if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n            node.setAttribute(k, arg[k]);\n          }\n        }\n      }\n    }\n\n    return node;\n  },\n\n  /*  Function: xmlescape\n   *  Excapes invalid xml characters.\n   *\n   *  Parameters:\n   *     (String) text - text to escape.\n   *\n   *  Returns:\n   *      Escaped text.\n   */\n  xmlescape: function xmlescape(text) {\n    text = text.replace(/\\&/g, \"&amp;\");\n    text = text.replace(/</g, \"&lt;\");\n    text = text.replace(/>/g, \"&gt;\");\n    text = text.replace(/'/g, \"&apos;\");\n    text = text.replace(/\"/g, \"&quot;\");\n    return text;\n  },\n\n  /*  Function: xmlunescape\n  *  Unexcapes invalid xml characters.\n  *\n  *  Parameters:\n  *     (String) text - text to unescape.\n  *\n  *  Returns:\n  *      Unescaped text.\n  */\n  xmlunescape: function xmlunescape(text) {\n    text = text.replace(/\\&amp;/g, \"&\");\n    text = text.replace(/&lt;/g, \"<\");\n    text = text.replace(/&gt;/g, \">\");\n    text = text.replace(/&apos;/g, \"'\");\n    text = text.replace(/&quot;/g, \"\\\"\");\n    return text;\n  },\n\n  /** Function: xmlTextNode\n   *  Creates an XML DOM text node.\n   *\n   *  Provides a cross implementation version of document.createTextNode.\n   *\n   *  Parameters:\n   *    (String) text - The content of the text node.\n   *\n   *  Returns:\n   *    A new XML DOM text node.\n   */\n  xmlTextNode: function xmlTextNode(text) {\n    return Strophe.xmlGenerator().createTextNode(text);\n  },\n\n  /** Function: xmlHtmlNode\n   *  Creates an XML DOM html node.\n   *\n   *  Parameters:\n   *    (String) html - The content of the html node.\n   *\n   *  Returns:\n   *    A new XML DOM text node.\n   */\n  xmlHtmlNode: function xmlHtmlNode(html) {\n    var node; //ensure text is escaped\n\n    if (DOMParser) {\n      var parser = new DOMParser();\n      node = parser.parseFromString(html, \"text/xml\");\n    } else {\n      node = new ActiveXObject(\"Microsoft.XMLDOM\");\n      node.async = \"false\";\n      node.loadXML(html);\n    }\n\n    return node;\n  },\n\n  /** Function: getText\n   *  Get the concatenation of all text children of an element.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - A DOM element.\n   *\n   *  Returns:\n   *    A String with the concatenated text of all text element children.\n   */\n  getText: function getText(elem) {\n    if (!elem) {\n      return null;\n    }\n\n    var str = \"\";\n\n    if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n      str += elem.nodeValue;\n    }\n\n    for (var i = 0; i < elem.childNodes.length; i++) {\n      if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n        str += elem.childNodes[i].nodeValue;\n      }\n    }\n\n    return Strophe.xmlescape(str);\n  },\n\n  /** Function: copyElement\n   *  Copy an XML DOM element.\n   *\n   *  This function copies a DOM element and all its descendants and returns\n   *  the new copy.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - A DOM element.\n   *\n   *  Returns:\n   *    A new, copied DOM element tree.\n   */\n  copyElement: function copyElement(elem) {\n    var el;\n\n    if (elem.nodeType === Strophe.ElementType.NORMAL) {\n      el = Strophe.xmlElement(elem.tagName);\n\n      for (var i = 0; i < elem.attributes.length; i++) {\n        el.setAttribute(elem.attributes[i].nodeName, elem.attributes[i].value);\n      }\n\n      for (var _i = 0; _i < elem.childNodes.length; _i++) {\n        el.appendChild(Strophe.copyElement(elem.childNodes[_i]));\n      }\n    } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n      el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n    }\n\n    return el;\n  },\n\n  /** Function: createHtml\n   *  Copy an HTML DOM element into an XML DOM.\n   *\n   *  This function copies a DOM element and all its descendants and returns\n   *  the new copy.\n   *\n   *  Parameters:\n   *    (HTMLElement) elem - A DOM element.\n   *\n   *  Returns:\n   *    A new, copied DOM element tree.\n   */\n  createHtml: function createHtml(elem) {\n    var el;\n\n    if (elem.nodeType === Strophe.ElementType.NORMAL) {\n      var tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n\n      if (Strophe.XHTML.validTag(tag)) {\n        try {\n          el = Strophe.xmlElement(tag);\n\n          for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n            var attribute = Strophe.XHTML.attributes[tag][i];\n            var value = elem.getAttribute(attribute);\n\n            if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n              continue;\n            }\n\n            if (attribute === 'style' && _typeof(value) === 'object' && typeof value.cssText !== 'undefined') {\n              value = value.cssText; // we're dealing with IE, need to get CSS out\n            } // filter out invalid css styles\n\n\n            if (attribute === 'style') {\n              var css = [];\n              var cssAttrs = value.split(';');\n\n              for (var j = 0; j < cssAttrs.length; j++) {\n                var attr = cssAttrs[j].split(':');\n                var cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n\n                if (Strophe.XHTML.validCSS(cssName)) {\n                  var cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                  css.push(cssName + ': ' + cssValue);\n                }\n              }\n\n              if (css.length > 0) {\n                value = css.join('; ');\n                el.setAttribute(attribute, value);\n              }\n            } else {\n              el.setAttribute(attribute, value);\n            }\n          }\n\n          for (var _i2 = 0; _i2 < elem.childNodes.length; _i2++) {\n            el.appendChild(Strophe.createHtml(elem.childNodes[_i2]));\n          }\n        } catch (e) {\n          // invalid elements\n          el = Strophe.xmlTextNode('');\n        }\n      } else {\n        el = Strophe.xmlGenerator().createDocumentFragment();\n\n        for (var _i3 = 0; _i3 < elem.childNodes.length; _i3++) {\n          el.appendChild(Strophe.createHtml(elem.childNodes[_i3]));\n        }\n      }\n    } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n      el = Strophe.xmlGenerator().createDocumentFragment();\n\n      for (var _i4 = 0; _i4 < elem.childNodes.length; _i4++) {\n        el.appendChild(Strophe.createHtml(elem.childNodes[_i4]));\n      }\n    } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n      el = Strophe.xmlTextNode(elem.nodeValue);\n    }\n\n    return el;\n  },\n\n  /** Function: escapeNode\n   *  Escape the node part (also called local part) of a JID.\n   *\n   *  Parameters:\n   *    (String) node - A node (or local part).\n   *\n   *  Returns:\n   *    An escaped node (or local part).\n   */\n  escapeNode: function escapeNode(node) {\n    if (typeof node !== \"string\") {\n      return node;\n    }\n\n    return node.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, \"\\\\5c\").replace(/ /g, \"\\\\20\").replace(/\\\"/g, \"\\\\22\").replace(/\\&/g, \"\\\\26\").replace(/\\'/g, \"\\\\27\").replace(/\\//g, \"\\\\2f\").replace(/:/g, \"\\\\3a\").replace(/</g, \"\\\\3c\").replace(/>/g, \"\\\\3e\").replace(/@/g, \"\\\\40\");\n  },\n\n  /** Function: unescapeNode\n   *  Unescape a node part (also called local part) of a JID.\n   *\n   *  Parameters:\n   *    (String) node - A node (or local part).\n   *\n   *  Returns:\n   *    An unescaped node (or local part).\n   */\n  unescapeNode: function unescapeNode(node) {\n    if (typeof node !== \"string\") {\n      return node;\n    }\n\n    return node.replace(/\\\\20/g, \" \").replace(/\\\\22/g, '\"').replace(/\\\\26/g, \"&\").replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, \"/\").replace(/\\\\3a/g, \":\").replace(/\\\\3c/g, \"<\").replace(/\\\\3e/g, \">\").replace(/\\\\40/g, \"@\").replace(/\\\\5c/g, \"\\\\\");\n  },\n\n  /** Function: getNodeFromJid\n   *  Get the node portion of a JID String.\n   *\n   *  Parameters:\n   *    (String) jid - A JID.\n   *\n   *  Returns:\n   *    A String containing the node.\n   */\n  getNodeFromJid: function getNodeFromJid(jid) {\n    if (jid.indexOf(\"@\") < 0) {\n      return null;\n    }\n\n    return jid.split(\"@\")[0];\n  },\n\n  /** Function: getDomainFromJid\n   *  Get the domain portion of a JID String.\n   *\n   *  Parameters:\n   *    (String) jid - A JID.\n   *\n   *  Returns:\n   *    A String containing the domain.\n   */\n  getDomainFromJid: function getDomainFromJid(jid) {\n    var bare = Strophe.getBareJidFromJid(jid);\n\n    if (bare.indexOf(\"@\") < 0) {\n      return bare;\n    } else {\n      var parts = bare.split(\"@\");\n      parts.splice(0, 1);\n      return parts.join('@');\n    }\n  },\n\n  /** Function: getResourceFromJid\n   *  Get the resource portion of a JID String.\n   *\n   *  Parameters:\n   *    (String) jid - A JID.\n   *\n   *  Returns:\n   *    A String containing the resource.\n   */\n  getResourceFromJid: function getResourceFromJid(jid) {\n    var s = jid.split(\"/\");\n\n    if (s.length < 2) {\n      return null;\n    }\n\n    s.splice(0, 1);\n    return s.join('/');\n  },\n\n  /** Function: getBareJidFromJid\n   *  Get the bare JID from a JID String.\n   *\n   *  Parameters:\n   *    (String) jid - A JID.\n   *\n   *  Returns:\n   *    A String containing the bare JID.\n   */\n  getBareJidFromJid: function getBareJidFromJid(jid) {\n    return jid ? jid.split(\"/\")[0] : null;\n  },\n\n  /** PrivateFunction: _handleError\n   *  _Private_ function that properly logs an error to the console\n   */\n  _handleError: function _handleError(e) {\n    if (typeof e.stack !== \"undefined\") {\n      Strophe.fatal(e.stack);\n    }\n\n    if (e.sourceURL) {\n      Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" + e.line + \" - \" + e.name + \": \" + e.message);\n    } else if (e.fileName) {\n      Strophe.fatal(\"error: \" + this.handler + \" \" + e.fileName + \":\" + e.lineNumber + \" - \" + e.name + \": \" + e.message);\n    } else {\n      Strophe.fatal(\"error: \" + e.message);\n    }\n  },\n\n  /** Function: log\n   *  User overrideable logging function.\n   *\n   *  This function is called whenever the Strophe library calls any\n   *  of the logging functions.  The default implementation of this\n   *  function logs only fatal errors.  If client code wishes to handle the logging\n   *  messages, it should override this with\n   *  > Strophe.log = function (level, msg) {\n   *  >   (user code here)\n   *  > };\n   *\n   *  Please note that data sent and received over the wire is logged\n   *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n   *\n   *  The different levels and their meanings are\n   *\n   *    DEBUG - Messages useful for debugging purposes.\n   *    INFO - Informational messages.  This is mostly information like\n   *      'disconnect was called' or 'SASL auth succeeded'.\n   *    WARN - Warnings about potential problems.  This is mostly used\n   *      to report transient connection errors like request timeouts.\n   *    ERROR - Some error occurred.\n   *    FATAL - A non-recoverable fatal error occurred.\n   *\n   *  Parameters:\n   *    (Integer) level - The log level of the log message.  This will\n   *      be one of the values in Strophe.LogLevel.\n   *    (String) msg - The log message.\n   */\n  log: function log(level, msg) {\n    if (level === this.LogLevel.FATAL && _typeof(window.console) === 'object' && typeof window.console.error === 'function') {\n      window.console.error(msg);\n    }\n  },\n\n  /** Function: debug\n   *  Log a message at the Strophe.LogLevel.DEBUG level.\n   *\n   *  Parameters:\n   *    (String) msg - The log message.\n   */\n  debug: function debug(msg) {\n    this.log(this.LogLevel.DEBUG, msg);\n  },\n\n  /** Function: info\n   *  Log a message at the Strophe.LogLevel.INFO level.\n   *\n   *  Parameters:\n   *    (String) msg - The log message.\n   */\n  info: function info(msg) {\n    this.log(this.LogLevel.INFO, msg);\n  },\n\n  /** Function: warn\n   *  Log a message at the Strophe.LogLevel.WARN level.\n   *\n   *  Parameters:\n   *    (String) msg - The log message.\n   */\n  warn: function warn(msg) {\n    this.log(this.LogLevel.WARN, msg);\n  },\n\n  /** Function: error\n   *  Log a message at the Strophe.LogLevel.ERROR level.\n   *\n   *  Parameters:\n   *    (String) msg - The log message.\n   */\n  error: function error(msg) {\n    this.log(this.LogLevel.ERROR, msg);\n  },\n\n  /** Function: fatal\n   *  Log a message at the Strophe.LogLevel.FATAL level.\n   *\n   *  Parameters:\n   *    (String) msg - The log message.\n   */\n  fatal: function fatal(msg) {\n    this.log(this.LogLevel.FATAL, msg);\n  },\n\n  /** Function: serialize\n   *  Render a DOM element and all descendants to a String.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - A DOM element.\n   *\n   *  Returns:\n   *    The serialized element tree as a String.\n   */\n  serialize: function serialize(elem) {\n    if (!elem) {\n      return null;\n    }\n\n    if (typeof elem.tree === \"function\") {\n      elem = elem.tree();\n    }\n\n    var names = _toConsumableArray(Array(elem.attributes.length).keys()).map(function (i) {\n      return elem.attributes[i].nodeName;\n    });\n\n    names.sort();\n    var result = names.reduce(function (a, n) {\n      return \"\".concat(a, \" \").concat(n, \"=\\\"\").concat(Strophe.xmlescape(elem.attributes.getNamedItem(n).value), \"\\\"\");\n    }, \"<\".concat(elem.nodeName));\n\n    if (elem.childNodes.length > 0) {\n      result += \">\";\n\n      for (var i = 0; i < elem.childNodes.length; i++) {\n        var child = elem.childNodes[i];\n\n        switch (child.nodeType) {\n          case Strophe.ElementType.NORMAL:\n            // normal element, so recurse\n            result += Strophe.serialize(child);\n            break;\n\n          case Strophe.ElementType.TEXT:\n            // text element to escape values\n            result += Strophe.xmlescape(child.nodeValue);\n            break;\n\n          case Strophe.ElementType.CDATA:\n            // cdata section so don't escape values\n            result += \"<![CDATA[\" + child.nodeValue + \"]]>\";\n        }\n      }\n\n      result += \"</\" + elem.nodeName + \">\";\n    } else {\n      result += \"/>\";\n    }\n\n    return result;\n  },\n\n  /** PrivateVariable: _requestId\n   *  _Private_ variable that keeps track of the request ids for\n   *  connections.\n   */\n  _requestId: 0,\n\n  /** PrivateVariable: Strophe.connectionPlugins\n   *  _Private_ variable Used to store plugin names that need\n   *  initialization on Strophe.Connection construction.\n   */\n  _connectionPlugins: {},\n\n  /** Function: addConnectionPlugin\n   *  Extends the Strophe.Connection object with the given plugin.\n   *\n   *  Parameters:\n   *    (String) name - The name of the extension.\n   *    (Object) ptype - The plugin's prototype.\n   */\n  addConnectionPlugin: function addConnectionPlugin(name, ptype) {\n    Strophe._connectionPlugins[name] = ptype;\n  }\n};\n/** Class: Strophe.Builder\n *  XML DOM builder.\n *\n *  This object provides an interface similar to JQuery but for building\n *  DOM elements easily and rapidly.  All the functions except for toString()\n *  and tree() return the object, so calls can be chained.  Here's an\n *  example using the $iq() builder helper.\n *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n *  >     .c('query', {xmlns: 'strophe:example'})\n *  >     .c('example')\n *  >     .toString()\n *\n *  The above generates this XML fragment\n *  > <iq to='you' from='me' type='get' id='1'>\n *  >   <query xmlns='strophe:example'>\n *  >     <example/>\n *  >   </query>\n *  > </iq>\n *  The corresponding DOM manipulations to get a similar fragment would be\n *  a lot more tedious and probably involve several helper variables.\n *\n *  Since adding children makes new operations operate on the child, up()\n *  is provided to traverse up the tree.  To add two children, do\n *  > builder.c('child1', ...).up().c('child2', ...)\n *  The next operation on the Builder will be relative to the second child.\n */\n\n/** Constructor: Strophe.Builder\n *  Create a Strophe.Builder object.\n *\n *  The attributes should be passed in object notation.  For example\n *  > let b = new Builder('message', {to: 'you', from: 'me'});\n *  or\n *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n *\n *  Parameters:\n *    (String) name - The name of the root element.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder.\n */\n\nStrophe.Builder = function (name, attrs) {\n  // Set correct namespace for jabber:client elements\n  if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n    if (attrs && !attrs.xmlns) {\n      attrs.xmlns = Strophe.NS.CLIENT;\n    } else if (!attrs) {\n      attrs = {\n        xmlns: Strophe.NS.CLIENT\n      };\n    }\n  } // Holds the tree being built.\n\n\n  this.nodeTree = Strophe.xmlElement(name, attrs); // Points to the current operation node.\n\n  this.node = this.nodeTree;\n};\n\nStrophe.Builder.prototype = {\n  /** Function: tree\n   *  Return the DOM tree.\n   *\n   *  This function returns the current DOM tree as an element object.  This\n   *  is suitable for passing to functions like Strophe.Connection.send().\n   *\n   *  Returns:\n   *    The DOM tree as a element object.\n   */\n  tree: function tree() {\n    return this.nodeTree;\n  },\n\n  /** Function: toString\n   *  Serialize the DOM tree to a String.\n   *\n   *  This function returns a string serialization of the current DOM\n   *  tree.  It is often used internally to pass data to a\n   *  Strophe.Request object.\n   *\n   *  Returns:\n   *    The serialized DOM tree in a String.\n   */\n  toString: function toString() {\n    return Strophe.serialize(this.nodeTree);\n  },\n\n  /** Function: up\n   *  Make the current parent element the new current element.\n   *\n   *  This function is often used after c() to traverse back up the tree.\n   *  For example, to add two children to the same element\n   *  > builder.c('child1', {}).up().c('child2', {});\n   *\n   *  Returns:\n   *    The Stophe.Builder object.\n   */\n  up: function up() {\n    this.node = this.node.parentNode;\n    return this;\n  },\n\n  /** Function: root\n   *  Make the root element the new current element.\n   *\n   *  When at a deeply nested element in the tree, this function can be used\n   *  to jump back to the root of the tree, instead of having to repeatedly\n   *  call up().\n   *\n   *  Returns:\n   *    The Stophe.Builder object.\n   */\n  root: function root() {\n    this.node = this.nodeTree;\n    return this;\n  },\n\n  /** Function: attrs\n   *  Add or modify attributes of the current element.\n   *\n   *  The attributes should be passed in object notation.  This function\n   *  does not move the current element pointer.\n   *\n   *  Parameters:\n   *    (Object) moreattrs - The attributes to add/modify in object notation.\n   *\n   *  Returns:\n   *    The Strophe.Builder object.\n   */\n  attrs: function attrs(moreattrs) {\n    for (var k in moreattrs) {\n      if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n        if (moreattrs[k] === undefined) {\n          this.node.removeAttribute(k);\n        } else {\n          this.node.setAttribute(k, moreattrs[k]);\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /** Function: c\n   *  Add a child to the current element and make it the new current\n   *  element.\n   *\n   *  This function moves the current element pointer to the child,\n   *  unless text is provided.  If you need to add another child, it\n   *  is necessary to use up() to go back to the parent in the tree.\n   *\n   *  Parameters:\n   *    (String) name - The name of the child.\n   *    (Object) attrs - The attributes of the child in object notation.\n   *    (String) text - The text to add to the child.\n   *\n   *  Returns:\n   *    The Strophe.Builder object.\n   */\n  c: function c(name, attrs, text) {\n    var child = Strophe.xmlElement(name, attrs, text);\n    this.node.appendChild(child);\n\n    if (typeof text !== \"string\" && typeof text !== \"number\") {\n      this.node = child;\n    }\n\n    return this;\n  },\n\n  /** Function: cnode\n   *  Add a child to the current element and make it the new current\n   *  element.\n   *\n   *  This function is the same as c() except that instead of using a\n   *  name and an attributes object to create the child it uses an\n   *  existing DOM element object.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - A DOM element.\n   *\n   *  Returns:\n   *    The Strophe.Builder object.\n   */\n  cnode: function cnode(elem) {\n    var impNode;\n    var xmlGen = Strophe.xmlGenerator();\n\n    try {\n      impNode = xmlGen.importNode !== undefined;\n    } catch (e) {\n      impNode = false;\n    }\n\n    var newElem = impNode ? xmlGen.importNode(elem, true) : Strophe.copyElement(elem);\n    this.node.appendChild(newElem);\n    this.node = newElem;\n    return this;\n  },\n\n  /** Function: t\n   *  Add a child text element.\n   *\n   *  This *does not* make the child the new current element since there\n   *  are no children of text elements.\n   *\n   *  Parameters:\n   *    (String) text - The text data to append to the current element.\n   *\n   *  Returns:\n   *    The Strophe.Builder object.\n   */\n  t: function t(text) {\n    var child = Strophe.xmlTextNode(text);\n    this.node.appendChild(child);\n    return this;\n  },\n\n  /** Function: h\n   *  Replace current element contents with the HTML passed in.\n   *\n   *  This *does not* make the child the new current element\n   *\n   *  Parameters:\n   *    (String) html - The html to insert as contents of current element.\n   *\n   *  Returns:\n   *    The Strophe.Builder object.\n   */\n  h: function h(html) {\n    var fragment = document.createElement('body'); // force the browser to try and fix any invalid HTML tags\n\n    fragment.innerHTML = html; // copy cleaned html into an xml dom\n\n    var xhtml = Strophe.createHtml(fragment);\n\n    while (xhtml.childNodes.length > 0) {\n      this.node.appendChild(xhtml.childNodes[0]);\n    }\n\n    return this;\n  }\n};\n/** PrivateClass: Strophe.Handler\n *  _Private_ helper class for managing stanza handlers.\n *\n *  A Strophe.Handler encapsulates a user provided callback function to be\n *  executed when matching stanzas are received by the connection.\n *  Handlers can be either one-off or persistant depending on their\n *  return value. Returning true will cause a Handler to remain active, and\n *  returning false will remove the Handler.\n *\n *  Users will not use Strophe.Handler objects directly, but instead they\n *  will use Strophe.Connection.addHandler() and\n *  Strophe.Connection.deleteHandler().\n */\n\n/** PrivateConstructor: Strophe.Handler\n *  Create and initialize a new Strophe.Handler.\n *\n *  Parameters:\n *    (Function) handler - A function to be executed when the handler is run.\n *    (String) ns - The namespace to match.\n *    (String) name - The element name to match.\n *    (String) type - The element type to match.\n *    (String) id - The element id attribute to match.\n *    (String) from - The element from attribute to match.\n *    (Object) options - Handler options\n *\n *  Returns:\n *    A new Strophe.Handler object.\n */\n\nStrophe.Handler = function (handler, ns, name, type, id, from, options) {\n  this.handler = handler;\n  this.ns = ns;\n  this.name = name;\n  this.type = type;\n  this.id = id;\n  this.options = options || {\n    'matchBareFromJid': false,\n    'ignoreNamespaceFragment': false\n  }; // BBB: Maintain backward compatibility with old `matchBare` option\n\n  if (this.options.matchBare) {\n    Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n    this.options.matchBareFromJid = this.options.matchBare;\n    delete this.options.matchBare;\n  }\n\n  if (this.options.matchBareFromJid) {\n    this.from = from ? Strophe.getBareJidFromJid(from) : null;\n  } else {\n    this.from = from;\n  } // whether the handler is a user handler or a system handler\n\n\n  this.user = true;\n};\n\nStrophe.Handler.prototype = {\n  /** PrivateFunction: getNamespace\n   *  Returns the XML namespace attribute on an element.\n   *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n   *  URL fragment will be stripped.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The XML element with the namespace.\n   *\n   *  Returns:\n   *    The namespace, with optionally the fragment stripped.\n   */\n  getNamespace: function getNamespace(elem) {\n    var elNamespace = elem.getAttribute(\"xmlns\");\n\n    if (elNamespace && this.options.ignoreNamespaceFragment) {\n      elNamespace = elNamespace.split('#')[0];\n    }\n\n    return elNamespace;\n  },\n\n  /** PrivateFunction: namespaceMatch\n   *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The XML element to test.\n   *\n   *  Returns:\n   *    true if the stanza matches and false otherwise.\n   */\n  namespaceMatch: function namespaceMatch(elem) {\n    var _this = this;\n\n    var nsMatch = false;\n\n    if (!this.ns) {\n      return true;\n    } else {\n      Strophe.forEachChild(elem, null, function (elem) {\n        if (_this.getNamespace(elem) === _this.ns) {\n          nsMatch = true;\n        }\n      });\n      return nsMatch || this.getNamespace(elem) === this.ns;\n    }\n  },\n\n  /** PrivateFunction: isMatch\n   *  Tests if a stanza matches the Strophe.Handler.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The XML element to test.\n   *\n   *  Returns:\n   *    true if the stanza matches and false otherwise.\n   */\n  isMatch: function isMatch(elem) {\n    var from = elem.getAttribute('from');\n\n    if (this.options.matchBareFromJid) {\n      from = Strophe.getBareJidFromJid(from);\n    }\n\n    var elem_type = elem.getAttribute(\"type\");\n\n    if (this.namespaceMatch(elem) && (!this.name || Strophe.isTagEqual(elem, this.name)) && (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) && (!this.id || elem.getAttribute(\"id\") === this.id) && (!this.from || from === this.from)) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /** PrivateFunction: run\n   *  Run the callback on a matching stanza.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The DOM element that triggered the\n   *      Strophe.Handler.\n   *\n   *  Returns:\n   *    A boolean indicating if the handler should remain active.\n   */\n  run: function run(elem) {\n    var result = null;\n\n    try {\n      result = this.handler(elem);\n    } catch (e) {\n      Strophe._handleError(e);\n\n      throw e;\n    }\n\n    return result;\n  },\n\n  /** PrivateFunction: toString\n   *  Get a String representation of the Strophe.Handler object.\n   *\n   *  Returns:\n   *    A String.\n   */\n  toString: function toString() {\n    return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" + this.id + \",\" + this.ns + \")}\";\n  }\n};\n/** PrivateClass: Strophe.TimedHandler\n *  _Private_ helper class for managing timed handlers.\n *\n *  A Strophe.TimedHandler encapsulates a user provided callback that\n *  should be called after a certain period of time or at regular\n *  intervals.  The return value of the callback determines whether the\n *  Strophe.TimedHandler will continue to fire.\n *\n *  Users will not use Strophe.TimedHandler objects directly, but instead\n *  they will use Strophe.Connection.addTimedHandler() and\n *  Strophe.Connection.deleteTimedHandler().\n */\n\n/** PrivateConstructor: Strophe.TimedHandler\n *  Create and initialize a new Strophe.TimedHandler object.\n *\n *  Parameters:\n *    (Integer) period - The number of milliseconds to wait before the\n *      handler is called.\n *    (Function) handler - The callback to run when the handler fires.  This\n *      function should take no arguments.\n *\n *  Returns:\n *    A new Strophe.TimedHandler object.\n */\n\nStrophe.TimedHandler = function (period, handler) {\n  this.period = period;\n  this.handler = handler;\n  this.lastCalled = new Date().getTime();\n  this.user = true;\n};\n\nStrophe.TimedHandler.prototype = {\n  /** PrivateFunction: run\n   *  Run the callback for the Strophe.TimedHandler.\n   *\n   *  Returns:\n   *    true if the Strophe.TimedHandler should be called again, and false\n   *      otherwise.\n   */\n  run: function run() {\n    this.lastCalled = new Date().getTime();\n    return this.handler();\n  },\n\n  /** PrivateFunction: reset\n   *  Reset the last called time for the Strophe.TimedHandler.\n   */\n  reset: function reset() {\n    this.lastCalled = new Date().getTime();\n  },\n\n  /** PrivateFunction: toString\n   *  Get a string representation of the Strophe.TimedHandler object.\n   *\n   *  Returns:\n   *    The string representation.\n   */\n  toString: function toString() {\n    return \"{TimedHandler: \" + this.handler + \"(\" + this.period + \")}\";\n  }\n};\n/** Class: Strophe.Connection\n *  XMPP Connection manager.\n *\n *  This class is the main part of Strophe.  It manages a BOSH or websocket\n *  connection to an XMPP server and dispatches events to the user callbacks\n *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n *  and legacy authentication.\n *\n *  After creating a Strophe.Connection object, the user will typically\n *  call connect() with a user supplied callback to handle connection level\n *  events like authentication failure, disconnection, or connection\n *  complete.\n *\n *  The user will also have several event handlers defined by using\n *  addHandler() and addTimedHandler().  These will allow the user code to\n *  respond to interesting stanzas or do something periodically with the\n *  connection. These handlers will be active once authentication is\n *  finished.\n *\n *  To send data to the connection, use send().\n */\n\n/** Constructor: Strophe.Connection\n *  Create and initialize a Strophe.Connection object.\n *\n *  The transport-protocol for this connection will be chosen automatically\n *  based on the given service parameter. URLs starting with \"ws://\" or\n *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n *  or without a protocol will use BOSH.\n *\n *  To make Strophe connect to the current host you can leave out the protocol\n *  and host part and just pass the path, e.g.\n *\n *  > let conn = new Strophe.Connection(\"/http-bind/\");\n *\n *  Options common to both Websocket and BOSH:\n *  ------------------------------------------\n *\n *  cookies:\n *\n *  The *cookies* option allows you to pass in cookies to be added to the\n *  document. These cookies will then be included in the BOSH XMLHttpRequest\n *  or in the websocket connection.\n *\n *  The passed in value must be a map of cookie names and string values.\n *\n *  > { \"myCookie\": {\n *  >     \"value\": \"1234\",\n *  >     \"domain\": \".example.org\",\n *  >     \"path\": \"/\",\n *  >     \"expires\": expirationDate\n *  >     }\n *  > }\n *\n *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n *  Those cookies need to be set under those domains, for example they can be\n *  set server-side by making a XHR call to that domain to ask it to set any\n *  necessary cookies.\n *\n *  mechanisms:\n *\n *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n *  instance of Strophe.Connection (and therefore your XMPP client) will\n *  support.\n *\n *  The value must be an array of objects with Strophe.SASLMechanism\n *  prototypes.\n *\n *  If nothing is specified, then the following mechanisms (and their\n *  priorities) are registered:\n *\n *      SCRAM-SHA1 - 70\n *      DIGEST-MD5 - 60\n *      PLAIN - 50\n *      OAUTH-BEARER - 40\n *      OAUTH-2 - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  WebSocket options:\n *  ------------------\n *\n *  If you want to connect to the current host with a WebSocket connection you\n *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n *  for Secure WebSocket.\n *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n *\n *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n *\n *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n *  of the current site.\n *\n *  Also because downgrading security is not permitted by browsers, when using\n *  relative URLs both BOSH and WebSocket connections will use their secure\n *  variants if the current connection to the site is also secure (https).\n *\n *  BOSH options:\n *  -------------\n *\n *  By adding \"sync\" to the options, you can control if requests will\n *  be made synchronously or not. The default behaviour is asynchronous.\n *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n *\n *  You can also toggle this on an already established connection.\n *  > conn.options.sync = true;\n *\n *  The *customHeaders* option can be used to provide custom HTTP headers to be\n *  included in the XMLHttpRequests made.\n *\n *  The *keepalive* option can be used to instruct Strophe to maintain the\n *  current BOSH session across interruptions such as webpage reloads.\n *\n *  It will do this by caching the sessions tokens in sessionStorage, and when\n *  \"restore\" is called it will check whether there are cached tokens with\n *  which it can resume an existing session.\n *\n *  The *withCredentials* option should receive a Boolean value and is used to\n *  indicate wether cookies should be included in ajax requests (by default\n *  they're not).\n *  Set this value to true if you are connecting to a BOSH service\n *  and for some reason need to send cookies to it.\n *  In order for this to work cross-domain, the server must also enable\n *  credentials by setting the Access-Control-Allow-Credentials response header\n *  to \"true\". For most usecases however this setting should be false (which\n *  is the default).\n *  Additionally, when using Access-Control-Allow-Credentials, the\n *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n *  instead must be restricted to actual domains.\n *\n *  The *contentType* option can be set to change the default Content-Type\n *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n *  CORS preflight requests that are sent to the server.\n *\n *  Parameters:\n *    (String) service - The BOSH or WebSocket service URL.\n *    (Object) options - A hash of configuration options\n *\n *  Returns:\n *    A new Strophe.Connection object.\n */\n\nStrophe.Connection = function (service, options) {\n  var _this2 = this;\n\n  // The service URL\n  this.service = service; // Configuration options\n\n  this.options = options || {};\n  var proto = this.options.protocol || \"\"; // Select protocal based on service or options\n\n  if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 || proto.indexOf(\"ws\") === 0) {\n    this._proto = new Strophe.Websocket(this);\n  } else {\n    this._proto = new Strophe.Bosh(this);\n  }\n  /* The connected JID. */\n\n\n  this.jid = \"\";\n  /* the JIDs domain */\n\n  this.domain = null;\n  /* stream:features */\n\n  this.features = null; // SASL\n\n  this._sasl_data = {};\n  this.do_session = false;\n  this.do_bind = false; // handler lists\n\n  this.timedHandlers = [];\n  this.handlers = [];\n  this.removeTimeds = [];\n  this.removeHandlers = [];\n  this.addTimeds = [];\n  this.addHandlers = [];\n  this.protocolErrorHandlers = {\n    'HTTP': {},\n    'websocket': {}\n  };\n  this._idleTimeout = null;\n  this._disconnectTimeout = null;\n  this.authenticated = false;\n  this.connected = false;\n  this.disconnecting = false;\n  this.do_authentication = true;\n  this.paused = false;\n  this.restored = false;\n  this._data = [];\n  this._uniqueId = 0;\n  this._sasl_success_handler = null;\n  this._sasl_failure_handler = null;\n  this._sasl_challenge_handler = null; // Max retries before disconnecting\n\n  this.maxRetries = 5; // Call onIdle callback every 1/10th of a second\n\n  this._idleTimeout = setTimeout(function () {\n    return _this2._onIdle();\n  }, 100);\n  utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].addCookies(this.options.cookies);\n  this.registerSASLMechanisms(this.options.mechanisms); // initialize plugins\n\n  for (var k in Strophe._connectionPlugins) {\n    if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n      var F = function F() {};\n\n      F.prototype = Strophe._connectionPlugins[k];\n      this[k] = new F();\n      this[k].init(this);\n    }\n  }\n};\n\nStrophe.Connection.prototype = {\n  /** Function: reset\n   *  Reset the connection.\n   *\n   *  This function should be called after a connection is disconnected\n   *  before that connection is reused.\n   */\n  reset: function reset() {\n    this._proto._reset(); // SASL\n\n\n    this.do_session = false;\n    this.do_bind = false; // handler lists\n\n    this.timedHandlers = [];\n    this.handlers = [];\n    this.removeTimeds = [];\n    this.removeHandlers = [];\n    this.addTimeds = [];\n    this.addHandlers = [];\n    this.authenticated = false;\n    this.connected = false;\n    this.disconnecting = false;\n    this.restored = false;\n    this._data = [];\n    this._requests = [];\n    this._uniqueId = 0;\n  },\n\n  /** Function: pause\n   *  Pause the request manager.\n   *\n   *  This will prevent Strophe from sending any more requests to the\n   *  server.  This is very useful for temporarily pausing\n   *  BOSH-Connections while a lot of send() calls are happening quickly.\n   *  This causes Strophe to send the data in a single request, saving\n   *  many request trips.\n   */\n  pause: function pause() {\n    this.paused = true;\n  },\n\n  /** Function: resume\n   *  Resume the request manager.\n   *\n   *  This resumes after pause() has been called.\n   */\n  resume: function resume() {\n    this.paused = false;\n  },\n\n  /** Function: getUniqueId\n   *  Generate a unique ID for use in <iq/> elements.\n   *\n   *  All <iq/> stanzas are required to have unique id attributes.  This\n   *  function makes creating these easy.  Each connection instance has\n   *  a counter which starts from zero, and the value of this counter\n   *  plus a colon followed by the suffix becomes the unique id. If no\n   *  suffix is supplied, the counter is used as the unique id.\n   *\n   *  Suffixes are used to make debugging easier when reading the stream\n   *  data, and their use is recommended.  The counter resets to 0 for\n   *  every new connection for the same reason.  For connections to the\n   *  same server that authenticate the same way, all the ids should be\n   *  the same, which makes it easy to see changes.  This is useful for\n   *  automated testing as well.\n   *\n   *  Parameters:\n   *    (String) suffix - A optional suffix to append to the id.\n   *\n   *  Returns:\n   *    A unique string to be used for the id attribute.\n   */\n  getUniqueId: function getUniqueId(suffix) {\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n\n    if (typeof suffix === \"string\" || typeof suffix === \"number\") {\n      return uuid + \":\" + suffix;\n    } else {\n      return uuid + \"\";\n    }\n  },\n\n  /** Function: addProtocolErrorHandler\n   *  Register a handler function for when a protocol (websocker or HTTP)\n   *  error occurs.\n   *\n   *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n   *  Patches that handle websocket errors would be very welcome.\n   *\n   *  Parameters:\n   *    (String) protocol - 'HTTP' or 'websocket'\n   *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n   *    (Function) callback - Function that will fire on Http error\n   *\n   *  Example:\n   *  function onError(err_code){\n   *    //do stuff\n   *  }\n   *\n   *  let conn = Strophe.connect('http://example.com/http-bind');\n   *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n   *  // Triggers HTTP 500 error and onError handler will be called\n   *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n   */\n  addProtocolErrorHandler: function addProtocolErrorHandler(protocol, status_code, callback) {\n    this.protocolErrorHandlers[protocol][status_code] = callback;\n  },\n\n  /** Function: connect\n   *  Starts the connection process.\n   *\n   *  As the connection process proceeds, the user supplied callback will\n   *  be triggered multiple times with status updates.  The callback\n   *  should take two arguments - the status code and the error condition.\n   *\n   *  The status code will be one of the values in the Strophe.Status\n   *  constants.  The error condition will be one of the conditions\n   *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n   *\n   *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n   *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n   *  of the optional parameters.\n   *\n   *  Parameters:\n   *    (String) jid - The user's JID.  This may be a bare JID,\n   *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n   *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n   *      process the provided password value as an access token).\n   *    (String) pass - The user's password.\n   *    (Function) callback - The connect callback function.\n   *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n   *      time the server will wait before returning an empty result for\n   *      a request.  The default setting of 60 seconds is recommended.\n   *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n   *      number of connections the server will hold at one time.  This\n   *      should almost always be set to 1 (the default).\n   *    (String) route - The optional route value.\n   *    (String) authcid - The optional alternative authentication identity\n   *      (username) if intending to impersonate another user.\n   *      When using the SASL-EXTERNAL authentication mechanism, for example\n   *      with client certificates, then the authcid value is used to\n   *      determine whether an authorization JID (authzid) should be sent to\n   *      the server. The authzid should not be sent to the server if the\n   *      authzid and authcid are the same. So to prevent it from being sent\n   *      (for example when the JID is already contained in the client\n   *      certificate), set authcid to that same JID. See XEP-178 for more\n   *      details.\n   */\n  connect: function connect(jid, pass, callback, wait, hold, route, authcid) {\n    this.jid = jid;\n    /** Variable: authzid\n     *  Authorization identity.\n     */\n\n    this.authzid = Strophe.getBareJidFromJid(this.jid);\n    /** Variable: authcid\n     *  Authentication identity (User name).\n     */\n\n    this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n    /** Variable: pass\n     *  Authentication identity (User password).\n     */\n\n    this.pass = pass;\n    /** Variable: servtype\n     *  Digest MD5 compatibility.\n     */\n\n    this.servtype = \"xmpp\";\n    this.connect_callback = callback;\n    this.disconnecting = false;\n    this.connected = false;\n    this.authenticated = false;\n    this.restored = false; // parse jid for domain\n\n    this.domain = Strophe.getDomainFromJid(this.jid);\n\n    this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n    this._proto._connect(wait, hold, route);\n  },\n\n  /** Function: attach\n   *  Attach to an already created and authenticated BOSH session.\n   *\n   *  This function is provided to allow Strophe to attach to BOSH\n   *  sessions which have been created externally, perhaps by a Web\n   *  application.  This is often used to support auto-login type features\n   *  without putting user credentials into the page.\n   *\n   *  Parameters:\n   *    (String) jid - The full JID that is bound by the session.\n   *    (String) sid - The SID of the BOSH session.\n   *    (String) rid - The current RID of the BOSH session.  This RID\n   *      will be used by the next request.\n   *    (Function) callback The connect callback function.\n   *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n   *      time the server will wait before returning an empty result for\n   *      a request.  The default setting of 60 seconds is recommended.\n   *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n   *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n   *      number of connections the server will hold at one time.  This\n   *      should almost always be set to 1 (the default).\n   *    (Integer) wind - The optional HTTBIND window value.  This is the\n   *      allowed range of request ids that are valid.  The default is 5.\n   */\n  attach: function attach(jid, sid, rid, callback, wait, hold, wind) {\n    if (this._proto instanceof Strophe.Bosh) {\n      this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n    } else {\n      var error = new Error('The \"attach\" method can only be used with a BOSH connection.');\n      error.name = 'StropheSessionError';\n      throw error;\n    }\n  },\n\n  /** Function: restore\n   *  Attempt to restore a cached BOSH session.\n   *\n   *  This function is only useful in conjunction with providing the\n   *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n   *\n   *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n   *  RID (Request ID) and SID (Session ID) and then when this function is\n   *  called, it will attempt to restore the session from those cached\n   *  tokens.\n   *\n   *  This function must therefore be called instead of connect or attach.\n   *\n   *  For an example on how to use it, please see examples/restore.js\n   *\n   *  Parameters:\n   *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n   *    (Function) callback - The connect callback function.\n   *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n   *      time the server will wait before returning an empty result for\n   *      a request.  The default setting of 60 seconds is recommended.\n   *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n   *      number of connections the server will hold at one time.  This\n   *      should almost always be set to 1 (the default).\n   *    (Integer) wind - The optional HTTBIND window value.  This is the\n   *      allowed range of request ids that are valid.  The default is 5.\n   */\n  restore: function restore(jid, callback, wait, hold, wind) {\n    if (this._sessionCachingSupported()) {\n      this._proto._restore(jid, callback, wait, hold, wind);\n    } else {\n      var error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n      error.name = 'StropheSessionError';\n      throw error;\n    }\n  },\n\n  /** PrivateFunction: _sessionCachingSupported\n   * Checks whether sessionStorage and JSON are supported and whether we're\n   * using BOSH.\n   */\n  _sessionCachingSupported: function _sessionCachingSupported() {\n    if (this._proto instanceof Strophe.Bosh) {\n      if (!JSON) {\n        return false;\n      }\n\n      try {\n        sessionStorage.setItem('_strophe_', '_strophe_');\n        sessionStorage.removeItem('_strophe_');\n      } catch (e) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  },\n\n  /** Function: xmlInput\n   *  User overrideable function that receives XML data coming into the\n   *  connection.\n   *\n   *  The default function does nothing.  User code can override this with\n   *  > Strophe.Connection.xmlInput = function (elem) {\n   *  >   (user code)\n   *  > };\n   *\n   *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n   *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n   *\n   *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n   *  <Strophe.Bosh.strip> if you want to strip this tag.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The XML data received by the connection.\n   */\n\n  /* jshint unused:false */\n  xmlInput: function xmlInput(elem) {\n    return;\n  },\n\n  /* jshint unused:true */\n\n  /** Function: xmlOutput\n   *  User overrideable function that receives XML data sent to the\n   *  connection.\n   *\n   *  The default function does nothing.  User code can override this with\n   *  > Strophe.Connection.xmlOutput = function (elem) {\n   *  >   (user code)\n   *  > };\n   *\n   *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n   *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n   *\n   *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n   *  <Strophe.Bosh.strip> if you want to strip this tag.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The XMLdata sent by the connection.\n   */\n\n  /* jshint unused:false */\n  xmlOutput: function xmlOutput(elem) {\n    return;\n  },\n\n  /* jshint unused:true */\n\n  /** Function: rawInput\n   *  User overrideable function that receives raw data coming into the\n   *  connection.\n   *\n   *  The default function does nothing.  User code can override this with\n   *  > Strophe.Connection.rawInput = function (data) {\n   *  >   (user code)\n   *  > };\n   *\n   *  Parameters:\n   *    (String) data - The data received by the connection.\n   */\n\n  /* jshint unused:false */\n  rawInput: function rawInput(data) {\n    return;\n  },\n\n  /* jshint unused:true */\n\n  /** Function: rawOutput\n   *  User overrideable function that receives raw data sent to the\n   *  connection.\n   *\n   *  The default function does nothing.  User code can override this with\n   *  > Strophe.Connection.rawOutput = function (data) {\n   *  >   (user code)\n   *  > };\n   *\n   *  Parameters:\n   *    (String) data - The data sent by the connection.\n   */\n\n  /* jshint unused:false */\n  rawOutput: function rawOutput(data) {\n    return;\n  },\n\n  /* jshint unused:true */\n\n  /** Function: nextValidRid\n   *  User overrideable function that receives the new valid rid.\n   *\n   *  The default function does nothing. User code can override this with\n   *  > Strophe.Connection.nextValidRid = function (rid) {\n   *  >    (user code)\n   *  > };\n   *\n   *  Parameters:\n   *    (Number) rid - The next valid rid\n   */\n\n  /* jshint unused:false */\n  nextValidRid: function nextValidRid(rid) {\n    return;\n  },\n\n  /* jshint unused:true */\n\n  /** Function: send\n   *  Send a stanza.\n   *\n   *  This function is called to push data onto the send queue to\n   *  go out over the wire.  Whenever a request is sent to the BOSH\n   *  server, all pending data is sent and the queue is flushed.\n   *\n   *  Parameters:\n   *    (XMLElement |\n   *     [XMLElement] |\n   *     Strophe.Builder) elem - The stanza to send.\n   */\n  send: function send(elem) {\n    if (elem === null) {\n      return;\n    }\n\n    if (typeof elem.sort === \"function\") {\n      for (var i = 0; i < elem.length; i++) {\n        this._queueData(elem[i]);\n      }\n    } else if (typeof elem.tree === \"function\") {\n      this._queueData(elem.tree());\n    } else {\n      this._queueData(elem);\n    }\n\n    this._proto._send();\n  },\n\n  /** Function: flush\n   *  Immediately send any pending outgoing data.\n   *\n   *  Normally send() queues outgoing data until the next idle period\n   *  (100ms), which optimizes network use in the common cases when\n   *  several send()s are called in succession. flush() can be used to\n   *  immediately send all pending data.\n   */\n  flush: function flush() {\n    // cancel the pending idle period and run the idle function\n    // immediately\n    clearTimeout(this._idleTimeout);\n\n    this._onIdle();\n  },\n\n  /** Function: sendPresence\n   *  Helper function to send presence stanzas. The main benefit is for\n   *  sending presence stanzas for which you expect a responding presence\n   *  stanza with the same id (for example when leaving a chat room).\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The stanza to send.\n   *    (Function) callback - The callback function for a successful request.\n   *    (Function) errback - The callback function for a failed or timed\n   *      out request.  On timeout, the stanza will be null.\n   *    (Integer) timeout - The time specified in milliseconds for a\n   *      timeout to occur.\n   *\n   *  Returns:\n   *    The id used to send the presence.\n   */\n  sendPresence: function sendPresence(elem, callback, errback, timeout) {\n    var _this3 = this;\n\n    var timeoutHandler = null;\n\n    if (typeof elem.tree === \"function\") {\n      elem = elem.tree();\n    }\n\n    var id = elem.getAttribute('id');\n\n    if (!id) {\n      // inject id if not found\n      id = this.getUniqueId(\"sendPresence\");\n      elem.setAttribute(\"id\", id);\n    }\n\n    if (typeof callback === \"function\" || typeof errback === \"function\") {\n      var handler = this.addHandler(function (stanza) {\n        // remove timeout handler if there is one\n        if (timeoutHandler) {\n          _this3.deleteTimedHandler(timeoutHandler);\n        }\n\n        if (stanza.getAttribute('type') === 'error') {\n          if (errback) {\n            errback(stanza);\n          }\n        } else if (callback) {\n          callback(stanza);\n        }\n      }, null, 'presence', null, id); // if timeout specified, set up a timeout handler.\n\n      if (timeout) {\n        timeoutHandler = this.addTimedHandler(timeout, function () {\n          // get rid of normal handler\n          _this3.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n          if (errback) {\n            errback(null);\n          }\n\n          return false;\n        });\n      }\n    }\n\n    this.send(elem);\n    return id;\n  },\n\n  /** Function: sendIQ\n   *  Helper function to send IQ stanzas.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The stanza to send.\n   *    (Function) callback - The callback function for a successful request.\n   *    (Function) errback - The callback function for a failed or timed\n   *      out request.  On timeout, the stanza will be null.\n   *    (Integer) timeout - The time specified in milliseconds for a\n   *      timeout to occur.\n   *\n   *  Returns:\n   *    The id used to send the IQ.\n  */\n  sendIQ: function sendIQ(elem, callback, errback, timeout) {\n    var _this4 = this;\n\n    var timeoutHandler = null;\n\n    if (typeof elem.tree === \"function\") {\n      elem = elem.tree();\n    }\n\n    var id = elem.getAttribute('id');\n\n    if (!id) {\n      // inject id if not found\n      id = this.getUniqueId(\"sendIQ\");\n      elem.setAttribute(\"id\", id);\n    }\n\n    if (typeof callback === \"function\" || typeof errback === \"function\") {\n      var handler = this.addHandler(function (stanza) {\n        // remove timeout handler if there is one\n        if (timeoutHandler) {\n          _this4.deleteTimedHandler(timeoutHandler);\n        }\n\n        var iqtype = stanza.getAttribute('type');\n\n        if (iqtype === 'result') {\n          if (callback) {\n            callback(stanza);\n          }\n        } else if (iqtype === 'error') {\n          if (errback) {\n            errback(stanza);\n          }\n        } else {\n          var error = new Error(\"Got bad IQ type of \".concat(iqtype));\n          error.name = \"StropheError\";\n          throw error;\n        }\n      }, null, 'iq', ['error', 'result'], id); // if timeout specified, set up a timeout handler.\n\n      if (timeout) {\n        timeoutHandler = this.addTimedHandler(timeout, function () {\n          // get rid of normal handler\n          _this4.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n          if (errback) {\n            errback(null);\n          }\n\n          return false;\n        });\n      }\n    }\n\n    this.send(elem);\n    return id;\n  },\n\n  /** PrivateFunction: _queueData\n   *  Queue outgoing data for later sending.  Also ensures that the data\n   *  is a DOMElement.\n   */\n  _queueData: function _queueData(element) {\n    if (element === null || !element.tagName || !element.childNodes) {\n      var error = new Error(\"Cannot queue non-DOMElement.\");\n      error.name = \"StropheError\";\n      throw error;\n    }\n\n    this._data.push(element);\n  },\n\n  /** PrivateFunction: _sendRestart\n   *  Send an xmpp:restart stanza.\n   */\n  _sendRestart: function _sendRestart() {\n    var _this5 = this;\n\n    this._data.push(\"restart\");\n\n    this._proto._sendRestart();\n\n    this._idleTimeout = setTimeout(function () {\n      return _this5._onIdle();\n    }, 100);\n  },\n\n  /** Function: addTimedHandler\n   *  Add a timed handler to the connection.\n   *\n   *  This function adds a timed handler.  The provided handler will\n   *  be called every period milliseconds until it returns false,\n   *  the connection is terminated, or the handler is removed.  Handlers\n   *  that wish to continue being invoked should return true.\n   *\n   *  Because of method binding it is necessary to save the result of\n   *  this function if you wish to remove a handler with\n   *  deleteTimedHandler().\n   *\n   *  Note that user handlers are not active until authentication is\n   *  successful.\n   *\n   *  Parameters:\n   *    (Integer) period - The period of the handler.\n   *    (Function) handler - The callback function.\n   *\n   *  Returns:\n   *    A reference to the handler that can be used to remove it.\n   */\n  addTimedHandler: function addTimedHandler(period, handler) {\n    var thand = new Strophe.TimedHandler(period, handler);\n    this.addTimeds.push(thand);\n    return thand;\n  },\n\n  /** Function: deleteTimedHandler\n   *  Delete a timed handler for a connection.\n   *\n   *  This function removes a timed handler from the connection.  The\n   *  handRef parameter is *not* the function passed to addTimedHandler(),\n   *  but is the reference returned from addTimedHandler().\n   *\n   *  Parameters:\n   *    (Strophe.TimedHandler) handRef - The handler reference.\n   */\n  deleteTimedHandler: function deleteTimedHandler(handRef) {\n    // this must be done in the Idle loop so that we don't change\n    // the handlers during iteration\n    this.removeTimeds.push(handRef);\n  },\n\n  /** Function: addHandler\n   *  Add a stanza handler for the connection.\n   *\n   *  This function adds a stanza handler to the connection.  The\n   *  handler callback will be called for any stanza that matches\n   *  the parameters.  Note that if multiple parameters are supplied,\n   *  they must all match for the handler to be invoked.\n   *\n   *  The handler will receive the stanza that triggered it as its argument.\n   *  *The handler should return true if it is to be invoked again;\n   *  returning false will remove the handler after it returns.*\n   *\n   *  As a convenience, the ns parameters applies to the top level element\n   *  and also any of its immediate children.  This is primarily to make\n   *  matching /iq/query elements easy.\n   *\n   *  Options\n   *  ~~~~~~~\n   *  With the options argument, you can specify boolean flags that affect how\n   *  matches are being done.\n   *\n   *  Currently two flags exist:\n   *\n   *  - matchBareFromJid:\n   *      When set to true, the from parameter and the\n   *      from attribute on the stanza will be matched as bare JIDs instead\n   *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n   *      value of options. The default value for matchBareFromJid is false.\n   *\n   *  - ignoreNamespaceFragment:\n   *      When set to true, a fragment specified on the stanza's namespace\n   *      URL will be ignored when it's matched with the one configured for\n   *      the handler.\n   *\n   *      This means that if you register like this:\n   *      >   connection.addHandler(\n   *      >       handler,\n   *      >       'http://jabber.org/protocol/muc',\n   *      >       null, null, null, null,\n   *      >       {'ignoreNamespaceFragment': true}\n   *      >   );\n   *\n   *      Then a stanza with XML namespace of\n   *      'http://jabber.org/protocol/muc#user' will also be matched. If\n   *      'ignoreNamespaceFragment' is false, then only stanzas with\n   *      'http://jabber.org/protocol/muc' will be matched.\n   *\n   *  Deleting the handler\n   *  ~~~~~~~~~~~~~~~~~~~~\n   *  The return value should be saved if you wish to remove the handler\n   *  with deleteHandler().\n   *\n   *  Parameters:\n   *    (Function) handler - The user callback.\n   *    (String) ns - The namespace to match.\n   *    (String) name - The stanza name to match.\n   *    (String|Array) type - The stanza type (or types if an array) to match.\n   *    (String) id - The stanza id attribute to match.\n   *    (String) from - The stanza from attribute to match.\n   *    (String) options - The handler options\n   *\n   *  Returns:\n   *    A reference to the handler that can be used to remove it.\n   */\n  addHandler: function addHandler(handler, ns, name, type, id, from, options) {\n    var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n    this.addHandlers.push(hand);\n    return hand;\n  },\n\n  /** Function: deleteHandler\n   *  Delete a stanza handler for a connection.\n   *\n   *  This function removes a stanza handler from the connection.  The\n   *  handRef parameter is *not* the function passed to addHandler(),\n   *  but is the reference returned from addHandler().\n   *\n   *  Parameters:\n   *    (Strophe.Handler) handRef - The handler reference.\n   */\n  deleteHandler: function deleteHandler(handRef) {\n    // this must be done in the Idle loop so that we don't change\n    // the handlers during iteration\n    this.removeHandlers.push(handRef); // If a handler is being deleted while it is being added,\n    // prevent it from getting added\n\n    var i = this.addHandlers.indexOf(handRef);\n\n    if (i >= 0) {\n      this.addHandlers.splice(i, 1);\n    }\n  },\n\n  /** Function: registerSASLMechanisms\n   *\n   * Register the SASL mechanisms which will be supported by this instance of\n   * Strophe.Connection (i.e. which this XMPP client will support).\n   *\n   *  Parameters:\n   *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n   *\n   */\n  registerSASLMechanisms: function registerSASLMechanisms(mechanisms) {\n    this.mechanisms = {};\n    mechanisms = mechanisms || [Strophe.SASLAnonymous, Strophe.SASLExternal, Strophe.SASLMD5, Strophe.SASLOAuthBearer, Strophe.SASLXOAuth2, Strophe.SASLPlain, Strophe.SASLSHA1];\n    mechanisms.forEach(this.registerSASLMechanism.bind(this));\n  },\n\n  /** Function: registerSASLMechanism\n   *\n   * Register a single SASL mechanism, to be supported by this client.\n   *\n   *  Parameters:\n   *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n   *\n   */\n  registerSASLMechanism: function registerSASLMechanism(mechanism) {\n    this.mechanisms[mechanism.prototype.name] = mechanism;\n  },\n\n  /** Function: disconnect\n   *  Start the graceful disconnection process.\n   *\n   *  This function starts the disconnection process.  This process starts\n   *  by sending unavailable presence and sending BOSH body of type\n   *  terminate.  A timeout handler makes sure that disconnection happens\n   *  even if the BOSH server does not respond.\n   *  If the Connection object isn't connected, at least tries to abort all pending requests\n   *  so the connection object won't generate successful requests (which were already opened).\n   *\n   *  The user supplied connection callback will be notified of the\n   *  progress as this process happens.\n   *\n   *  Parameters:\n   *    (String) reason - The reason the disconnect is occuring.\n   */\n  disconnect: function disconnect(reason) {\n    this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n    Strophe.info(\"Disconnect was called because: \" + reason);\n\n    if (this.connected) {\n      var pres = false;\n      this.disconnecting = true;\n\n      if (this.authenticated) {\n        pres = $pres({\n          'xmlns': Strophe.NS.CLIENT,\n          'type': 'unavailable'\n        });\n      } // setup timeout handler\n\n\n      this._disconnectTimeout = this._addSysTimedHandler(3000, this._onDisconnectTimeout.bind(this));\n\n      this._proto._disconnect(pres);\n    } else {\n      Strophe.info(\"Disconnect was called before Strophe connected to the server\");\n\n      this._proto._abortAllRequests();\n\n      this._doDisconnect();\n    }\n  },\n\n  /** PrivateFunction: _changeConnectStatus\n   *  _Private_ helper function that makes sure plugins and the user's\n   *  callback are notified of connection status changes.\n   *\n   *  Parameters:\n   *    (Integer) status - the new connection status, one of the values\n   *      in Strophe.Status\n   *    (String) condition - the error condition or null\n   *    (XMLElement) elem - The triggering stanza.\n   */\n  _changeConnectStatus: function _changeConnectStatus(status, condition, elem) {\n    // notify all plugins listening for status changes\n    for (var k in Strophe._connectionPlugins) {\n      if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n        var plugin = this[k];\n\n        if (plugin.statusChanged) {\n          try {\n            plugin.statusChanged(status, condition);\n          } catch (err) {\n            Strophe.error(\"\".concat(k, \" plugin caused an exception changing status: \").concat(err));\n          }\n        }\n      }\n    } // notify the user's callback\n\n\n    if (this.connect_callback) {\n      try {\n        this.connect_callback(status, condition, elem);\n      } catch (e) {\n        Strophe._handleError(e);\n\n        Strophe.error(\"User connection callback caused an exception: \".concat(e));\n      }\n    }\n  },\n\n  /** PrivateFunction: _doDisconnect\n   *  _Private_ function to disconnect.\n   *\n   *  This is the last piece of the disconnection logic.  This resets the\n   *  connection and alerts the user's connection callback.\n   */\n  _doDisconnect: function _doDisconnect(condition) {\n    if (typeof this._idleTimeout === \"number\") {\n      clearTimeout(this._idleTimeout);\n    } // Cancel Disconnect Timeout\n\n\n    if (this._disconnectTimeout !== null) {\n      this.deleteTimedHandler(this._disconnectTimeout);\n      this._disconnectTimeout = null;\n    }\n\n    Strophe.info(\"_doDisconnect was called\");\n\n    this._proto._doDisconnect();\n\n    this.authenticated = false;\n    this.disconnecting = false;\n    this.restored = false; // delete handlers\n\n    this.handlers = [];\n    this.timedHandlers = [];\n    this.removeTimeds = [];\n    this.removeHandlers = [];\n    this.addTimeds = [];\n    this.addHandlers = []; // tell the parent we disconnected\n\n    this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n\n    this.connected = false;\n  },\n\n  /** PrivateFunction: _dataRecv\n   *  _Private_ handler to processes incoming data from the the connection.\n   *\n   *  Except for _connect_cb handling the initial connection request,\n   *  this function handles the incoming data for all requests.  This\n   *  function also fires stanza handlers that match each incoming\n   *  stanza.\n   *\n   *  Parameters:\n   *    (Strophe.Request) req - The request that has data ready.\n   *    (string) req - The stanza a raw string (optiona).\n   */\n  _dataRecv: function _dataRecv(req, raw) {\n    var _this6 = this;\n\n    Strophe.info(\"_dataRecv called\");\n\n    var elem = this._proto._reqToData(req);\n\n    if (elem === null) {\n      return;\n    }\n\n    if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n      if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n        this.xmlInput(elem.childNodes[0]);\n      } else {\n        this.xmlInput(elem);\n      }\n    }\n\n    if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n      if (raw) {\n        this.rawInput(raw);\n      } else {\n        this.rawInput(Strophe.serialize(elem));\n      }\n    } // remove handlers scheduled for deletion\n\n\n    while (this.removeHandlers.length > 0) {\n      var hand = this.removeHandlers.pop();\n      var i = this.handlers.indexOf(hand);\n\n      if (i >= 0) {\n        this.handlers.splice(i, 1);\n      }\n    } // add handlers scheduled for addition\n\n\n    while (this.addHandlers.length > 0) {\n      this.handlers.push(this.addHandlers.pop());\n    } // handle graceful disconnect\n\n\n    if (this.disconnecting && this._proto._emptyQueue()) {\n      this._doDisconnect();\n\n      return;\n    }\n\n    var type = elem.getAttribute(\"type\");\n\n    if (type !== null && type === \"terminate\") {\n      // Don't process stanzas that come in after disconnect\n      if (this.disconnecting) {\n        return;\n      } // an error occurred\n\n\n      var cond = elem.getAttribute(\"condition\");\n      var conflict = elem.getElementsByTagName(\"conflict\");\n\n      if (cond !== null) {\n        if (cond === \"remote-stream-error\" && conflict.length > 0) {\n          cond = \"conflict\";\n        }\n\n        this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n      } else {\n        this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.UNKOWN_REASON);\n      }\n\n      this._doDisconnect(cond);\n\n      return;\n    } // send each incoming stanza through the handler chain\n\n\n    Strophe.forEachChild(elem, null, function (child) {\n      // process handlers\n      var newList = _this6.handlers;\n      _this6.handlers = [];\n\n      for (var _i5 = 0; _i5 < newList.length; _i5++) {\n        var _hand = newList[_i5]; // encapsulate 'handler.run' not to lose the whole handler list if\n        // one of the handlers throws an exception\n\n        try {\n          if (_hand.isMatch(child) && (_this6.authenticated || !_hand.user)) {\n            if (_hand.run(child)) {\n              _this6.handlers.push(_hand);\n            }\n          } else {\n            _this6.handlers.push(_hand);\n          }\n        } catch (e) {\n          // if the handler throws an exception, we consider it as false\n          Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n        }\n      }\n    });\n  },\n\n  /** Attribute: mechanisms\n   *  SASL Mechanisms available for Connection.\n   */\n  mechanisms: {},\n\n  /** PrivateFunction: _connect_cb\n   *  _Private_ handler for initial connection request.\n   *\n   *  This handler is used to process the initial connection request\n   *  response from the BOSH server. It is used to set up authentication\n   *  handlers and start the authentication process.\n   *\n   *  SASL authentication will be attempted if available, otherwise\n   *  the code will fall back to legacy authentication.\n   *\n   *  Parameters:\n   *    (Strophe.Request) req - The current request.\n   *    (Function) _callback - low level (xmpp) connect callback function.\n   *      Useful for plugins with their own xmpp connect callback (when they\n   *      want to do something special).\n   */\n  _connect_cb: function _connect_cb(req, _callback, raw) {\n    Strophe.info(\"_connect_cb was called\");\n    this.connected = true;\n    var bodyWrap;\n\n    try {\n      bodyWrap = this._proto._reqToData(req);\n    } catch (e) {\n      if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) {\n        throw e;\n      }\n\n      this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.BAD_FORMAT);\n\n      this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n    }\n\n    if (!bodyWrap) {\n      return;\n    }\n\n    if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n      if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n        this.xmlInput(bodyWrap.childNodes[0]);\n      } else {\n        this.xmlInput(bodyWrap);\n      }\n    }\n\n    if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n      if (raw) {\n        this.rawInput(raw);\n      } else {\n        this.rawInput(Strophe.serialize(bodyWrap));\n      }\n    }\n\n    var conncheck = this._proto._connect_cb(bodyWrap);\n\n    if (conncheck === Strophe.Status.CONNFAIL) {\n      return;\n    } // Check for the stream:features tag\n\n\n    var hasFeatures;\n\n    if (bodyWrap.getElementsByTagNameNS) {\n      hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n    } else {\n      hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 || bodyWrap.getElementsByTagName(\"features\").length > 0;\n    }\n\n    if (!hasFeatures) {\n      this._proto._no_auth_received(_callback);\n\n      return;\n    }\n\n    var matched = [];\n    var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n\n    if (mechanisms.length > 0) {\n      for (var i = 0; i < mechanisms.length; i++) {\n        var mech = Strophe.getText(mechanisms[i]);\n        if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n      }\n    }\n\n    if (matched.length === 0) {\n      if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n        // There are no matching SASL mechanisms and also no legacy\n        // auth available.\n        this._proto._no_auth_received(_callback);\n\n        return;\n      }\n    }\n\n    if (this.do_authentication !== false) {\n      this.authenticate(matched);\n    }\n  },\n\n  /** Function: sortMechanismsByPriority\n   *\n   *  Sorts an array of objects with prototype SASLMechanism according to\n   *  their priorities.\n   *\n   *  Parameters:\n   *    (Array) mechanisms - Array of SASL mechanisms.\n   *\n   */\n  sortMechanismsByPriority: function sortMechanismsByPriority(mechanisms) {\n    // Sorting mechanisms according to priority.\n    for (var i = 0; i < mechanisms.length - 1; ++i) {\n      var higher = i;\n\n      for (var j = i + 1; j < mechanisms.length; ++j) {\n        if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n          higher = j;\n        }\n      }\n\n      if (higher !== i) {\n        var swap = mechanisms[i];\n        mechanisms[i] = mechanisms[higher];\n        mechanisms[higher] = swap;\n      }\n    }\n\n    return mechanisms;\n  },\n\n  /** PrivateFunction: _attemptSASLAuth\n   *\n   *  Iterate through an array of SASL mechanisms and attempt authentication\n   *  with the highest priority (enabled) mechanism.\n   *\n   *  Parameters:\n   *    (Array) mechanisms - Array of SASL mechanisms.\n   *\n   *  Returns:\n   *    (Boolean) mechanism_found - true or false, depending on whether a\n   *          valid SASL mechanism was found with which authentication could be\n   *          started.\n   */\n  _attemptSASLAuth: function _attemptSASLAuth(mechanisms) {\n    mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n    var mechanism_found = false;\n\n    for (var i = 0; i < mechanisms.length; ++i) {\n      if (!mechanisms[i].prototype.test(this)) {\n        continue;\n      }\n\n      this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, \"success\", null, null);\n      this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, \"failure\", null, null);\n      this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, \"challenge\", null, null);\n      this._sasl_mechanism = new mechanisms[i]();\n\n      this._sasl_mechanism.onStart(this);\n\n      var request_auth_exchange = $build(\"auth\", {\n        'xmlns': Strophe.NS.SASL,\n        'mechanism': this._sasl_mechanism.name\n      });\n\n      if (this._sasl_mechanism.isClientFirst) {\n        var response = this._sasl_mechanism.onChallenge(this, null);\n\n        request_auth_exchange.t(btoa(response));\n      }\n\n      this.send(request_auth_exchange.tree());\n      mechanism_found = true;\n      break;\n    }\n\n    return mechanism_found;\n  },\n\n  /** PrivateFunction: _attemptLegacyAuth\n   *\n   *  Attempt legacy (i.e. non-SASL) authentication.\n   *\n   */\n  _attemptLegacyAuth: function _attemptLegacyAuth() {\n    if (Strophe.getNodeFromJid(this.jid) === null) {\n      // we don't have a node, which is required for non-anonymous\n      // client connections\n      this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.MISSING_JID_NODE);\n\n      this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n    } else {\n      // Fall back to legacy authentication\n      this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n\n      this._addSysHandler(this._auth1_cb.bind(this), null, null, null, \"_auth_1\");\n\n      this.send($iq({\n        'type': \"get\",\n        'to': this.domain,\n        'id': \"_auth_1\"\n      }).c(\"query\", {\n        xmlns: Strophe.NS.AUTH\n      }).c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n    }\n  },\n\n  /** Function: authenticate\n   * Set up authentication\n   *\n   *  Continues the initial connection request by setting up authentication\n   *  handlers and starting the authentication process.\n   *\n   *  SASL authentication will be attempted if available, otherwise\n   *  the code will fall back to legacy authentication.\n   *\n   *  Parameters:\n   *    (Array) matched - Array of SASL mechanisms supported.\n   *\n   */\n  authenticate: function authenticate(matched) {\n    if (!this._attemptSASLAuth(matched)) {\n      this._attemptLegacyAuth();\n    }\n  },\n\n  /** PrivateFunction: _sasl_challenge_cb\n   *  _Private_ handler for the SASL challenge\n   *\n   */\n  _sasl_challenge_cb: function _sasl_challenge_cb(elem) {\n    var challenge = atob(Strophe.getText(elem));\n\n    var response = this._sasl_mechanism.onChallenge(this, challenge);\n\n    var stanza = $build('response', {\n      'xmlns': Strophe.NS.SASL\n    });\n\n    if (response !== \"\") {\n      stanza.t(btoa(response));\n    }\n\n    this.send(stanza.tree());\n    return true;\n  },\n\n  /** PrivateFunction: _auth1_cb\n   *  _Private_ handler for legacy authentication.\n   *\n   *  This handler is called in response to the initial <iq type='get'/>\n   *  for legacy authentication.  It builds an authentication <iq/> and\n   *  sends it, creating a handler (calling back to _auth2_cb()) to\n   *  handle the result\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The stanza that triggered the callback.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n\n  /* jshint unused:false */\n  _auth1_cb: function _auth1_cb(elem) {\n    // build plaintext auth iq\n    var iq = $iq({\n      type: \"set\",\n      id: \"_auth_2\"\n    }).c('query', {\n      xmlns: Strophe.NS.AUTH\n    }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).up().c('password').t(this.pass);\n\n    if (!Strophe.getResourceFromJid(this.jid)) {\n      // since the user has not supplied a resource, we pick\n      // a default one here.  unlike other auth methods, the server\n      // cannot do this for us.\n      this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n    }\n\n    iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n    this._addSysHandler(this._auth2_cb.bind(this), null, null, null, \"_auth_2\");\n\n    this.send(iq.tree());\n    return false;\n  },\n\n  /* jshint unused:true */\n\n  /** PrivateFunction: _sasl_success_cb\n   *  _Private_ handler for succesful SASL authentication.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The matching stanza.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n  _sasl_success_cb: function _sasl_success_cb(elem) {\n    var _this7 = this;\n\n    if (this._sasl_data[\"server-signature\"]) {\n      var serverSignature;\n      var success = atob(Strophe.getText(elem));\n      var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n      var matches = success.match(attribMatch);\n\n      if (matches[1] === \"v\") {\n        serverSignature = matches[2];\n      }\n\n      if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n        // remove old handlers\n        this.deleteHandler(this._sasl_failure_handler);\n        this._sasl_failure_handler = null;\n\n        if (this._sasl_challenge_handler) {\n          this.deleteHandler(this._sasl_challenge_handler);\n          this._sasl_challenge_handler = null;\n        }\n\n        this._sasl_data = {};\n        return this._sasl_failure_cb(null);\n      }\n    }\n\n    Strophe.info(\"SASL authentication succeeded.\");\n\n    if (this._sasl_mechanism) {\n      this._sasl_mechanism.onSuccess();\n    } // remove old handlers\n\n\n    this.deleteHandler(this._sasl_failure_handler);\n    this._sasl_failure_handler = null;\n\n    if (this._sasl_challenge_handler) {\n      this.deleteHandler(this._sasl_challenge_handler);\n      this._sasl_challenge_handler = null;\n    }\n\n    var streamfeature_handlers = [];\n\n    var wrapper = function wrapper(handlers, elem) {\n      while (handlers.length) {\n        _this7.deleteHandler(handlers.pop());\n      }\n\n      _this7._sasl_auth1_cb(elem);\n\n      return false;\n    };\n\n    streamfeature_handlers.push(this._addSysHandler(function (elem) {\n      return wrapper(streamfeature_handlers, elem);\n    }, null, \"stream:features\", null, null));\n    streamfeature_handlers.push(this._addSysHandler(function (elem) {\n      return wrapper(streamfeature_handlers, elem);\n    }, Strophe.NS.STREAM, \"features\", null, null)); // we must send an xmpp:restart now\n\n    this._sendRestart();\n\n    return false;\n  },\n\n  /** PrivateFunction: _sasl_auth1_cb\n   *  _Private_ handler to start stream binding.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The matching stanza.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n  _sasl_auth1_cb: function _sasl_auth1_cb(elem) {\n    // save stream:features for future usage\n    this.features = elem;\n\n    for (var i = 0; i < elem.childNodes.length; i++) {\n      var child = elem.childNodes[i];\n\n      if (child.nodeName === 'bind') {\n        this.do_bind = true;\n      }\n\n      if (child.nodeName === 'session') {\n        this.do_session = true;\n      }\n    }\n\n    if (!this.do_bind) {\n      this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\n      return false;\n    } else {\n      this._addSysHandler(this._sasl_bind_cb.bind(this), null, null, null, \"_bind_auth_2\");\n\n      var resource = Strophe.getResourceFromJid(this.jid);\n\n      if (resource) {\n        this.send($iq({\n          type: \"set\",\n          id: \"_bind_auth_2\"\n        }).c('bind', {\n          xmlns: Strophe.NS.BIND\n        }).c('resource', {}).t(resource).tree());\n      } else {\n        this.send($iq({\n          type: \"set\",\n          id: \"_bind_auth_2\"\n        }).c('bind', {\n          xmlns: Strophe.NS.BIND\n        }).tree());\n      }\n    }\n\n    return false;\n  },\n\n  /** PrivateFunction: _sasl_bind_cb\n   *  _Private_ handler for binding result and session start.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The matching stanza.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n  _sasl_bind_cb: function _sasl_bind_cb(elem) {\n    if (elem.getAttribute(\"type\") === \"error\") {\n      Strophe.info(\"SASL binding failed.\");\n      var conflict = elem.getElementsByTagName(\"conflict\");\n      var condition;\n\n      if (conflict.length > 0) {\n        condition = Strophe.ErrorCondition.CONFLICT;\n      }\n\n      this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n\n      return false;\n    } // TODO - need to grab errors\n\n\n    var bind = elem.getElementsByTagName(\"bind\");\n\n    if (bind.length > 0) {\n      var jidNode = bind[0].getElementsByTagName(\"jid\");\n\n      if (jidNode.length > 0) {\n        this.jid = Strophe.getText(jidNode[0]);\n\n        if (this.do_session) {\n          this._addSysHandler(this._sasl_session_cb.bind(this), null, null, null, \"_session_auth_2\");\n\n          this.send($iq({\n            type: \"set\",\n            id: \"_session_auth_2\"\n          }).c('session', {\n            xmlns: Strophe.NS.SESSION\n          }).tree());\n        } else {\n          this.authenticated = true;\n\n          this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        }\n      }\n    } else {\n      Strophe.info(\"SASL binding failed.\");\n\n      this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n      return false;\n    }\n  },\n\n  /** PrivateFunction: _sasl_session_cb\n   *  _Private_ handler to finish successful SASL connection.\n   *\n   *  This sets Connection.authenticated to true on success, which\n   *  starts the processing of user handlers.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The matching stanza.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n  _sasl_session_cb: function _sasl_session_cb(elem) {\n    if (elem.getAttribute(\"type\") === \"result\") {\n      this.authenticated = true;\n\n      this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n    } else if (elem.getAttribute(\"type\") === \"error\") {\n      Strophe.info(\"Session creation failed.\");\n\n      this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n      return false;\n    }\n\n    return false;\n  },\n\n  /** PrivateFunction: _sasl_failure_cb\n   *  _Private_ handler for SASL authentication failure.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The matching stanza.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n\n  /* jshint unused:false */\n  _sasl_failure_cb: function _sasl_failure_cb(elem) {\n    // delete unneeded handlers\n    if (this._sasl_success_handler) {\n      this.deleteHandler(this._sasl_success_handler);\n      this._sasl_success_handler = null;\n    }\n\n    if (this._sasl_challenge_handler) {\n      this.deleteHandler(this._sasl_challenge_handler);\n      this._sasl_challenge_handler = null;\n    }\n\n    if (this._sasl_mechanism) this._sasl_mechanism.onFailure();\n\n    this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n    return false;\n  },\n\n  /* jshint unused:true */\n\n  /** PrivateFunction: _auth2_cb\n   *  _Private_ handler to finish legacy authentication.\n   *\n   *  This handler is called when the result from the jabber:iq:auth\n   *  <iq/> stanza is returned.\n   *\n   *  Parameters:\n   *    (XMLElement) elem - The stanza that triggered the callback.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n  _auth2_cb: function _auth2_cb(elem) {\n    if (elem.getAttribute(\"type\") === \"result\") {\n      this.authenticated = true;\n\n      this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n    } else if (elem.getAttribute(\"type\") === \"error\") {\n      this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n      this.disconnect('authentication failed');\n    }\n\n    return false;\n  },\n\n  /** PrivateFunction: _addSysTimedHandler\n   *  _Private_ function to add a system level timed handler.\n   *\n   *  This function is used to add a Strophe.TimedHandler for the\n   *  library code.  System timed handlers are allowed to run before\n   *  authentication is complete.\n   *\n   *  Parameters:\n   *    (Integer) period - The period of the handler.\n   *    (Function) handler - The callback function.\n   */\n  _addSysTimedHandler: function _addSysTimedHandler(period, handler) {\n    var thand = new Strophe.TimedHandler(period, handler);\n    thand.user = false;\n    this.addTimeds.push(thand);\n    return thand;\n  },\n\n  /** PrivateFunction: _addSysHandler\n   *  _Private_ function to add a system level stanza handler.\n   *\n   *  This function is used to add a Strophe.Handler for the\n   *  library code.  System stanza handlers are allowed to run before\n   *  authentication is complete.\n   *\n   *  Parameters:\n   *    (Function) handler - The callback function.\n   *    (String) ns - The namespace to match.\n   *    (String) name - The stanza name to match.\n   *    (String) type - The stanza type attribute to match.\n   *    (String) id - The stanza id attribute to match.\n   */\n  _addSysHandler: function _addSysHandler(handler, ns, name, type, id) {\n    var hand = new Strophe.Handler(handler, ns, name, type, id);\n    hand.user = false;\n    this.addHandlers.push(hand);\n    return hand;\n  },\n\n  /** PrivateFunction: _onDisconnectTimeout\n   *  _Private_ timeout handler for handling non-graceful disconnection.\n   *\n   *  If the graceful disconnect process does not complete within the\n   *  time allotted, this handler finishes the disconnect anyway.\n   *\n   *  Returns:\n   *    false to remove the handler.\n   */\n  _onDisconnectTimeout: function _onDisconnectTimeout() {\n    Strophe.info(\"_onDisconnectTimeout was called\");\n\n    this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n\n    this._proto._onDisconnectTimeout(); // actually disconnect\n\n\n    this._doDisconnect();\n\n    return false;\n  },\n\n  /** PrivateFunction: _onIdle\n   *  _Private_ handler to process events during idle cycle.\n   *\n   *  This handler is called every 100ms to fire timed handlers that\n   *  are ready and keep poll requests going.\n   */\n  _onIdle: function _onIdle() {\n    var _this8 = this;\n\n    // add timed handlers scheduled for addition\n    // NOTE: we add before remove in the case a timed handler is\n    // added and then deleted before the next _onIdle() call.\n    while (this.addTimeds.length > 0) {\n      this.timedHandlers.push(this.addTimeds.pop());\n    } // remove timed handlers that have been scheduled for deletion\n\n\n    while (this.removeTimeds.length > 0) {\n      var thand = this.removeTimeds.pop();\n      var i = this.timedHandlers.indexOf(thand);\n\n      if (i >= 0) {\n        this.timedHandlers.splice(i, 1);\n      }\n    } // call ready timed handlers\n\n\n    var now = new Date().getTime();\n    var newList = [];\n\n    for (var _i6 = 0; _i6 < this.timedHandlers.length; _i6++) {\n      var _thand = this.timedHandlers[_i6];\n\n      if (this.authenticated || !_thand.user) {\n        var since = _thand.lastCalled + _thand.period;\n\n        if (since - now <= 0) {\n          if (_thand.run()) {\n            newList.push(_thand);\n          }\n        } else {\n          newList.push(_thand);\n        }\n      }\n    }\n\n    this.timedHandlers = newList;\n    clearTimeout(this._idleTimeout);\n\n    this._proto._onIdle(); // reactivate the timer only if connected\n\n\n    if (this.connected) {\n      this._idleTimeout = setTimeout(function () {\n        return _this8._onIdle();\n      }, 100);\n    }\n  }\n};\n/** Class: Strophe.SASLMechanism\n *\n *  encapsulates SASL authentication mechanisms.\n *\n *  User code may override the priority for each mechanism or disable it completely.\n *  See <priority> for information about changing priority and <test> for informatian on\n *  how to disable a mechanism.\n *\n *  By default, all mechanisms are enabled and the priorities are\n *\n *      OAUTHBEARER - 60\n *      SCRAM-SHA1 - 50\n *      DIGEST-MD5 - 40\n *      PLAIN - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  See: Strophe.Connection.addSupportedSASLMechanisms\n */\n\n/**\n * PrivateConstructor: Strophe.SASLMechanism\n * SASL auth mechanism abstraction.\n *\n *  Parameters:\n *    (String) name - SASL Mechanism name.\n *    (Boolean) isClientFirst - If client should send response first without challenge.\n *    (Number) priority - Priority.\n *\n *  Returns:\n *    A new Strophe.SASLMechanism object.\n */\n\nStrophe.SASLMechanism = function (name, isClientFirst, priority) {\n  /** PrivateVariable: name\n   *  Mechanism name.\n   */\n  this.name = name;\n  /** PrivateVariable: isClientFirst\n   *  If client sends response without initial server challenge.\n   */\n\n  this.isClientFirst = isClientFirst;\n  /** Variable: priority\n   *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n   *  Users may override this to prioritize mechanisms differently.\n   *\n   *  In the default configuration the priorities are\n   *\n   *  SCRAM-SHA1 - 40\n   *  DIGEST-MD5 - 30\n   *  Plain - 20\n   *\n   *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n   *\n   *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   */\n\n  this.priority = priority;\n};\n\nStrophe.SASLMechanism.prototype = {\n  /**\n   *  Function: test\n   *  Checks if mechanism able to run.\n   *  To disable a mechanism, make this return false;\n   *\n   *  To disable plain authentication run\n   *  > Strophe.SASLPlain.test = function() {\n   *  >   return false;\n   *  > }\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   *\n   *  Returns:\n   *    (Boolean) If mechanism was able to run.\n   */\n\n  /* jshint unused:false */\n  test: function test(connection) {\n    return true;\n  },\n\n  /* jshint unused:true */\n\n  /** PrivateFunction: onStart\n   *  Called before starting mechanism on some connection.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   */\n  onStart: function onStart(connection) {\n    this._connection = connection;\n  },\n\n  /** PrivateFunction: onChallenge\n   *  Called by protocol implementation on incoming challenge. If client is\n   *  first (isClientFirst === true) challenge will be null on the first call.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   *    (String) challenge - current challenge to handle.\n   *\n   *  Returns:\n   *    (String) Mechanism response.\n   */\n\n  /* jshint unused:false */\n  onChallenge: function onChallenge(connection, challenge) {\n    throw new Error(\"You should implement challenge handling!\");\n  },\n\n  /* jshint unused:true */\n\n  /** PrivateFunction: onFailure\n   *  Protocol informs mechanism implementation about SASL failure.\n   */\n  onFailure: function onFailure() {\n    this._connection = null;\n  },\n\n  /** PrivateFunction: onSuccess\n   *  Protocol informs mechanism implementation about SASL success.\n   */\n  onSuccess: function onSuccess() {\n    this._connection = null;\n  }\n};\n/** Constants: SASL mechanisms\n *  Available authentication mechanisms\n *\n *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n *  Strophe.SASLPlain - SASL PLAIN authentication.\n *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n *  Strophe.SASLExternal - SASL EXTERNAL authentication\n *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n */\n// Building SASL callbacks\n\n/** PrivateConstructor: SASLAnonymous\n *  SASL ANONYMOUS authentication.\n */\n\nStrophe.SASLAnonymous = function () {};\n\nStrophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\nStrophe.SASLAnonymous.prototype.test = function (connection) {\n  return connection.authcid === null;\n};\n/** PrivateConstructor: SASLPlain\n *  SASL PLAIN authentication.\n */\n\n\nStrophe.SASLPlain = function () {};\n\nStrophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\nStrophe.SASLPlain.prototype.test = function (connection) {\n  return connection.authcid !== null;\n};\n\nStrophe.SASLPlain.prototype.onChallenge = function (connection) {\n  var auth_str = connection.authzid;\n  auth_str = auth_str + \"\\0\";\n  auth_str = auth_str + connection.authcid;\n  auth_str = auth_str + \"\\0\";\n  auth_str = auth_str + connection.pass;\n  return utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(auth_str);\n};\n/** PrivateConstructor: SASLSHA1\n *  SASL SCRAM SHA 1 authentication.\n */\n\n\nStrophe.SASLSHA1 = function () {};\n\nStrophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\nStrophe.SASLSHA1.prototype.test = function (connection) {\n  return connection.authcid !== null;\n};\n\nStrophe.SASLSHA1.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n  var cnonce = test_cnonce || md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hexdigest(\"\" + Math.random() * 1234567890);\n  var auth_str = \"n=\" + utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(connection.authcid);\n  auth_str += \",r=\";\n  auth_str += cnonce;\n  connection._sasl_data.cnonce = cnonce;\n  connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n  auth_str = \"n,,\" + auth_str;\n\n  this.onChallenge = function (connection, challenge) {\n    var nonce, salt, iter, Hi, U, U_old, i, k;\n    var responseText = \"c=biws,\";\n    var authMessage = \"\".concat(connection._sasl_data[\"client-first-message-bare\"], \",\").concat(challenge, \",\");\n    var cnonce = connection._sasl_data.cnonce;\n    var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n    while (challenge.match(attribMatch)) {\n      var matches = challenge.match(attribMatch);\n      challenge = challenge.replace(matches[0], \"\");\n\n      switch (matches[1]) {\n        case \"r\":\n          nonce = matches[2];\n          break;\n\n        case \"s\":\n          salt = matches[2];\n          break;\n\n        case \"i\":\n          iter = matches[2];\n          break;\n      }\n    }\n\n    if (nonce.substr(0, cnonce.length) !== cnonce) {\n      connection._sasl_data = {};\n      return connection._sasl_failure_cb();\n    }\n\n    responseText += \"r=\" + nonce;\n    authMessage += responseText;\n    salt = atob(salt);\n    salt += \"\\x00\\x00\\x00\\x01\";\n    var pass = utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(connection.pass);\n    Hi = U_old = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].core_hmac_sha1(pass, salt);\n\n    for (i = 1; i < iter; i++) {\n      U = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].core_hmac_sha1(pass, sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].binb2str(U_old));\n\n      for (k = 0; k < 5; k++) {\n        Hi[k] ^= U[k];\n      }\n\n      U_old = U;\n    }\n\n    Hi = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].binb2str(Hi);\n    var clientKey = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].core_hmac_sha1(Hi, \"Client Key\");\n    var serverKey = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].str_hmac_sha1(Hi, \"Server Key\");\n    var clientSignature = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].core_hmac_sha1(sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].str_sha1(sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].binb2str(clientKey)), authMessage);\n    connection._sasl_data[\"server-signature\"] = sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].b64_hmac_sha1(serverKey, authMessage);\n\n    for (k = 0; k < 5; k++) {\n      clientKey[k] ^= clientSignature[k];\n    }\n\n    responseText += \",p=\" + btoa(sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].binb2str(clientKey));\n    return responseText;\n  };\n\n  return auth_str;\n};\n/** PrivateConstructor: SASLMD5\n *  SASL DIGEST MD5 authentication.\n */\n\n\nStrophe.SASLMD5 = function () {};\n\nStrophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\nStrophe.SASLMD5.prototype.test = function (connection) {\n  return connection.authcid !== null;\n};\n/** PrivateFunction: _quote\n *  _Private_ utility function to backslash escape and quote strings.\n *\n *  Parameters:\n *    (String) str - The string to be quoted.\n *\n *  Returns:\n *    quoted string\n */\n\n\nStrophe.SASLMD5.prototype._quote = function (str) {\n  return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"'; //\" end string workaround for emacs\n};\n\nStrophe.SASLMD5.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n  var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n  var cnonce = test_cnonce || md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hexdigest(\"\" + Math.random() * 1234567890);\n  var realm = \"\";\n  var host = null;\n  var nonce = \"\";\n  var qop = \"\";\n\n  while (challenge.match(attribMatch)) {\n    var matches = challenge.match(attribMatch);\n    challenge = challenge.replace(matches[0], \"\");\n    matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n\n    switch (matches[1]) {\n      case \"realm\":\n        realm = matches[2];\n        break;\n\n      case \"nonce\":\n        nonce = matches[2];\n        break;\n\n      case \"qop\":\n        qop = matches[2];\n        break;\n\n      case \"host\":\n        host = matches[2];\n        break;\n    }\n  }\n\n  var digest_uri = connection.servtype + \"/\" + connection.domain;\n\n  if (host !== null) {\n    digest_uri = digest_uri + \"/\" + host;\n  }\n\n  var cred = utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n  var A1 = md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(cred) + \":\" + nonce + \":\" + cnonce;\n  var A2 = 'AUTHENTICATE:' + digest_uri;\n  var responseText = \"\";\n  responseText += 'charset=utf-8,';\n  responseText += 'username=' + this._quote(utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(connection.authcid)) + ',';\n  responseText += 'realm=' + this._quote(realm) + ',';\n  responseText += 'nonce=' + this._quote(nonce) + ',';\n  responseText += 'nc=00000001,';\n  responseText += 'cnonce=' + this._quote(cnonce) + ',';\n  responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n  responseText += 'response=' + md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hexdigest(md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hexdigest(A1) + \":\" + nonce + \":00000001:\" + cnonce + \":auth:\" + md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hexdigest(A2)) + \",\";\n  responseText += 'qop=auth';\n\n  this.onChallenge = function () {\n    return \"\";\n  };\n\n  return responseText;\n};\n/** PrivateConstructor: SASLOAuthBearer\n *  SASL OAuth Bearer authentication.\n */\n\n\nStrophe.SASLOAuthBearer = function () {};\n\nStrophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\nStrophe.SASLOAuthBearer.prototype.test = function (connection) {\n  return connection.pass !== null;\n};\n\nStrophe.SASLOAuthBearer.prototype.onChallenge = function (connection) {\n  var auth_str = 'n,';\n\n  if (connection.authcid !== null) {\n    auth_str = auth_str + 'a=' + connection.authzid;\n  }\n\n  auth_str = auth_str + ',';\n  auth_str = auth_str + \"\\x01\";\n  auth_str = auth_str + 'auth=Bearer ';\n  auth_str = auth_str + connection.pass;\n  auth_str = auth_str + \"\\x01\";\n  auth_str = auth_str + \"\\x01\";\n  return utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(auth_str);\n};\n/** PrivateConstructor: SASLExternal\n *  SASL EXTERNAL authentication.\n *\n *  The EXTERNAL mechanism allows a client to request the server to use\n *  credentials established by means external to the mechanism to\n *  authenticate the client. The external means may be, for instance,\n *  TLS services.\n */\n\n\nStrophe.SASLExternal = function () {};\n\nStrophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\nStrophe.SASLExternal.prototype.onChallenge = function (connection) {\n  /** According to XEP-178, an authzid SHOULD NOT be presented when the\n   * authcid contained or implied in the client certificate is the JID (i.e.\n   * authzid) with which the user wants to log in as.\n   *\n   * To NOT send the authzid, the user should therefore set the authcid equal\n   * to the JID when instantiating a new Strophe.Connection object.\n   */\n  return connection.authcid === connection.authzid ? '' : connection.authzid;\n};\n/** PrivateConstructor: SASLXOAuth2\n *  SASL X-OAuth2 authentication.\n */\n\n\nStrophe.SASLXOAuth2 = function () {};\n\nStrophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\nStrophe.SASLXOAuth2.prototype.test = function (connection) {\n  return connection.pass !== null;\n};\n\nStrophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n  var auth_str = \"\\0\";\n\n  if (connection.authcid !== null) {\n    auth_str = auth_str + connection.authzid;\n  }\n\n  auth_str = auth_str + \"\\0\";\n  auth_str = auth_str + connection.pass;\n  return utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].utf16to8(auth_str);\n};\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  'Strophe': Strophe,\n  '$build': $build,\n  '$iq': $iq,\n  '$msg': $msg,\n  '$pres': $pres,\n  'SHA1': sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  'MD5': md5__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  'b64_hmac_sha1': sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].b64_hmac_sha1,\n  'b64_sha1': sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].b64_sha1,\n  'str_hmac_sha1': sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].str_hmac_sha1,\n  'str_sha1': sha1__WEBPACK_IMPORTED_MODULE_1__[\"default\"].str_sha1\n});\n\n/***/ }),\n\n/***/ \"./src/md5.js\":\n/*!********************!*\\\n  !*** ./src/md5.js ***!\n  \\********************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MD5; });\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*\n * Everything that isn't used by Strophe has been stripped here!\n */\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nvar safe_add = function safe_add(x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xFFFF;\n};\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nvar bit_rol = function bit_rol(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n};\n/*\n * Convert a string to an array of little-endian words\n */\n\n\nvar str2binl = function str2binl(str) {\n  if (typeof str !== \"string\") {\n    throw new Error(\"str2binl was passed a non-string\");\n  }\n\n  var bin = [];\n\n  for (var i = 0; i < str.length * 8; i += 8) {\n    bin[i >> 5] |= (str.charCodeAt(i / 8) & 255) << i % 32;\n  }\n\n  return bin;\n};\n/*\n * Convert an array of little-endian words to a string\n */\n\n\nvar binl2str = function binl2str(bin) {\n  var str = \"\";\n\n  for (var i = 0; i < bin.length * 32; i += 8) {\n    str += String.fromCharCode(bin[i >> 5] >>> i % 32 & 255);\n  }\n\n  return str;\n};\n/*\n * Convert an array of little-endian words to a hex string.\n */\n\n\nvar binl2hex = function binl2hex(binarray) {\n  var hex_tab = \"0123456789abcdef\";\n  var str = \"\";\n\n  for (var i = 0; i < binarray.length * 4; i++) {\n    str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);\n  }\n\n  return str;\n};\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nvar md5_cmn = function md5_cmn(q, a, b, x, s, t) {\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n};\n\nvar md5_ff = function md5_ff(a, b, c, d, x, s, t) {\n  return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n};\n\nvar md5_gg = function md5_gg(a, b, c, d, x, s, t) {\n  return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n};\n\nvar md5_hh = function md5_hh(a, b, c, d, x, s, t) {\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n};\n\nvar md5_ii = function md5_ii(a, b, c, d, x, s, t) {\n  return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n};\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\n\n\nvar core_md5 = function core_md5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[(len + 64 >>> 9 << 4) + 14] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  var olda, oldb, oldc, oldd;\n\n  for (var i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n\n  return [a, b, c, d];\n};\n/*\n * These are the functions you'll usually want to call.\n * They take string arguments and return either hex or base-64 encoded\n * strings.\n */\n\n\nvar MD5 = {\n  hexdigest: function hexdigest(s) {\n    return binl2hex(core_md5(str2binl(s), s.length * 8));\n  },\n  hash: function hash(s) {\n    return binl2str(core_md5(str2binl(s), s.length * 8));\n  }\n};\n\n\n/***/ }),\n\n/***/ \"./src/sha1.js\":\n/*!*********************!*\\\n  !*** ./src/sha1.js ***!\n  \\*********************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SHA1; });\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: false */\n\n/* global define */\n\n/* Some functions and variables have been stripped for use with Strophe */\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction core_sha1(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << 24 - len % 32;\n  x[(len + 64 >> 9 << 4) + 15] = len;\n  var w = new Array(80);\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  var e = -1009589776;\n  var i, j, t, olda, oldb, oldc, oldd, olde;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    olde = e;\n\n    for (j = 0; j < 80; j++) {\n      if (j < 16) {\n        w[j] = x[i + j];\n      } else {\n        w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n      }\n\n      t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n\n  return [a, b, c, d, e];\n}\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\n\n\nfunction sha1_ft(t, b, c, d) {\n  if (t < 20) {\n    return b & c | ~b & d;\n  }\n\n  if (t < 40) {\n    return b ^ c ^ d;\n  }\n\n  if (t < 60) {\n    return b & c | b & d | c & d;\n  }\n\n  return b ^ c ^ d;\n}\n/*\n * Determine the appropriate additive constant for the current iteration\n */\n\n\nfunction sha1_kt(t) {\n  return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n}\n/*\n * Calculate the HMAC-SHA1 of a key and some data\n */\n\n\nfunction core_hmac_sha1(key, data) {\n  var bkey = str2binb(key);\n\n  if (bkey.length > 16) {\n    bkey = core_sha1(bkey, key.length * 8);\n  }\n\n  var ipad = new Array(16),\n      opad = new Array(16);\n\n  for (var i = 0; i < 16; i++) {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n  return core_sha1(opad.concat(hash), 512 + 160);\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safe_add(x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xFFFF;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction rol(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * Convert an 8-bit or 16-bit string to an array of big-endian words\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\n */\n\n\nfunction str2binb(str) {\n  var bin = [];\n  var mask = 255;\n\n  for (var i = 0; i < str.length * 8; i += 8) {\n    bin[i >> 5] |= (str.charCodeAt(i / 8) & mask) << 24 - i % 32;\n  }\n\n  return bin;\n}\n/*\n * Convert an array of big-endian words to a base-64 string\n */\n\n\nfunction binb2b64(binarray) {\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  var triplet, j;\n\n  for (var i = 0; i < binarray.length * 4; i += 3) {\n    triplet = (binarray[i >> 2] >> 8 * (3 - i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4) & 0xFF;\n\n    for (j = 0; j < 4; j++) {\n      if (i * 8 + j * 6 > binarray.length * 32) {\n        str += \"=\";\n      } else {\n        str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);\n      }\n    }\n  }\n\n  return str;\n}\n/*\n * Convert an array of big-endian words to a string\n */\n\n\nfunction binb2str(bin) {\n  var str = \"\";\n  var mask = 255;\n\n  for (var i = 0; i < bin.length * 32; i += 8) {\n    str += String.fromCharCode(bin[i >> 5] >>> 24 - i % 32 & mask);\n  }\n\n  return str;\n}\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\n\n\nvar SHA1 = {\n  b64_hmac_sha1: function b64_hmac_sha1(key, data) {\n    return binb2b64(core_hmac_sha1(key, data));\n  },\n  b64_sha1: function b64_sha1(s) {\n    return binb2b64(core_sha1(str2binb(s), s.length * 8));\n  },\n  binb2str: binb2str,\n  core_hmac_sha1: core_hmac_sha1,\n  str_hmac_sha1: function str_hmac_sha1(key, data) {\n    return binb2str(core_hmac_sha1(key, data));\n  },\n  str_sha1: function str_sha1(s) {\n    return binb2str(core_sha1(str2binb(s), s.length * 8));\n  }\n};\n\n\n/***/ }),\n\n/***/ \"./src/strophe.js\":\n/*!************************!*\\\n  !*** ./src/strophe.js ***!\n  \\************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ \"./src/core.js\");\n/* harmony import */ var bosh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bosh */ \"./src/bosh.js\");\n/* harmony import */ var websocket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! websocket */ \"./src/websocket.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return core__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/*global global*/\n\n\n\nglobal.Strophe = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Strophe;\nglobal.$build = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$build;\nglobal.$iq = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$iq;\nglobal.$msg = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$msg;\nglobal.$pres = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$pres;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./src/utils.js\":\n/*!**********************!*\\\n  !*** ./src/utils.js ***!\n  \\**********************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return utils; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar utils = {\n  utf16to8: function utf16to8(str) {\n    var i, c;\n    var out = \"\";\n    var len = str.length;\n\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n\n      if (c >= 0x0000 && c <= 0x007F) {\n        out += str.charAt(i);\n      } else if (c > 0x07FF) {\n        out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n        out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      } else {\n        out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      }\n    }\n\n    return out;\n  },\n  addCookies: function addCookies(cookies) {\n    /* Parameters:\n     *  (Object) cookies - either a map of cookie names\n     *    to string values or to maps of cookie values.\n     *\n     * For example:\n     * { \"myCookie\": \"1234\" }\n     *\n     * or:\n     * { \"myCookie\": {\n     *      \"value\": \"1234\",\n     *      \"domain\": \".example.org\",\n     *      \"path\": \"/\",\n     *      \"expires\": expirationDate\n     *      }\n     *  }\n     *\n     *  These values get passed to Strophe.Connection via\n     *   options.cookies\n     */\n    cookies = cookies || {};\n\n    for (var cookieName in cookies) {\n      if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n        var expires = '';\n        var domain = '';\n        var path = '';\n        var cookieObj = cookies[cookieName];\n        var isObj = _typeof(cookieObj) === \"object\";\n        var cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n\n        if (isObj) {\n          expires = cookieObj.expires ? \";expires=\" + cookieObj.expires : '';\n          domain = cookieObj.domain ? \";domain=\" + cookieObj.domain : '';\n          path = cookieObj.path ? \";path=\" + cookieObj.path : '';\n        }\n\n        document.cookie = cookieName + '=' + cookieValue + expires + domain + path;\n      }\n    }\n  }\n};\n\n\n/***/ }),\n\n/***/ \"./src/websocket.js\":\n/*!**************************!*\\\n  !*** ./src/websocket.js ***!\n  \\**************************/\n/*! no exports provided */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ \"./src/core.js\");\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* global window, clearTimeout, WebSocket, DOMParser */\n\nvar Strophe = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Strophe;\nvar $build = core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].$build;\n/** Class: Strophe.WebSocket\n *  _Private_ helper class that handles WebSocket Connections\n *\n *  The Strophe.WebSocket class is used internally by Strophe.Connection\n *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n */\n\n/** File: websocket.js\n *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n *\n *  This file implements XMPP over WebSockets for Strophejs.\n *  If a Connection is established with a Websocket url (ws://...)\n *  Strophe will use WebSockets.\n *  For more information on XMPP-over-WebSocket see RFC 7395:\n *  http://tools.ietf.org/html/rfc7395\n *\n *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n */\n\n/** PrivateConstructor: Strophe.Websocket\n *  Create and initialize a Strophe.WebSocket object.\n *  Currently only sets the connection Object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n *\n *  Returns:\n *    A new Strophe.WebSocket object.\n */\n\nStrophe.Websocket = function (connection) {\n  this._conn = connection;\n  this.strip = \"wrapper\";\n  var service = connection.service;\n\n  if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n    // If the service is not an absolute URL, assume it is a path and put the absolute\n    // URL together from options, current URL and the path.\n    var new_service = \"\";\n\n    if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n      new_service += \"ws\";\n    } else {\n      new_service += \"wss\";\n    }\n\n    new_service += \"://\" + window.location.host;\n\n    if (service.indexOf(\"/\") !== 0) {\n      new_service += window.location.pathname + service;\n    } else {\n      new_service += service;\n    }\n\n    connection.service = new_service;\n  }\n};\n\nStrophe.Websocket.prototype = {\n  /** PrivateFunction: _buildStream\n   *  _Private_ helper function to generate the <stream> start tag for WebSockets\n   *\n   *  Returns:\n   *    A Strophe.Builder with a <stream> element.\n   */\n  _buildStream: function _buildStream() {\n    return $build(\"open\", {\n      \"xmlns\": Strophe.NS.FRAMING,\n      \"to\": this._conn.domain,\n      \"version\": '1.0'\n    });\n  },\n\n  /** PrivateFunction: _check_streamerror\n   * _Private_ checks a message for stream:error\n   *\n   *  Parameters:\n   *    (Strophe.Request) bodyWrap - The received stanza.\n   *    connectstatus - The ConnectStatus that will be set on error.\n   *  Returns:\n   *     true if there was a streamerror, false otherwise.\n   */\n  _check_streamerror: function _check_streamerror(bodyWrap, connectstatus) {\n    var errors;\n\n    if (bodyWrap.getElementsByTagNameNS) {\n      errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"error\");\n    } else {\n      errors = bodyWrap.getElementsByTagName(\"stream:error\");\n    }\n\n    if (errors.length === 0) {\n      return false;\n    }\n\n    var error = errors[0];\n    var condition = \"\";\n    var text = \"\";\n    var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n\n    for (var i = 0; i < error.childNodes.length; i++) {\n      var e = error.childNodes[i];\n\n      if (e.getAttribute(\"xmlns\") !== ns) {\n        break;\n      }\n\n      if (e.nodeName === \"text\") {\n        text = e.textContent;\n      } else {\n        condition = e.nodeName;\n      }\n    }\n\n    var errorString = \"WebSocket stream error: \";\n\n    if (condition) {\n      errorString += condition;\n    } else {\n      errorString += \"unknown\";\n    }\n\n    if (text) {\n      errorString += \" - \" + text;\n    }\n\n    Strophe.error(errorString); // close the connection on stream_error\n\n    this._conn._changeConnectStatus(connectstatus, condition);\n\n    this._conn._doDisconnect();\n\n    return true;\n  },\n\n  /** PrivateFunction: _reset\n   *  Reset the connection.\n   *\n   *  This function is called by the reset function of the Strophe Connection.\n   *  Is not needed by WebSockets.\n   */\n  _reset: function _reset() {\n    return;\n  },\n\n  /** PrivateFunction: _connect\n   *  _Private_ function called by Strophe.Connection.connect\n   *\n   *  Creates a WebSocket for a connection and assigns Callbacks to it.\n   *  Does nothing if there already is a WebSocket.\n   */\n  _connect: function _connect() {\n    // Ensure that there is no open WebSocket from a previous Connection.\n    this._closeSocket(); // Create the new WobSocket\n\n\n    this.socket = new WebSocket(this._conn.service, \"xmpp\");\n    this.socket.onopen = this._onOpen.bind(this);\n    this.socket.onerror = this._onError.bind(this);\n    this.socket.onclose = this._onClose.bind(this);\n    this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n  },\n\n  /** PrivateFunction: _connect_cb\n   *  _Private_ function called by Strophe.Connection._connect_cb\n   *\n   * checks for stream:error\n   *\n   *  Parameters:\n   *    (Strophe.Request) bodyWrap - The received stanza.\n   */\n  _connect_cb: function _connect_cb(bodyWrap) {\n    var error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\n\n    if (error) {\n      return Strophe.Status.CONNFAIL;\n    }\n  },\n\n  /** PrivateFunction: _handleStreamStart\n   * _Private_ function that checks the opening <open /> tag for errors.\n   *\n   * Disconnects if there is an error and returns false, true otherwise.\n   *\n   *  Parameters:\n   *    (Node) message - Stanza containing the <open /> tag.\n   */\n  _handleStreamStart: function _handleStreamStart(message) {\n    var error = false; // Check for errors in the <open /> tag\n\n    var ns = message.getAttribute(\"xmlns\");\n\n    if (typeof ns !== \"string\") {\n      error = \"Missing xmlns in <open />\";\n    } else if (ns !== Strophe.NS.FRAMING) {\n      error = \"Wrong xmlns in <open />: \" + ns;\n    }\n\n    var ver = message.getAttribute(\"version\");\n\n    if (typeof ver !== \"string\") {\n      error = \"Missing version in <open />\";\n    } else if (ver !== \"1.0\") {\n      error = \"Wrong version in <open />: \" + ver;\n    }\n\n    if (error) {\n      this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n\n      this._conn._doDisconnect();\n\n      return false;\n    }\n\n    return true;\n  },\n\n  /** PrivateFunction: _connect_cb_wrapper\n   * _Private_ function that handles the first connection messages.\n   *\n   * On receiving an opening stream tag this callback replaces itself with the real\n   * message handler. On receiving a stream error the connection is terminated.\n   */\n  _connect_cb_wrapper: function _connect_cb_wrapper(message) {\n    if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n      // Strip the XML Declaration, if there is one\n      var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n      if (data === '') return;\n      var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\n      this._conn.xmlInput(streamStart);\n\n      this._conn.rawInput(message.data); //_handleStreamSteart will check for XML errors and disconnect on error\n\n\n      if (this._handleStreamStart(streamStart)) {\n        //_connect_cb will check for stream:error and disconnect on error\n        this._connect_cb(streamStart);\n      }\n    } else if (message.data.indexOf(\"<close \") === 0) {\n      // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n      // Parse the raw string to an XML element\n      var parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement; // Report this input to the raw and xml handlers\n\n      this._conn.xmlInput(parsedMessage);\n\n      this._conn.rawInput(message.data);\n\n      var see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n\n      if (see_uri) {\n        var service = this._conn.service; // Valid scenarios: WSS->WSS, WS->ANY\n\n        var isSecureRedirect = service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0 || service.indexOf(\"ws:\") >= 0;\n\n        if (isSecureRedirect) {\n          this._conn._changeConnectStatus(Strophe.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\n          this._conn.reset();\n\n          this._conn.service = see_uri;\n\n          this._connect();\n        }\n      } else {\n        this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"Received closing stream\");\n\n        this._conn._doDisconnect();\n      }\n    } else {\n      var string = this._streamWrap(message.data);\n\n      var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n      this.socket.onmessage = this._onMessage.bind(this);\n\n      this._conn._connect_cb(elem, null, message.data);\n    }\n  },\n\n  /** PrivateFunction: _disconnect\n   *  _Private_ function called by Strophe.Connection.disconnect\n   *\n   *  Disconnects and sends a last stanza if one is given\n   *\n   *  Parameters:\n   *    (Request) pres - This stanza will be sent before disconnecting.\n   */\n  _disconnect: function _disconnect(pres) {\n    if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n      if (pres) {\n        this._conn.send(pres);\n      }\n\n      var close = $build(\"close\", {\n        \"xmlns\": Strophe.NS.FRAMING\n      });\n\n      this._conn.xmlOutput(close.tree());\n\n      var closeString = Strophe.serialize(close);\n\n      this._conn.rawOutput(closeString);\n\n      try {\n        this.socket.send(closeString);\n      } catch (e) {\n        Strophe.info(\"Couldn't send <close /> tag.\");\n      }\n    }\n\n    this._conn._doDisconnect();\n  },\n\n  /** PrivateFunction: _doDisconnect\n   *  _Private_ function to disconnect.\n   *\n   *  Just closes the Socket for WebSockets\n   */\n  _doDisconnect: function _doDisconnect() {\n    Strophe.info(\"WebSockets _doDisconnect was called\");\n\n    this._closeSocket();\n  },\n\n  /** PrivateFunction _streamWrap\n   *  _Private_ helper function to wrap a stanza in a <stream> tag.\n   *  This is used so Strophe can process stanzas from WebSockets like BOSH\n   */\n  _streamWrap: function _streamWrap(stanza) {\n    return \"<wrapper>\" + stanza + '</wrapper>';\n  },\n\n  /** PrivateFunction: _closeSocket\n   *  _Private_ function to close the WebSocket.\n   *\n   *  Closes the socket if it is still open and deletes it\n   */\n  _closeSocket: function _closeSocket() {\n    if (this.socket) {\n      try {\n        this.socket.onerror = null;\n        this.socket.close();\n      } catch (e) {\n        Strophe.debug(e.message);\n      }\n    }\n\n    this.socket = null;\n  },\n\n  /** PrivateFunction: _emptyQueue\n   * _Private_ function to check if the message queue is empty.\n   *\n   *  Returns:\n   *    True, because WebSocket messages are send immediately after queueing.\n   */\n  _emptyQueue: function _emptyQueue() {\n    return true;\n  },\n\n  /** PrivateFunction: _onClose\n   * _Private_ function to handle websockets closing.\n   *\n   * Nothing to do here for WebSockets\n   */\n  _onClose: function _onClose(e) {\n    if (this._conn.connected && !this._conn.disconnecting) {\n      Strophe.error(\"Websocket closed unexpectedly\");\n\n      this._conn._doDisconnect();\n    } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n      // in case the onError callback was not called (Safari 10 does not\n      // call onerror when the initial connection fails) we need to\n      // dispatch a CONNFAIL status update to be consistent with the\n      // behavior on other browsers.\n      Strophe.error(\"Websocket closed unexcectedly\");\n\n      this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n      this._conn._doDisconnect();\n    } else {\n      Strophe.info(\"Websocket closed\");\n    }\n  },\n\n  /** PrivateFunction: _no_auth_received\n   *\n   * Called on stream start/restart when no stream:features\n   * has been received.\n   */\n  _no_auth_received: function _no_auth_received(callback) {\n    Strophe.error(\"Server did not offer a supported authentication mechanism\");\n\n    this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.NO_AUTH_MECH);\n\n    if (callback) {\n      callback.call(this._conn);\n    }\n\n    this._conn._doDisconnect();\n  },\n\n  /** PrivateFunction: _onDisconnectTimeout\n   *  _Private_ timeout handler for handling non-graceful disconnection.\n   *\n   *  This does nothing for WebSockets\n   */\n  _onDisconnectTimeout: function _onDisconnectTimeout() {},\n\n  /** PrivateFunction: _abortAllRequests\n   *  _Private_ helper function that makes sure all pending requests are aborted.\n   */\n  _abortAllRequests: function _abortAllRequests() {},\n\n  /** PrivateFunction: _onError\n   * _Private_ function to handle websockets errors.\n   *\n   * Parameters:\n   * (Object) error - The websocket error.\n   */\n  _onError: function _onError(error) {\n    Strophe.error(\"Websocket error \" + error);\n\n    this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n    this._disconnect();\n  },\n\n  /** PrivateFunction: _onIdle\n   *  _Private_ function called by Strophe.Connection._onIdle\n   *\n   *  sends all queued stanzas\n   */\n  _onIdle: function _onIdle() {\n    var data = this._conn._data;\n\n    if (data.length > 0 && !this._conn.paused) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] !== null) {\n          var stanza = void 0;\n\n          if (data[i] === \"restart\") {\n            stanza = this._buildStream().tree();\n          } else {\n            stanza = data[i];\n          }\n\n          var rawStanza = Strophe.serialize(stanza);\n\n          this._conn.xmlOutput(stanza);\n\n          this._conn.rawOutput(rawStanza);\n\n          this.socket.send(rawStanza);\n        }\n      }\n\n      this._conn._data = [];\n    }\n  },\n\n  /** PrivateFunction: _onMessage\n   * _Private_ function to handle websockets messages.\n   *\n   * This function parses each of the messages as if they are full documents.\n   * [TODO : We may actually want to use a SAX Push parser].\n   *\n   * Since all XMPP traffic starts with\n   *  <stream:stream version='1.0'\n   *                 xml:lang='en'\n   *                 xmlns='jabber:client'\n   *                 xmlns:stream='http://etherx.jabber.org/streams'\n   *                 id='3697395463'\n   *                 from='SERVER'>\n   *\n   * The first stanza will always fail to be parsed.\n   *\n   * Additionally, the seconds stanza will always be <stream:features> with\n   * the stream NS defined in the previous stanza, so we need to 'force'\n   * the inclusion of the NS in this stanza.\n   *\n   * Parameters:\n   * (string) message - The websocket message.\n   */\n  _onMessage: function _onMessage(message) {\n    var elem; // check for closing stream\n\n    var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\n    if (message.data === close) {\n      this._conn.rawInput(close);\n\n      this._conn.xmlInput(message);\n\n      if (!this._conn.disconnecting) {\n        this._conn._doDisconnect();\n      }\n\n      return;\n    } else if (message.data.search(\"<open \") === 0) {\n      // This handles stream restarts\n      elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\n      if (!this._handleStreamStart(elem)) {\n        return;\n      }\n    } else {\n      var data = this._streamWrap(message.data);\n\n      elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n    }\n\n    if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\n      return;\n    } //handle unavailable presence stanza before disconnecting\n\n\n    if (this._conn.disconnecting && elem.firstChild.nodeName === \"presence\" && elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n      this._conn.xmlInput(elem);\n\n      this._conn.rawInput(Strophe.serialize(elem)); // if we are already disconnecting we will ignore the unavailable stanza and\n      // wait for the </stream:stream> tag before we close the connection\n\n\n      return;\n    }\n\n    this._conn._dataRecv(elem, message.data);\n  },\n\n  /** PrivateFunction: _onOpen\n   * _Private_ function to handle websockets connection setup.\n   *\n   * The opening stream tag is sent here.\n   */\n  _onOpen: function _onOpen() {\n    Strophe.info(\"Websocket open\");\n\n    var start = this._buildStream();\n\n    this._conn.xmlOutput(start.tree());\n\n    var startString = Strophe.serialize(start);\n\n    this._conn.rawOutput(startString);\n\n    this.socket.send(startString);\n  },\n\n  /** PrivateFunction: _reqToData\n   * _Private_ function to get a stanza out of a request.\n   *\n   * WebSockets don't use requests, so the passed argument is just returned.\n   *\n   *  Parameters:\n   *    (Object) stanza - The stanza.\n   *\n   *  Returns:\n   *    The stanza that was passed.\n   */\n  _reqToData: function _reqToData(stanza) {\n    return stanza;\n  },\n\n  /** PrivateFunction: _send\n   *  _Private_ part of the Connection.send function for WebSocket\n   *\n   * Just flushes the messages that are in the queue\n   */\n  _send: function _send() {\n    this._conn.flush();\n  },\n\n  /** PrivateFunction: _sendRestart\n   *\n   *  Send an xmpp:restart stanza.\n   */\n  _sendRestart: function _sendRestart() {\n    clearTimeout(this._conn._idleTimeout);\n\n    this._conn._onIdle.bind(this._conn)();\n  }\n};\n\n/***/ })\n\n/******/ })[\"default\"];\n});\n//# sourceMappingURL=strophe.js.map","const config = require('./cubeConfig'),\n\tchatPRTCL = config.chatProtocol,\n\tUtils = require('./cubeInternalUtils');\n\nfunction Connection() {\n\tconst protocol = chatPRTCL.active === 1 ? chatPRTCL.bosh : chatPRTCL.websocket,\n\t\tconn = new Strophe.Connection(protocol);\n\n\tif (chatPRTCL.active === 1) {\n\t\tconn.xmlInput = function (data) {\n\t\t\tif (data.childNodes[0]) {\n\t\t\t\tfor (let i = 0, len = data.childNodes.length; i < len; i++) {\n\t\t\t\t\tUtils.DLog('[Chat]', 'RECV:', data.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconn.xmlOutput = function (data) {\n\t\t\tif (data.childNodes[0]) {\n\t\t\t\tfor (let i = 0, len = data.childNodes.length; i < len; i++) {\n\t\t\t\t\tUtils.DLog('[Chat]', 'SENT:', data.childNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} else {\n\t\tconn.xmlInput = function (data) {\n\t\t\tUtils.DLog('[Chat]', 'RECV:', data);\n\t\t};\n\t\tconn.xmlOutput = function (data) {\n\t\t\tUtils.DLog('[Chat]', 'SENT:', data);\n\t\t};\n\t}\n\n\treturn conn;\n}\n\nmodule.exports = Connection;\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__25__;","module.exports = __WEBPACK_EXTERNAL_MODULE__26__;","module.exports = __WEBPACK_EXTERNAL_MODULE__27__;","module.exports = __WEBPACK_EXTERNAL_MODULE__28__;","const config = require('./cubeConfig'),\n\tUtils = require('./cubeInternalUtils'),\n\tsha1 = require('crypto-js/hmac-sha1'),\n\tsha256 = require('crypto-js/hmac-sha256');\n\nfunction AuthProxy(service) {\n\tthis.service = service;\n\tthis.webSessionCheckInterval = null;\n}\n\nAuthProxy.prototype = {\n\tgetSession: function (callback) {\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.session)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tcallback(err, res && res.session);\n\t\t});\n\t},\n\n\tcreateSession: function (paramsOrCallback, callback) {\n\t\tif (config.creds.appId === '' || config.creds.authKey === '' || config.creds.authSecret === '') {\n\t\t\tthrow new Error('Cannot create a new session without app credentials (app ID, auth key and auth secret)');\n\t\t}\n\n\t\tconst self = this;\n\n\t\tlet route = config.urls.session,\n\t\t\tmessage;\n\n\t\tif (typeof paramsOrCallback === 'function' && typeof callback === 'undefined') {\n\t\t\tcallback = paramsOrCallback;\n\t\t\tparamsOrCallback = {};\n\t\t}\n\n\t\t// Changes URL if it's web session.\n\t\tif (paramsOrCallback.hasOwnProperty('long')) {\n\t\t\troute = config.urls.webSession;\n\t\t}\n\n\t\t// Signature of message with SHA-1 or SHA-256 using secret key\n\t\tmessage = generateAuthMsg(paramsOrCallback);\n\t\tmessage.signature = signMessage(message, config.creds.authSecret);\n\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(route),\n\t\t\ttype: 'POST',\n\t\t\tdata: message\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tconst response = res.qr_code ? res.qr_code : res.session;\n\n\t\t\t\tself.service.setSession(res.session);\n\t\t\t\tself.service.setCurrentUserId(res.session.user_id);\n\t\t\t\tcallback(null, response);\n\t\t\t}\n\t\t});\n\t},\n\n\tdestroySession: function (callback) {\n\t\tconst self = this;\n\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.session),\n\t\t\ttype: 'DELETE',\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tself.service.setSession(null);\n\t\t\t\tcallback(null);\n\t\t\t}\n\t\t\tself.service.setCurrentUserId(null);\n\t\t});\n\t},\n\n\tcreateWebSession: function (paramsOrCallback, callback) {\n\t\tconst self = this;\n\n\t\tif (typeof paramsOrCallback === 'function' && typeof callback === 'undefined') {\n\t\t\tcallback = paramsOrCallback;\n\t\t\tparamsOrCallback = {\n\t\t\t\tlong: 0\n\t\t\t};\n\t\t}\n\n\t\t// the createSession method returns QR code for web session instead of session object\n\t\tself.createSession(paramsOrCallback, function (err, qrCode) {\n\t\t\tcallback(err, qrCode);\n\t\t});\n\t},\n\n\tcheckWebSessionUntilUpgrade: function (callback) {\n\t\tconst self = this,\n\t\t\tinterval = config.webSession.getSessionTimeInterval,\n\t\t\ttimeoutError = new Error('The web session check interval was stopped (timeout)');\n\n\t\tlet timeleft = config.webSession.getSessionTimeout;\n\n\t\t_clearWebSessionCheckTimer();\n\n\t\tself.webSessionCheckInterval = setInterval(function () {\n\t\t\tself.getSession(function (error, session) {\n\t\t\t\tif (error) {\n\t\t\t\t\t_clearWebSessionCheckTimer();\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t} else if (session.user_id !== 0) {\n\t\t\t\t\t_clearWebSessionCheckTimer();\n\t\t\t\t\tself.service.setCurrentUserId(session.user_id);\n\t\t\t\t\tself.service.setSession(session);\n\t\t\t\t\tcallback(null, session);\n\t\t\t\t} else {\n\t\t\t\t\tif (timeleft > interval) {\n\t\t\t\t\t\ttimeleft -= interval;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_clearWebSessionCheckTimer();\n\t\t\t\t\t\tcallback(timeoutError, null);\n\t\t\t\t\t\tthrow timeoutError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, interval * 1000);\n\n\t\tfunction _clearWebSessionCheckTimer() {\n\t\t\tif (self.webSessionCheckInterval) {\n\t\t\t\tclearInterval(self.webSessionCheckInterval);\n\t\t\t}\n\t\t}\n\n\t\treturn self.webSessionCheckInterval;\n\t},\n\n\tupgradeWebSession: function (webToken, callback) {\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.webSession),\n\t\t\ttype: 'PATCH',\n\t\t\tdataType: 'text',\n\t\t\tdata: {\n\t\t\t\tweb_token: webToken\n\t\t\t}\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err);\n\t\t\t}\n\t\t});\n\t},\n\n\tlogin: function (params, callback) {\n\t\tconst self = this;\n\n\t\tconst ajaxParams = {\n\t\t\ttype: 'POST',\n\t\t\turl: Utils.getUrl(config.urls.login),\n\t\t\tdata: params\n\t\t};\n\n\t\tfunction handleResponce(err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tself.service.setCurrentUserId(res.user.id);\n\t\t\t\tcallback(null, res.user);\n\t\t\t}\n\t\t}\n\n\t\tthis.service.ajax(ajaxParams, handleResponce);\n\t},\n\n\tlogout: function (callback) {\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.login),\n\t\t\ttype: 'DELETE',\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t\tthis.service.setCurrentUserId(null);\n\t}\n};\n\nmodule.exports = AuthProxy;\n\n/* Private\n---------------------------------------------------------------------- */\nfunction generateAuthMsg(params) {\n\tlet message = {\n\t\tapplication_id: config.creds.appId,\n\t\tauth_key: config.creds.authKey,\n\t\tnonce: Utils.randomNonce(),\n\t\ttimestamp: Utils.unixTime()\n\t};\n\n\t// With user authorization\n\tif (params.login && params.password) {\n\t\tmessage.user = { login: params.login, password: params.password };\n\t} else if (params.email && params.password) {\n\t\tmessage.user = { email: params.email, password: params.password };\n\t} else if (params.provider) {\n\t\t// Via social networking provider (e.g. facebook, twitter etc.)\n\t\tmessage.provider = params.provider;\n\t\tif (params.scope) {\n\t\t\tmessage.scope = params.scope;\n\t\t}\n\t\tif (params.keys && params.keys.token) {\n\t\t\tmessage.keys = { token: params.keys.token };\n\t\t}\n\t\tif (params.keys && params.keys.secret) {\n\t\t\tmessage.keys.secret = params.keys.secret;\n\t\t}\n\t} else if (params.hasOwnProperty('long')) {\n\t\tmessage.long = params.long;\n\t}\n\n\treturn message;\n}\n\nfunction signMessage(message, secret) {\n\tlet sessionMsg = Object.keys(message)\n\t\t.map(function (val) {\n\t\t\tif (typeof message[val] === 'object') {\n\t\t\t\treturn Object.keys(message[val])\n\t\t\t\t\t.map(function (val1) {\n\t\t\t\t\t\treturn val + '[' + val1 + ']=' + message[val][val1];\n\t\t\t\t\t})\n\t\t\t\t\t.sort()\n\t\t\t\t\t.join('&');\n\t\t\t} else {\n\t\t\t\treturn val + '=' + message[val];\n\t\t\t}\n\t\t})\n\t\t.sort()\n\t\t.join('&');\n\n\tlet cryptoSessionMsg;\n\n\tif (config.hash === 'sha1') {\n\t\tcryptoSessionMsg = sha1(sessionMsg, secret).toString();\n\t} else if (config.hash === 'sha256') {\n\t\tcryptoSessionMsg = sha256(sessionMsg, secret).toString();\n\t} else {\n\t\tthrow new Error('Unknown crypto standards, available sha1 or sha256');\n\t}\n\n\treturn cryptoSessionMsg;\n}\n",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));","const config = require('./cubeConfig'),\n\tUtils = require('./cubeInternalUtils');\n\nconst DATE_FIELDS = ['created_at', 'updated_at', 'last_request_at'];\nconst NUMBER_FIELDS = ['id', 'external_user_id'];\n\nconst resetPasswordUrl = config.urls.users + '/password/reset';\n\nfunction UsersProxy(service) {\n\tthis.service = service;\n}\n\nUsersProxy.prototype = {\n\t/**\n\t * Retrieve a specific user or users\n\t * @memberof CB.users\n\t * @param {(number|object)} params - A (number) or object of parameters (object with one of next required properties)\n\t * @param {string} params.login - The login of the user to be retrieved.\n\t * @param {string} params.full_name - The full name of users to be retrieved.\n\t * @param {string} params.facebook_id - The user's facebook uid.\n\t * @param {string} params.twitter_id - The user's twitter uid.\n\t * @param {string} params.phone - The user's phone number\n\t * @param {string} params.email - The user's email address.\n\t * @param {(string|string[])} params.tags - A comma separated list of tags associated with users.\n\t * @param {(number|string)} params.external - An uid that represents the user in an external user registry.\n\t * @param {string} [params.page=1] - Used to paginate the results when more than one page of users retrieved (can be used with get by 'full_name' or 'tags')\n\t * @param {string} [params.per_page=10] - The maximum number of users to return per page, if not specified then the default is 10 (can be used with get by 'full_name' or 'tags')\n\t * @param {getUsersCallback} callback - The getUsersCallback function\n\t */\n\tget: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.users.get(params, callback)\n\t\t * @callback getUsersCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The user object or object with Array of users\n\t\t */\n\t\tlet url,\n\t\t\tfilters = [],\n\t\t\titem;\n\n\t\tif (params.order) {\n\t\t\tparams.order = generateOrder(params.order);\n\t\t}\n\n\t\tif (params && params.filter) {\n\t\t\tif (Utils.isArray(params.filter)) {\n\t\t\t\tparams.filter.forEach(function (el) {\n\t\t\t\t\titem = generateFilter(el);\n\t\t\t\t\tfilters.push(item);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\titem = generateFilter(params.filter);\n\t\t\t\tfilters.push(item);\n\t\t\t}\n\t\t\tparams.filter = filters;\n\t\t}\n\n\t\tif (typeof params === 'number') {\n\t\t\turl = params;\n\t\t\tparams = {};\n\t\t} else {\n\t\t\tif (params.login) {\n\t\t\t\turl = 'by_login';\n\t\t\t} else if (params.full_name) {\n\t\t\t\turl = 'by_full_name';\n\t\t\t} else if (params.facebook_id) {\n\t\t\t\turl = 'by_facebook_id';\n\t\t\t} else if (params.twitter_id) {\n\t\t\t\turl = 'by_twitter_id';\n\t\t\t} else if (params.phone) {\n\t\t\t\turl = 'phone';\n\t\t\t} else if (params.email) {\n\t\t\t\turl = 'by_email';\n\t\t\t} else if (params.tags) {\n\t\t\t\turl = 'by_tags';\n\t\t\t} else if (params.external) {\n\t\t\t\turl = 'external/' + params.external;\n\t\t\t\tparams = {};\n\t\t\t}\n\t\t}\n\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.users, url),\n\t\t\tdata: params\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res.user || res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Registers a new app user. Call this API to register a user for the app. You must provide either a user login or email address along with their password, passing both email address and login is permitted but not required.\n\t * @memberof CB.users\n\t * @param {object} params - object of user's parameters\n\t * @param {string} params.login - The user's login name\n\t * @param {string} params.password - The user's password for this app\n\t * @param {string} params.email - The user's email address\n\t * @param {string} [params.full_name] - The user's full name\n\t * @param {string} [params.phone] - The user's phone number\n\t * @param {string} [params.website] - The user's web address, or other url\n\t * @param {string} [params.facebook_id] - The user's facebook uid\n\t * @param {string} [params.twitter_id] - The user's twitter uid\n\t * @param {number} [params.blob_id] - The id of an associated blob for this user, for example their photo\n\t * @param {(number|string)} [params.external_user_id] - An uid that represents the user in an external user registry\n\t * @param {(string|string[])} [params.tag_list] - A comma separated list of tags associated with the user. Set up user tags and address them separately in your app\n\t * @param {string} [params.custom_data] - The user's additional info\n\t * @param {createUserCallback} callback - The createUserCallback function\n\t */\n\tsignup: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.users.signup(params, callback)\n\t\t * @callback createUserCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The user object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.users),\n\t\t\ttype: 'POST',\n\t\t\tdata: {\n\t\t\t\tuser: params\n\t\t\t}\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res.user);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Update current user. In normal usage, nobody except the user is allowed to modify their own data. Any fields you don’t specify will remain unchanged, so you can update just a subset of the user’s data. login/email and password may be changed, but the new login/email must not already be in use.\n\t * @memberof CB.users\n\t * @param {object} params - object of user's parameters\n\t * @param {string} [params.login] - The user's login name\n\t * @param {string} [params.old_password] - The user's old password for this app\n\t * @param {string} [params.password] - The user's new password for this app\n\t * @param {string} [params.email] - The user's email address\n\t * @param {string} [params.full_name] - The user's full name\n\t * @param {string} [params.phone] - The user's phone number\n\t * @param {string} [params.website] - The user's web address, or other url\n\t * @param {string} [params.facebook_id] - The user's facebook uid\n\t * @param {string} [params.twitter_id] - The user's twitter uid\n\t * @param {number} [params.blob_id] - The id of an associated blob for this user, for example their photo\n\t * @param {(number|string)} [params.external_user_id] - An uid that represents the user in an external user registry\n\t * @param {(string|string[])} [params.tag_list] - A comma separated list of tags associated with the user. Set up user tags and address them separately in your app\n\t * @param {string} [params.custom_data] - The user's additional info\n\t * @param {updateUserCallback} callback - The updateUserCallback function\n\t */\n\tupdate: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.users.update(params, callback)\n\t\t * @callback updateUserCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The user object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.users, this.service.getCurrentUserId()),\n\t\t\ttype: 'PUT',\n\t\t\tdata: { user: params }\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res.user);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Remove a user from the app.\n\t * @memberof CB.users\n\t * @param {deleteUserCallback} callback - An uid that represents the user in an external user registry\n\t */\n\tdelete: function (callback) {\n\t\t/**\n\t\t * Callback for CB.users.delete(callback)\n\t\t * @callback deleteUserCallback\n\t\t * @param {object} error - The error object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.users, this.service.getCurrentUserId()),\n\t\t\ttype: 'DELETE',\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/**\n\t * You can initiate password resets for users who have emails associated with their account. Password reset instruction will be sent to this email address\n\t * @memberof CB.users\n\t * @param {string} email - The user's email to send reset password instruction\n\t * @param {resetPasswordByEmailCallback} callback - The resetPasswordByEmailCallback function\n\t */\n\tresetPassword: function (email, callback) {\n\t\t/**\n\t\t * Callback for CB.users.resetPassword(email, callback)\n\t\t * @callback resetPasswordByEmailCallback\n\t\t * @param {object} error - The error object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(resetPasswordUrl),\n\t\t\tdata: {\n\t\t\t\temail: email\n\t\t\t},\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t}\n};\n\nmodule.exports = UsersProxy;\n\n/* Private\n---------------------------------------------------------------------- */\nfunction generateFilter(obj) {\n\tlet type = obj.field in DATE_FIELDS ? 'date' : typeof obj.value;\n\n\tif (Utils.isArray(obj.value)) {\n\t\tif (type === 'object') {\n\t\t\ttype = typeof obj.value[0];\n\t\t}\n\t\tobj.value = obj.value.toString();\n\t}\n\n\treturn [type, obj.field, obj.param, obj.value].join(' ');\n}\n\nfunction generateOrder(obj) {\n\tconst type = obj.field in DATE_FIELDS ? 'date' : obj.field in NUMBER_FIELDS ? 'number' : 'string';\n\treturn [obj.sort, type, obj.field].join(' ');\n}\n","const config = require('./cubeConfig'),\n\tUtils = require('./cubeInternalUtils');\n\nfunction StorageProxy(service) {\n\tthis.service = service;\n}\n\nStorageProxy.prototype = {\n\t/**\n\t * Get a list of files for current user.\n\t * @memberof CB.storage\n\t * @param {object} params - Object of parameters\n\t * @param {number} [params.page=1] - Used to paginate the results when more than one page of files retrieved\n\t * @param {number} [params.per_page=10] - The maximum number of files to return per page, if not specified then the default is 10\n\t * @param {listOfFilesCallback} callback - The listOfFilesCallback function\n\t */\n\tlist: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.list(params, callback)\n\t\t * @callback listOfFilesCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Object with Array of files\n\t\t */\n\t\tif (typeof params === 'function' && typeof callback === 'undefined') {\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.blobs),\n\t\t\tdata: params,\n\t\t\ttype: 'GET'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, result);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Create new file object.\n\t * @private\n\t * @memberof CB.storage\n\t * @param {object} params - Object of parameters\n\t * @param {string} params.content_type - The file's mime ({@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types content type})\n\t * @param {string} params.name - The file's name\n\t * @param {boolean} [params.public=false] - The file's visibility. public means it will be possible to access this file without session token provided. Default is 'false'\n\t * @param {createFileCallback} callback - The createFileCallback function\n\t */\n\tcreate: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.create(params, callback)\n\t\t * @callback createFileCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object (blob-object-access)\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\ttype: 'POST',\n\t\t\tdata: { blob: params },\n\t\t\turl: Utils.getUrl(config.urls.blobs)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, result.blob);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Delete file by id.\n\t * @memberof CB.storage\n\t * @param {Number} id - blob_id\n\t * @param {deleteFileCallback} callback - The deleteFileCallback function.\n\t */\n\tdelete: function (id, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.delete(id, callback)\n\t\t * @callback deleteFileCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Boolean\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.blobs, id),\n\t\t\ttype: 'DELETE',\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, true);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Create file > upload file > mark file as uploaded > return result.\n\t * @memberof CB.storage\n\t * @param {object} params - Object of parameters\n\t * @param {object} params.file - File object\n\t * @param {string} params.name - The file's name\n\t * @param {string} params.type - The file's mime ({@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types content type})\n\t * @param {number} params.size - Size of file, in bytes\n\t * @param {boolean} [params.public=false] - The file's visibility. public means it will be possible to access this file without session token provided. Default is 'false'\n\t * @param {createAndUploadFileCallback} callback - The createAndUploadFileCallback function\n\t */\n\tcreateAndUpload: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.createAndUpload(params, callback).\n\t\t * @callback createAndUploadFileCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object (blob-object-access)\n\t\t */\n\t\tconst self = this;\n\n\t\tlet createParams = {},\n\t\t\tfile,\n\t\t\tname,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tfileId;\n\n\t\tlet clonedParams = JSON.parse(JSON.stringify(params));\n\n\t\tclonedParams.file.data = '...';\n\n\t\tfile = params.file;\n\t\tname = params.name || file.name;\n\t\ttype = params.type || file.type;\n\t\tsize = params.size || file.size;\n\n\t\tcreateParams.name = name;\n\t\tcreateParams.content_type = type;\n\n\t\tif (params.public) {\n\t\t\tcreateParams.public = params.public;\n\t\t}\n\n\t\tif (params.tag_list) {\n\t\t\tcreateParams.tag_list = params.tag_list;\n\t\t}\n\n\t\t// Create a file object\n\t\tthis.create(createParams, function (err, createResult) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tconst uri = parseUri(createResult.blob_object_access.params),\n\t\t\t\t\tuploadUrl = uri.protocol + '://' + uri.authority + uri.path;\n\n\t\t\t\tlet ajaxParams = { url: uploadUrl },\n\t\t\t\t\tdata = {};\n\n\t\t\t\tfileId = createResult.id;\n\t\t\t\tcreateResult.size = size;\n\n\t\t\t\tObject.keys(uri.queryKey).forEach(function (val) {\n\t\t\t\t\tdata[val] = decodeURIComponent(uri.queryKey[val]);\n\t\t\t\t});\n\n\t\t\t\tdata.file = file;\n\t\t\t\tajaxParams.data = data;\n\n\t\t\t\t// Upload the file to Amazon S3\n\t\t\t\tself.upload(ajaxParams, function (err, result) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst ajaxParams = {\n\t\t\t\t\t\t\tid: fileId,\n\t\t\t\t\t\t\tsize: size\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Mark file as uploaded\n\t\t\t\t\t\tself.markUploaded(ajaxParams, function (err, result) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err, null);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallback(null, createResult);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Upload a file to cloud storage.\n\t * @private\n\t * @memberof CB.storage\n\t * @param {Object} params - Object of parameters (see into source code of CB.storage.createAndUpload(params, callback) to know how to prepare the params object)\n\t * @param {string} params.url - location url\n\t * @param {object} params.data - formed data with file\n\t * @param {uploadFileCallback} callback - The uploadFileCallback function\n\t */\n\tupload: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.upload(params, callback)\n\t\t * @callback uploadFileCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The empty object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'text',\n\t\t\tcontentType: false,\n\t\t\turl: params.url,\n\t\t\tdata: params.data\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, xmlDoc) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, {});\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Declare file uploaded. The file's 'status' field will be set to 'complete'.\n\t * @private\n\t * @memberof CB.storage\n\t * @param {object} params - Object of parameters\n\t * @param {number} params.blob_id - The id of file to declare as uploaded\n\t * @param {number} params.size - Size of file, in bytes\n\t * @param {markUploadedFileCallback} callback - The markUploadedFileCallback function\n\t */\n\tmarkUploaded: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.markUploaded(params, callback)\n\t\t * @callback markUploadedFileCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The empty body\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.blobs, params.id + '/complete'),\n\t\t\ttype: 'PUT',\n\t\t\tdata: {\n\t\t\t\tsize: params.size\n\t\t\t},\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Retrieve file object by id.\n\t * @memberof CB.storage\n\t * @param {number} id - The id of file to declare as uploaded\n\t * @param {getFileInfoByIdCallback} callback - The getFileInfoByIdCallback function return file's object.\n\t */\n\tgetInfo: function (id, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.getInfo(id, callback)\n\t\t * @callback getFileInfoByIdCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object (blob-object-access)\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.blobs, id)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Download file by UID. If the file is public then it's possible to download it without a session token.\n\t * @memberof CB.storage\n\t * @param {String} uid - The uid of file to declare as uploaded\n\t * @param {downloadFileByUIDCallback} callback - The downloadFileByUIDCallback function\n\t */\n\tgetFile: function (uid, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.getFile(uid, callback)\n\t\t * @callback downloadFileByUIDCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.blobs, uid)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Edit a file by ID.\n\t * @memberof CB.storage\n\t * @param {object} params - Object of parameters\n\t * @param {number} params.id - The id of file to declare as uploaded\n\t * @param {string} [params.name] - New file name\n\t * @param {updateFileCallback} callback - The updateFileCallback function\n\t */\n\tupdate: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.storage.update(uid, callback)\n\t\t * @callback updateFileCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object (blob-object-access)\n\t\t */\n\t\tlet data = {};\n\n\t\tdata.blob = {};\n\n\t\tif (typeof params.name !== 'undefined') {\n\t\t\tdata.blob.name = params.name;\n\t\t}\n\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.blobs, params.id),\n\t\t\tdata: data\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Get private URL for file download by file_uid (blob_uid).\n\t * @memberof CB.storage\n\t * @param {String} fileUID - The uid of file to declare as uploaded\n\t */\n\tprivateUrl: function (fileUID) {\n\t\treturn 'https://' + config.endpoints.api + '/blobs/' + fileUID + '?token=' + this.service.getSession().token;\n\t},\n\n\t/**\n\t * Get public URL for file download by file_uid (blob_uid).\n\t * @memberof CB.storage\n\t * @param {String} fileUID - The uid of file to declare as uploaded\n\t */\n\tpublicUrl: function (fileUID) {\n\t\treturn 'https://' + config.endpoints.api + '/blobs/' + fileUID;\n\t}\n};\n\nmodule.exports = StorageProxy;\n\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// http://blog.stevenlevithan.com/archives/parseuri\nfunction parseUri(str) {\n\tconst o = parseUri.options,\n\t\tm = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\n\tlet uri = {},\n\t\ti = 14;\n\n\twhile (i--) {\n\t\turi[o.key[i]] = m[i] || '';\n\t}\n\n\turi[o.q.name] = {};\n\turi[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t\tif ($1) {\n\t\t\turi[o.q.name][$1] = $2;\n\t\t}\n\t});\n\n\treturn uri;\n}\n\nparseUri.options = {\n\tstrictMode: false,\n\tkey: [\n\t\t'source',\n\t\t'protocol',\n\t\t'authority',\n\t\t'userInfo',\n\t\t'user',\n\t\t'password',\n\t\t'host',\n\t\t'port',\n\t\t'relative',\n\t\t'path',\n\t\t'directory',\n\t\t'file',\n\t\t'query',\n\t\t'anchor'\n\t],\n\tq: {\n\t\tname: 'queryKey',\n\t\tparser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t},\n\tparser: {\n\t\tstrict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t\tloose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t}\n};\n","const config = require('./cubeConfig'),\n\tUtils = require('./cubeInternalUtils');\n\nfunction PushNotificationsProxy(service) {\n\tthis.service = service;\n\tthis.subscriptions = new SubscriptionsProxy(service);\n\tthis.events = new EventsProxy(service);\n\n\tthis.base64Encode = function (str) {\n\t\treturn Utils.toBase64(str);\n\t};\n}\n\nfunction SubscriptionsProxy(service) {\n\tthis.service = service;\n}\n\nSubscriptionsProxy.prototype = {\n\t/**\n\t * Create device based subscription (subscribes)\n\t * @memberof CB.pushnotifications.subscriptions\n\t * @param {object} params - Object of parameters\n\t * @param {string} params.notification_channel - Declare which notification channels could be used to notify user about events. Allowed values: apns, apns_voip, gcm, mpns, bbps and email\n\t * @param {object} params.push_token - Object of parameters\n\t * @param {string} params.push_token.environment - Determine application mode. It allows conveniently separate development and production modes. Allowed values: evelopment or production\n\t * @param {string} [params.push_token.bundle_identifier] - A unique identifier for client's application. In iOS, this is the Bundle Identifier. In Android - package id\n\t * @param {string} params.push_token.client_identification_sequence - Identifies client device in 3-rd party service like APNS, GCM/FCM, BBPS or MPNS. Initially retrieved from 3-rd service and should be send to server to let it send push notifications to the client\n\t * @param {object} params.device - Object of parameters\n\t * @param {string} params.device.platform - Platform of device, which is the source of application running. Allowed values: ios, android, windows_phone, blackberry\n\t * @param {string} params.device.udid - UDID (Unique Device identifier) of device, which is the source of application running. This must be anything sequence which uniquely identify particular device. This is needed to support schema: 1 User - Multiple devices\n\t * @param {createPushSubscriptionCallback} callback - The createPushSubscriptionCallback function\n\t */\n\tcreate: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.subscriptions.create(params, callback)\n\t\t * @callback createPushSubscriptionCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Array of all existent user's subscriptions\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.subscriptions),\n\t\t\ttype: 'POST',\n\t\t\tdata: params\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/**\n\t * Retrieve subscriptions for the user which is specified in the session token\n\t * @memberof CB.pushnotifications.subscriptions\n\t * @param {listPushSubscriptionCallback} callback - The listPushSubscriptionCallback function\n\t */\n\tlist: function (callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.subscriptions.list(callback)\n\t\t * @callback listPushSubscriptionCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Array of all existent user's subscriptions\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.subscriptions)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/**\n\t * Remove a subscription by its identifier (unsubscribes)\n\t * @memberof CB.pushnotifications.subscriptions\n\t * @param {number} id - An id of subscription to remove\n\t * @param {deletePushSubscriptionCallback} callback - The deletePushSubscriptionCallback function\n\t */\n\tdelete: function (id, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.subscriptions.delete(id, callback)\n\t\t * @callback deletePushSubscriptionCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Empty body\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\ttype: 'DELETE',\n\t\t\tdataType: 'text',\n\t\t\turl: Utils.getUrl(config.urls.subscriptions, id)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err);\n\t\t\t} else {\n\t\t\t\tcallback(null);\n\t\t\t}\n\t\t});\n\t}\n};\n\nfunction EventsProxy(service) {\n\tthis.service = service;\n}\n\nEventsProxy.prototype = {\n\t/**\n\t * Create notification event. This request will immediately produce notification delivery (push notification or email)\n\t * @memberof CB.pushnotifications.events\n\t *\n\t * @param {object} params - Object of parameters\n\t * @param {string} params.notification_type - Type of notification. Allowed values: push or email\n\t * @param {string} params.environment - An environment of the notification. Allowed values: development or production\n\t * @param {string} params.message - A payload of event. For push notifications: if event[push_type] not present - should be Base64 encoded text. if event[push_type] specified - should be formatted as described. For email: Base64 encoded text\n\t *\n\t * @param {string} [params.push_type] - Push Notification type. Used only if event[notification_type] = push, ignored in other cases. If not present - Notification will be delivered to all possible devices for specified users. Each platform has their own standard format. If specified - Notification will be delivered to the specified platform only. Allowed values: apns, apns_voip, gcm, mpns or bbps\n\t * @param {string} [params.event_type] - Allowed values: one_shot, fixed_date or period_date. one_shot - a one-time event, which causes by an external object (the value is only valid if the 'date' is not specified). fixed_date - a one-time event, which occurs at a specified 'date' (the value is valid only if the 'date' is given). period_date - reusable event that occurs within a given 'period' from the initial 'date' (the value is only valid if the 'period' specified). By default: fixed_date, if 'date' is specified. period_date, if 'period' is specified. one_shot, if 'date' is not specified\n\t * @param {string} [params.name] - The name of the event. Service information. Only for your own usage\n\t * @param {number} [params.period] - The period of the event in seconds. Required if the event[event_type] = period_date. Possible values: 86400 (1 day). 604800 (1 week). 2592000 (1 month). 31557600 (1 year)\n\t * @param {number} [params.date] - The date of the event to send on. Required if event[event_type] = fixed_date or period_date. If event[event_type] = fixed_date, the date can not be in the pas\n\t *\n\t * @param {object} [params.user] - User's object of parameters\n\t * @param {number[]} [params.user.ids] - Notification's recipients - should contain a string of users' ids divided by commas\n\t * @param {object} [params.user.tags] - User's object of tags\n\t * @param {string[]} [params.user.tags.any] - Notification's recipients - should contain a string of tags divided by commas. Recipients (users) must have at least one tag that specified in the list\n\t * @param {string[]} [params.user.tags.all] - Notification's recipients - should contain a string of tags divided by commas. Recipients (users) must exactly have only all tags that specified in list\n\t * @param {string[]} [params.user.tags.exclude] - Notification's recipients - should contain a string of tags divided by commas. Recipients (users) mustn't have tags that specified in list\n\t *\n\t * @param {object} [params.external_user] - External user's object of parameters\n\t * @param {number[]} [params.external_user.ids] - Notification's recipients - should contain a string of tags divided by commas. Recipients (users) mustn't have tags that specified in list\n\t *\n\t * @param {createPushEventCallback} callback - The createPushEventCallback function\n\t */\n\tcreate: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.events.create(params, callback)\n\t\t * @callback createPushEventCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - An event object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.events),\n\t\t\ttype: 'POST',\n\t\t\tcontentType: 'application/json; charset=utf-8',\n\t\t\tisNeedStringify: true,\n\t\t\tdata: {\n\t\t\t\tevent: params\n\t\t\t}\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/** Get list of events which were created by current user\n\t * @memberof CB.pushnotifications.events\n\t * @param {object} params - Object of parameters\n\t * @param {number} [params.page=1] - Used to paginate the results when more than one page of events retrieved\n\t * @param {number} [params.per_page=10] - The maximum number of events to return per page, if not specified then the default is 10\n\t * @param {listPushEventsCallback} callback - The listOfFilesCallback function\n\t */\n\tlist: function (params, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.events.list(params, callback)\n\t\t * @callback listPushEventsCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - An array of events' objects\n\t\t */\n\t\tif (typeof params === 'function' && typeof callback === 'undefined') {\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.events),\n\t\t\tdata: params\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/** Retrieve an event by ID\n\t * @memberof CB.pushnotifications.events\n\t * @param {number} id - An id of event to retrieve\n\t * @param {getPushEventByIdCallback} callback - The getPushEventByIdCallback function\n\t */\n\tget: function (id, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.events.get(id, callback)\n\t\t * @callback getPushEventByIdCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - An array of events' objects\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.events, id)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/** Delete an event by ID\n\t * @memberof CB.pushnotifications.events\n\t * @param {number} id - An id of event to delete\n\t * @param {deletePushEventByIdCallback} callback - The deletePushEventByIdCallback function\n\t */\n\tdelete: function (id, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.events.delete(id, callback)\n\t\t * @callback deletePushEventByIdCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Empty body\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.events, id),\n\t\t\tdataType: 'text',\n\t\t\ttype: 'DELETE'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t},\n\n\t/** Retrieve an event's status by ID\n\t * @memberof CB.pushnotifications.events\n\t * @param {number} id - An id of event to retrieve its status\n\t * @param {getPushEventStatusByIdCallback} callback - The getPushEventStatusByIdCallback function\n\t */\n\tstatus: function (id, callback) {\n\t\t/**\n\t\t * Callback for CB.pushnotifications.events.status(id, callback)\n\t\t * @callback getPushEventStatusByIdCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - An array of events' objects\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.events, id + '/status')\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, callback);\n\t}\n};\n\nmodule.exports = PushNotificationsProxy;\n","const config = require('./cubeConfig'),\n\tUtils = require('./cubeInternalUtils');\n\nfunction DataProxy(service) {\n\tthis.service = service;\n}\n\nDataProxy.prototype = {\n\t/**\n\t * Create new custom object.\n\t *\n\t * @memberof CB.data\n\t *\n\t * @param {string} className - A class name to which a new object belongs\n\t * @param {object} data - Object of parameters (custom fields' names and their values)\n\t * @param {createDataCallback} callback - The createDataCallback function\n\t */\n\tcreate: function (className, data, callback) {\n\t\t/**\n\t\t * Callback for CB.data.create(className, data, callback)\n\t\t * @callback createDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - An object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\ttype: 'POST',\n\t\t\tdata: data,\n\t\t\tisNeedStringify: true,\n\t\t\tcontentType: 'application/json; charset=utf-8',\n\t\t\turl: Utils.getUrl(config.urls.data, className)\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Search for records of particular class.\n\t *\n\t * @memberof CB.data\n\t *\n\t * @param {string} className - A class name to which a new record belongs\n\t * @param {(object|string[])} filters - Search records with field which contains exactly specified value or by array of records' ids to retrieve\n\t * @param {number} [filters.skip=0] - Skip N records in search results. Useful for pagination. Default (if not specified) - 0\n\t * @param {number} [filters.limit=100] - Limit search results to N records. Useful for pagination. Default and max values - 100. If limit is equal to -1 only last record will be returned\n\t * @param {string} [filters.*] - filters\n\t * @param {listOfDataCallback} callback - The listOfDataCallback function\n\t */\n\tlist: function (className, filters, callback) {\n\t\t/**\n\t\t * Callback for CB.data.list(className, filters, callback)\n\t\t * @callback listOfDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Object with Array of files\n\t\t */\n\n\t\t// make filters an optional parameter\n\t\tif (typeof callback === 'undefined' && typeof filters === 'function') {\n\t\t\tcallback = filters;\n\t\t\tfilters = null;\n\t\t}\n\n\t\tthis.service.ajax({ url: Utils.getUrl(config.urls.data, className), data: filters }, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, result);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Update record by ID of particular class.\n\t * @memberof CB.data\n\t * @param {string} className - A class name of record\n\t * @param {object} data - Object of parameters\n\t * @param {string} data._id - An ID of record to update\n\t * @param {updateDataCallback} callback - The updateDataCallback function\n\t */\n\tupdate: function (className, data, callback) {\n\t\t/**\n\t\t * Callback for CB.data.update(className, data, callback)\n\t\t * @callback updateDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - An object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.data, className + '/' + data._id),\n\t\t\ttype: 'PUT',\n\t\t\tcontentType: 'application/json; charset=utf-8',\n\t\t\tisNeedStringify: true,\n\t\t\tdata: data\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, result);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Delete record / records by ID, IDs or criteria (filters) of particular class. <br />\n\t *\n\t * @memberof CB.data\n\t *\n\t * @param {string} className - A class name of record\n\t * @param {(string|array|object)} requestedData - An ID of record or an array of record's ids or object of criteria rules to delete\n\t * @param {deletedDataCallback} callback - The deletedDataCallback function\n\t *\n\t */\n\tdelete: function (className, requestedData, callback) {\n\t\t/**\n\t\t * Callback for CB.data.delete(className, requestedData, callback)\n\t\t * @callback deletedDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object|null} response\n\t\t * @param {array} response.deleted - Array of ids of deleted records. If you delete BY CRITERIA this property will be null.\n\t\t * @param {number} response.deletedCount - count of deleted records.\n\t\t */\n\t\tconst typesData = {\n\t\t\tid: 1,\n\t\t\tids: 2,\n\t\t\tcriteria: 3\n\t\t};\n\n\t\tlet requestedTypeOf;\n\n\t\tlet responceNormalized = {\n\t\t\tdeleted: [],\n\t\t\tdeletedCount: 0\n\t\t};\n\n\t\tlet ajaxParams = {\n\t\t\ttype: 'DELETE',\n\t\t\tdataType: 'text'\n\t\t};\n\n\t\t/** Define what type of data passed by client */\n\t\tif (typeof requestedData === 'string') {\n\t\t\trequestedTypeOf = typesData.id;\n\t\t} else if (Utils.isArray(requestedData)) {\n\t\t\trequestedTypeOf = typesData.ids;\n\t\t} else if (Utils.isObject(requestedData)) {\n\t\t\trequestedTypeOf = typesData.criteria;\n\t\t}\n\n\t\tif (requestedTypeOf === typesData.id) {\n\t\t\tajaxParams.url = Utils.getUrl(config.urls.data, className + '/' + requestedData);\n\t\t} else if (requestedTypeOf === typesData.ids) {\n\t\t\tajaxParams.url = Utils.getUrl(config.urls.data, className + '/' + requestedData.toString());\n\t\t} else if (requestedTypeOf === typesData.criteria) {\n\t\t\tajaxParams.url = Utils.getUrl(config.urls.data, className + '/by_criteria');\n\t\t\tajaxParams.data = requestedData;\n\t\t}\n\n\t\tfunction handleDeleteCO(error, result) {\n\t\t\tif (error) {\n\t\t\t\tcallback(error, null);\n\t\t\t} else {\n\t\t\t\tlet response;\n\n\t\t\t\tif (requestedTypeOf === typesData.id) {\n\t\t\t\t\tresponceNormalized.deleted.push(requestedData);\n\t\t\t\t\tresponceNormalized.deletedCount = responceNormalized.deleted.length;\n\t\t\t\t} else if (requestedTypeOf === typesData.ids) {\n\t\t\t\t\tresponse = JSON.parse(result);\n\t\t\t\t\tresponceNormalized.deleted = response.SuccessfullyDeleted.ids.slice(0);\n\t\t\t\t\tresponceNormalized.deletedCount = responceNormalized.deleted.length;\n\t\t\t\t} else if (requestedTypeOf === typesData.criteria) {\n\t\t\t\t\tresponse = JSON.parse(result);\n\t\t\t\t\tresponceNormalized.deleted = null;\n\t\t\t\t\tresponceNormalized.deletedCount = response.total_deleted;\n\t\t\t\t}\n\n\t\t\t\tcallback(error, responceNormalized);\n\t\t\t}\n\t\t}\n\n\t\tthis.service.ajax(ajaxParams, handleDeleteCO);\n\t},\n\n\t/**\n\t * Upload file to file field.\n\t * @memberof CB.data\n\t * @param {string} className - A class name to which a new object belongs\n\t * @param {object} params - Object of parameters\n\t * @param {string} [params.field_name] - The file's field name\n\t * @param {string} [params.name] - The file's name\n\t * @param {object} [params.file] - File object\n\t * @param {uploadFileToDataCallback} callback - The uploadFileToDataCallback function\n\t */\n\tuploadFile: function (className, params, callback) {\n\t\t/**\n\t\t * Callback for CB.data.uploadFile(className, params, callback)\n\t\t * @callback uploadFileToDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.data, className + '/' + params.id + '/file'),\n\t\t\ttype: 'POST',\n\t\t\tfileToCustomObject: true,\n\t\t\tcontentType: false,\n\t\t\tdata: {\n\t\t\t\tfield_name: params.field_name,\n\t\t\t\tfile: {\n\t\t\t\t\tdata: params.file,\n\t\t\t\t\tname: params.name\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, result);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Download file from file field by ID.\n\t * @memberof CB.data\n\t * @param {string} className - A class name of record\n\t * @param {object} params - Object of parameters\n\t * @param {string} params.field_name - The file's field name\n\t * @param {string} params.id - The record's ID\n\t * @param {downloadFileFromDataCallback} callback - The downloadFileFromDataCallback function\n\t */\n\tdownloadFile: function (className, params, callback) {\n\t\t/**\n\t\t * Callback for CB.data.downloadFile(className, params, callback)\n\t\t * @callback downloadFileFromDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - The file object\n\t\t */\n\t\tconst result = this.fileUrl(className, params);\n\n\t\tcallback(null, result);\n\t},\n\n\t/**\n\t * Return file's URL from file field by ID\n\t * @memberof CB.data\n\t * @param {string} className - A class name of record\n\t * @param {object} params - Object of parameters\n\t * @param {string} params.field_name - The file's field name\n\t * @param {string} params.id - The record's ID\n\t */\n\tfileUrl: function (className, params) {\n\t\tlet result = Utils.getUrl(config.urls.data, className + '/' + params.id + '/file');\n\n\t\tresult += '?field_name=' + params.field_name + '&token=' + this.service.getSession().token;\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Delete file from file field by ID\n\t * @memberof CB.data\n\t * @param {string} className - A class name of record\n\t * @param {object} params - Object of parameters\n\t * @param {string} params.field_name - The file's field name\n\t * @param {string} params.id - The record's ID\n\t * @param {deleteFileFromDataCallback} callback - The deleteFileFromDataCallback function\n\t */\n\tdeleteFile: function (className, params, callback) {\n\t\t/**\n\t\t * Callback for CB.data.deleteFile(className, params, callback)\n\t\t * @callback deleteFileFromDataCallback\n\t\t * @param {object} error - The error object\n\t\t * @param {object} response - Empty body\n\t\t */\n\t\tconst ajaxParams = {\n\t\t\turl: Utils.getUrl(config.urls.data, className + '/' + params.id + '/file'),\n\t\t\tdata: { field_name: params.field_name },\n\t\t\tdataType: 'text',\n\t\t\ttype: 'DELETE'\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, result) {\n\t\t\tif (err) {\n\t\t\t\tcallback(err, null);\n\t\t\t} else {\n\t\t\t\tcallback(err, true);\n\t\t\t}\n\t\t});\n\t}\n};\n\nmodule.exports = DataProxy;\n","const Utils = require('./cubeInternalUtils'),\n\tconfig = require('./cubeConfig');\n\nfunction AddressBook(service) {\n\tthis.service = service;\n}\n\nAddressBook.prototype = {\n\t/**\n\t * The method is used to create, update and delete contacts in address book.<br />\n\t * If contact doesn't exist in address book then it will be created. If contacts exists then it will be updated.\n\t * If pass 'destroy: 1' then the contact will be removed.<br />\n\t * The method accepts 2 or 3 parameters.\n\t * @memberof CB.addressbook\n\t * @param {Object[]} list - A list of contacts to create / update / delete.\n\t * @param {Object} [options]\n\t * @param {string} [options.udid] - User's device identifier. If specified all operations will be in this context. Max length 64 symbols.\n\t * If not - it means a user has one global address book across all his devices.\n\t * @param {number} [options.force] - Defines force rewrite mode.\n\t * If set 1 then all previous contacts for device context will be replaced by new ones.\n\t * @param {Function} callback - The savedAddressBookCallback function\n\t */\n\tuploadAddressBook: function (list, optionsOrcallback, callback) {\n\t\tif (!Utils.isArray(list)) {\n\t\t\tnew Error('First parameter must be an Array.');\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet opts, cb;\n\n\t\tif (Utils.isFunction(optionsOrcallback)) {\n\t\t\tcb = optionsOrcallback;\n\t\t} else {\n\t\t\topts = optionsOrcallback;\n\t\t\tcb = callback;\n\t\t}\n\n\t\tlet data = { contacts: list };\n\n\t\tif (opts) {\n\t\t\tif (opts.force) {\n\t\t\t\tdata.force = opts.force;\n\t\t\t}\n\n\t\t\tif (opts.udid) {\n\t\t\t\tdata.udid = opts.udid;\n\t\t\t}\n\t\t}\n\n\t\tconst ajaxParams = {\n\t\t\ttype: 'POST',\n\t\t\turl: Utils.getUrl(config.urls.addressbook),\n\t\t\tdata: data,\n\t\t\tcontentType: 'application/json; charset=utf-8',\n\t\t\tisNeedStringify: true\n\t\t};\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tcb(err, null);\n\t\t\t} else {\n\t\t\t\tcb(null, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Retrive all contacts from address book.\n\t * The method accepts 1 or 2 parameters.\n\t * @memberof CB.addressbook\n\t * @param {string|function} udidOrCallback - You could pass udid of address book or\n\t * callback function if you want to get contacts from global address book.\n\t * @param {function} [callback] - Callback function is used as 2nd parameter if you pass udid as 1st parameters.\n\t * This callback takes 2 arguments: an error and a response.\n\t */\n\tget: function (udidOrCallback, callback) {\n\t\tlet udid, cb;\n\n\t\tif (Utils.isFunction(udidOrCallback)) {\n\t\t\tcb = udidOrCallback;\n\t\t} else {\n\t\t\tudid = udidOrCallback;\n\t\t\tcb = callback;\n\t\t}\n\n\t\tif (!Utils.isFunction(cb)) {\n\t\t\tthrow new Error('A callback function is required.');\n\t\t}\n\n\t\tlet ajaxParams = {\n\t\t\ttype: 'GET',\n\t\t\turl: Utils.getUrl(config.urls.addressbook),\n\t\t\tcontentType: 'application/json; charset=utf-8',\n\t\t\tisNeedStringify: true\n\t\t};\n\n\t\tif (udid) {\n\t\t\tajaxParams.data = { udid: udid };\n\t\t}\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tconst isFakeErrorEmptyAddressBook = _isFakeErrorEmptyAddressBook(err);\n\n\t\t\t\tif (isFakeErrorEmptyAddressBook) {\n\t\t\t\t\tcb(null, []);\n\t\t\t\t} else {\n\t\t\t\t\tcb(err, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcb(null, res);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Retrieve users that have phone numbers from your address book.\n\t * The methods accepts 1 or 2 parameters.\n\t * @memberof CB.addressbook\n\t * @param {boolean|function} udidOrCallback - You can pass isCompact parameter or callback object. If isCompact is passed then only user's id and phone fields will be returned from server. Otherwise - all standard user's fields will be returned.\n\t * @param {function} [callback] - Callback function is useв as 2nd parameter if you pass `isCompact` as 1st parameter.\n\t * This callback takes 2 arguments: an error and a response.\n\t */\n\tgetRegisteredUsers: function (isCompactOrCallback, callback) {\n\t\tlet isCompact, cb;\n\n\t\tif (Utils.isFunction(isCompactOrCallback)) {\n\t\t\tcb = isCompactOrCallback;\n\t\t} else {\n\t\t\tisCompact = isCompactOrCallback;\n\t\t\tcb = callback;\n\t\t}\n\n\t\tif (!Utils.isFunction(cb)) {\n\t\t\tthrow new Error('A callback function is required.');\n\t\t}\n\n\t\tlet ajaxParams = {\n\t\t\ttype: 'GET',\n\t\t\turl: Utils.getUrl(config.urls.addressbookRegistered),\n\t\t\tcontentType: 'application/json; charset=utf-8'\n\t\t};\n\n\t\tif (isCompact) {\n\t\t\tajaxParams.data = { compact: 1 };\n\t\t}\n\n\t\tthis.service.ajax(ajaxParams, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tconst isFakeErrorEmptyAddressBook = _isFakeErrorEmptyAddressBook(err);\n\n\t\t\t\tif (isFakeErrorEmptyAddressBook) {\n\t\t\t\t\tcb(null, []);\n\t\t\t\t} else {\n\t\t\t\t\tcb(err, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcb(null, res);\n\t\t\t}\n\t\t});\n\t}\n};\n\nmodule.exports = AddressBook;\n\n// Emulates normal response from the REST API server\nfunction _isFakeErrorEmptyAddressBook(err) {\n\tconst errDetails = err.detail ? err.detail : err.message.errors;\n\n\treturn err.code === 404 && errDetails[0] === 'Empty address book';\n}\n","'use strict';\n\nconst Config = require('../cubeConfig'),\n    Utils = require('../cubeInternalUtils'),\n    ChatUtils = require('./cubeChatInternalUtils'),\n    ChatHelpers = require('./cubeChatHelpers'),\n    StreamManagement = require('./cubeStreamManagement'),\n    ContactListProxy = require('./cubeContactList'),\n    PrivacyListProxy = require('./cubePrivacyList'),\n    MucProxy = require('./cubeMultiUserChat'),\n    XMPPClient = require('../cubeDependencies').XMPPClient;\n\nif (Utils.getEnv().browser) {\n    Strophe.addNamespace('CARBONS', ChatUtils.MARKERS.CARBONS);\n    Strophe.addNamespace('CHAT_MARKERS', ChatUtils.MARKERS.CHAT);\n    Strophe.addNamespace('PRIVACY_LIST', ChatUtils.MARKERS.PRIVACY);\n    Strophe.addNamespace('CHAT_STATES', ChatUtils.MARKERS.STATES);\n}\n\nfunction ChatProxy(service) {\n    var self = this;\n\n    self.webrtcSignalingProcessor = null;\n\n    /**\n     * Browser env.\n     * Uses by Strophe\n     */\n    if (Utils.getEnv().browser) {\n        self.xmppClient = new XMPPClient();\n\n        /** Add extension methods to track handlers for removal on reconnect */\n        self.xmppClient.XHandlerReferences = [];\n        self.xmppClient.XAddTrackedHandler = function(handler, ns, name, type, id, from, options) {\n            self.xmppClient.XHandlerReferences.push(\n                self.xmppClient.addHandler(handler, ns, name, type, id, from, options)\n            );\n        };\n        self.xmppClient.XDeleteHandlers = function() {\n            while (self.xmppClient.XHandlerReferences.length) {\n                self.xmppClient.deleteHandler(self.xmppClient.XHandlerReferences.pop());\n            }\n        };\n    } else {\n        // nativescript-xmpp-client\n        if (Utils.getEnv().nativescript) {\n            self.xmppClient = new XMPPClient.Client({\n                websocket: {\n                    url: Config.chatProtocol.websocket\n                },\n                autostart: false\n            });\n            // node-xmpp-client\n        } else if (Utils.getEnv().node) {\n            self.xmppClient = new XMPPClient({\n                autostart: false\n            });\n        } else if (Utils.getEnv().reactnative) {\n            self.xmppClient = XMPPClient.client({\n                service: Config.chatProtocol.websocket,\n                credentials: function authenticate(auth, mechanism) {\n                    var crds = {\n                        username: self.xmppClient.cbUserName,\n                        password: self.xmppClient.cbUserPassword\n                    };\n                    return auth(crds);\n                }\n            });\n        }\n\n        // override 'send' function to add 'SENT' logs\n        if (Utils.getEnv().node || Utils.getEnv().nativescript) {\n            var originSendFunction = self.xmppClient.send;\n            self.xmppClient.send = function(stanza) {\n                Utils.DLog('[Chat]', 'SENT:', stanza.toString());\n                originSendFunction.call(self.xmppClient, stanza);\n            };\n        }\n\n        self.nodeStanzasCallbacks = {};\n    }\n\n    this.service = service;\n\n    // Check the chat connection (return true/false)\n    this.isConnected = false;\n    // Check the chat connecting state (return true/false)\n    this._isConnecting = false;\n    this._isLogout = false;\n\n    this._checkConnectionTimer = undefined;\n\n    this.helpers = new ChatHelpers();\n\n    this.xmppClientListeners = [];\n\n    // Chat additional modules\n    var options = {\n        xmppClient: self.xmppClient,\n        helpers: self.helpers,\n        nodeStanzasCallbacks: self.nodeStanzasCallbacks\n    };\n\n    this.contactList = new ContactListProxy(options);\n    this.privacylist = new PrivacyListProxy(options);\n    this.muc = new MucProxy(options);\n\n    if (Config.chat.streamManagement.enable) {\n        if (Config.chatProtocol.active === 2) {\n            this.streamManagement = new StreamManagement();\n            self._sentMessageCallback = function(messageLost, messageSent) {\n                if (typeof self.onSentMessageCallback === 'function') {\n                    if (messageSent) {\n                        self.onSentMessageCallback(null, messageSent);\n                    } else {\n                        self.onSentMessageCallback(messageLost);\n                    }\n                }\n            };\n        } else {\n            Utils.DLog(\n                '[Chat] StreamManagement:',\n                'BOSH protocol doesn\\'t support stream management. Set WebSocket as the \"chatProtocol\" parameter to use this functionality.'\n            );\n        }\n    }\n\n    /**\n     * User's callbacks (listener-functions):\n     * - onMessageListener (userId, message)\n     * - onMessageErrorListener (messageId, error)\n     * - onSentMessageCallback (messageLost, messageSent)\n     * - onMessageTypingListener (isTyping, userId, dialogId)\n     * - onDeliveredStatusListener (messageId, dialogId, userId);\n     * - onReadStatusListener (messageId, dialogId, userId);\n     * - onSystemMessageListener (message)\n     * - onKickOccupant(dialogId, initiatorUserId)\n     * - onJoinOccupant(dialogId, userId)\n     * - onLeaveOccupant(dialogId, userId)\n     * - onContactListListener (userId, type)\n     * - onSubscribeListener (userId)\n     * - onConfirmSubscribeListener (userId)\n     * - onRejectSubscribeListener (userId)\n     * - onLastUserActivityListener (userId, seconds)\n     * - onDisconnectedListener\n     * - onReconnectListener\n     */\n\n    /**\n     * You need to set onMessageListener function, to get messages.\n     * @function onMessageListener\n     * @memberOf CB.chat\n     * @param {Number} userId - Sender id\n     * @param {Object} message - The message model object\n     **/\n\n    /**\n     * Blocked entities receive an error when try to chat with a user in a 1-1 chat and receivie nothing in a group chat.\n     * @function onMessageErrorListener\n     * @memberOf CB.chat\n     * @param {Number} messageId - The message id\n     * @param {Object} error - The error object\n     **/\n\n    /**\n     * This feature defines an approach for ensuring is the message delivered to the server. This feature is unabled by default.\n     * @function onSentMessageCallback\n     * @memberOf CB.chat\n     * @param {Object} messageLost - The lost message model object (Fail)\n     * @param {Object} messageSent - The sent message model object (Success)\n     **/\n\n    /**\n     * Show typing status in chat or groupchat.\n     * @function onMessageTypingListener\n     * @memberOf CB.chat\n     * @param {Boolean} isTyping - Typing Status (true - typing, false - stop typing)\n     * @param {Number} userId - Typing user id\n     * @param {String} dialogId - The dialog id\n     **/\n\n    /**\n     * Receive delivery confirmations.\n     * @function onDeliveredStatusListener\n     * @memberOf CB.chat\n     * @param {String} messageId - Delivered message id\n     * @param {String} dialogId - The dialog id\n     * @param {Number} userId - User id\n     **/\n\n    /**\n     * You can manage 'read' notifications in chat.\n     * @function onReadStatusListener\n     * @memberOf CB.chat\n     * @param {String} messageId - Read message id\n     * @param {String} dialogId - The dialog id\n     * @param {Number} userId - User Id\n     **/\n\n    /**\n     * These messages work over separated channel and won't be mixed with the regular chat messages.\n     * @function onSystemMessageListener\n     * @memberOf CB.chat\n     * @param {Object} message - The system message model object. Always have type: 'headline'\n     **/\n\n    /**\n     * You will receive this callback when you are in group chat dialog(joined) and other user (chat dialog's creator) removed you from occupants.\n     * @function onKickOccupant\n     * @memberOf CB.chat\n     * @param {String} dialogId - An id of chat dialog where you was kicked from.\n     * @param {Number} initiatorUserId - An id of user who has kicked you.\n     **/\n\n    /**\n     * You will receive this callback when some user joined group chat dialog you are in.\n     * @function onJoinOccupant\n     * @memberOf CB.chat\n     * @param {String} dialogId - An id of chat dialog that user joined.\n     * @param {Number} userId - An id of user who joined chat dialog.\n     **/\n\n    /**\n     * You will receive this callback when some user left group chat dialog you are in.\n     * @function onLeaveOccupant\n     * @memberOf CB.chat\n     * @param {String} dialogId - An id of chat dialog that user left.\n     * @param {Number} userId - An id of user who left chat dialog.\n     **/\n\n    /**\n     * Receive user status (online / offline).\n     * @function onContactListListener\n     * @memberOf CB.chat\n     * @param {Number} userId - The sender ID\n     * @param {String} type - If user leave the chat, type will be 'unavailable'\n     **/\n\n    /**\n     * Receive subscription request.\n     * @function onSubscribeListener\n     * @memberOf CB.chat\n     * @param {Number} userId - The sender ID\n     **/\n\n    /**\n     * Receive confirm request.\n     * @function onConfirmSubscribeListener\n     * @memberOf CB.chat\n     * @param {Number} userId - The sender ID\n     **/\n\n    /**\n     * Receive reject request.\n     * @function onRejectSubscribeListener\n     * @memberOf CB.chat\n     * @param {Number} userId - The sender ID\n     **/\n\n    /**\n     * Receive user's last activity (time ago). {@link https://xmpp.org/extensions/xep-0012.html More info.}\n     * @function onLastUserActivityListener\n     * @memberOf CB.chat\n     * @param {Number} userId - The user's ID which last activity time we receive\n     * @param {Number} seconds - Time ago (last activity in seconds or 0 if user online or undefined if user never registered in chat)\n     */\n\n    /**\n     * Run after disconnect from chat.\n     * @function onDisconnectedListener\n     * @memberOf CB.chat\n     **/\n\n    /**\n     * By default Javascript SDK reconnects automatically when connection to server is lost.\n     * @function onReconnectListener\n     * @memberOf CB.chat\n     **/\n\n    this._onMessage = function(stanza) {\n        var from = ChatUtils.getAttr(stanza, 'from'),\n            type = ChatUtils.getAttr(stanza, 'type'),\n            messageId = ChatUtils.getAttr(stanza, 'id'),\n            markable = ChatUtils.getElement(stanza, 'markable'),\n            delivered = ChatUtils.getElement(stanza, 'received'),\n            read = ChatUtils.getElement(stanza, 'displayed'),\n            composing = ChatUtils.getElement(stanza, 'composing'),\n            paused = ChatUtils.getElement(stanza, 'paused'),\n            invite = ChatUtils.getElement(stanza, 'invite'),\n            delay = ChatUtils.getElement(stanza, 'delay'),\n            extraParams = ChatUtils.getElement(stanza, 'extraParams'),\n            bodyContent = ChatUtils.getElementText(stanza, 'body'),\n            forwarded = ChatUtils.getElement(stanza, 'forwarded'),\n            extraParamsParsed,\n            recipientId,\n            recipient;\n\n        var forwardedMessage = forwarded ? ChatUtils.getElement(forwarded, 'message') : null;\n\n        recipient = forwardedMessage ? ChatUtils.getAttr(forwardedMessage, 'to') : null;\n        recipientId = recipient ? self.helpers.getIdFromNode(recipient) : null;\n\n        var dialogId = type === 'groupchat' ? self.helpers.getDialogIdFromNode(from) : null,\n            userId = type === 'groupchat' ? self.helpers.getIdFromResource(from) : self.helpers.getIdFromNode(from),\n            marker = delivered || read || null;\n\n        // ignore invite messages from MUC\n        if (invite) return true;\n\n        if (extraParams) {\n            extraParamsParsed = ChatUtils.parseExtraParams(extraParams);\n\n            if (extraParamsParsed.dialogId) {\n                dialogId = extraParamsParsed.dialogId;\n            }\n        }\n\n        if (composing || paused) {\n            if (\n                typeof self.onMessageTypingListener === 'function' &&\n                (type === 'chat' || type === 'groupchat' || !delay)\n            ) {\n                Utils.safeCallbackCall(self.onMessageTypingListener, !!composing, userId, dialogId);\n            }\n\n            return true;\n        }\n\n        if (marker) {\n            if (delivered) {\n                if (typeof self.onDeliveredStatusListener === 'function' && type === 'chat') {\n                    Utils.safeCallbackCall(\n                        self.onDeliveredStatusListener,\n                        ChatUtils.getAttr(delivered, 'id'),\n                        dialogId,\n                        userId\n                    );\n                }\n            } else {\n                if (typeof self.onReadStatusListener === 'function' && type === 'chat') {\n                    Utils.safeCallbackCall(self.onReadStatusListener, ChatUtils.getAttr(read, 'id'), dialogId, userId);\n                }\n            }\n\n            return true;\n        }\n\n        // autosend 'received' status (ignore messages from yourself)\n        if (markable && userId != self.helpers.getIdFromNode(self.helpers.userCurrentJid(self.xmppClient))) {\n            var autoSendReceiveStatusParams = {\n                messageId: messageId,\n                userId: userId,\n                dialogId: dialogId\n            };\n\n            self.sendDeliveredStatus(autoSendReceiveStatusParams);\n        }\n\n        var message = {\n            id: messageId,\n            dialog_id: dialogId,\n            recipient_id: recipientId,\n            type: type,\n            body: bodyContent,\n            extension: extraParamsParsed ? extraParamsParsed.extension : null,\n            delay: delay\n        };\n\n        if (markable) {\n            message.markable = 1;\n        }\n\n        if (typeof self.onMessageListener === 'function' && (type === 'chat' || type === 'groupchat')) {\n            Utils.safeCallbackCall(self.onMessageListener, userId, message);\n        }\n\n        // we must return true to keep the handler alive\n        // returning false would remove it after it finishes\n        return true;\n    };\n\n    this._onPresence = function(stanza) {\n        var from = ChatUtils.getAttr(stanza, 'from'),\n            id = ChatUtils.getAttr(stanza, 'id'),\n            type = ChatUtils.getAttr(stanza, 'type'),\n            currentUserId = self.helpers.getIdFromNode(self.helpers.userCurrentJid(self.xmppClient)),\n            x = ChatUtils.getElement(stanza, 'x'),\n            xXMLNS,\n            status,\n            statusCode,\n            dialogId,\n            userId,\n            contact;\n\n        if (x) {\n            xXMLNS = ChatUtils.getAttr(x, 'xmlns');\n            status = ChatUtils.getElement(x, 'status');\n            if (status) {\n                statusCode = ChatUtils.getAttr(status, 'code');\n            }\n        }\n\n        // MUC presences go here\n        if (xXMLNS && xXMLNS == 'http://jabber.org/protocol/muc#user') {\n            dialogId = self.helpers.getDialogIdFromNode(from);\n            userId = self.helpers.getUserIdFromRoomJid(from);\n\n            // KICK from dialog event\n            if (status && statusCode == '301') {\n                if (typeof self.onKickOccupant === 'function') {\n                    var actorElement = ChatUtils.getElement(ChatUtils.getElement(x, 'item'), 'actor');\n                    var initiatorUserJid = ChatUtils.getAttr(actorElement, 'jid');\n                    Utils.safeCallbackCall(self.onKickOccupant, dialogId, self.helpers.getIdFromNode(initiatorUserJid));\n                }\n\n                delete self.muc.joinedRooms[self.helpers.getRoomJidFromRoomFullJid(from)];\n\n                return true;\n\n                // Occupants JOIN/LEAVE events\n            } else if (!status) {\n                if (userId != currentUserId) {\n                    // Leave\n                    if (type && type === 'unavailable') {\n                        if (typeof self.onLeaveOccupant === 'function') {\n                            Utils.safeCallbackCall(self.onLeaveOccupant, dialogId, parseInt(userId));\n                        }\n                        return true;\n                        // Join\n                    } else {\n                        if (typeof self.onJoinOccupant === 'function') {\n                            Utils.safeCallbackCall(self.onJoinOccupant, dialogId, parseInt(userId));\n                        }\n                        return true;\n                    }\n                }\n            }\n        }\n\n        if (!Utils.getEnv().browser) {\n            /** MUC */\n            if (xXMLNS) {\n                if (xXMLNS == 'http://jabber.org/protocol/muc#user') {\n                    /**\n                     * if you make 'leave' from dialog\n                     * stanza will be contains type=\"unavailable\"\n                     */\n                    if (type && type === 'unavailable') {\n                        /** LEAVE from dialog */\n                        if (status && statusCode == '110') {\n                            if (typeof self.nodeStanzasCallbacks['muc:leave'] === 'function') {\n                                Utils.safeCallbackCall(self.nodeStanzasCallbacks['muc:leave'], null);\n                            }\n                        }\n\n                        return true;\n                    }\n\n                    /** JOIN to dialog success */\n                    if (id.endsWith(':join') && status && statusCode == '110') {\n                        if (typeof self.nodeStanzasCallbacks[id] === 'function') {\n                            self.nodeStanzasCallbacks[id](stanza);\n                        }\n\n                        return true;\n                    }\n\n                    // an error\n                } else if (type && type === 'error' && xXMLNS == 'http://jabber.org/protocol/muc') {\n                    /** JOIN to dialog error */\n                    if (id.endsWith(':join')) {\n                        if (typeof self.nodeStanzasCallbacks[id] === 'function') {\n                            self.nodeStanzasCallbacks[id](stanza);\n                        }\n                    }\n\n                    return true;\n                }\n            }\n        }\n\n        // ROSTER presences go here\n\n        userId = self.helpers.getIdFromNode(from);\n        contact = self.contactList.contacts[userId];\n\n        if (!type) {\n            if (typeof self.onContactListListener === 'function' && contact && contact.subscription !== 'none') {\n                Utils.safeCallbackCall(self.onContactListListener, userId);\n            }\n        } else {\n            switch (type) {\n                case 'subscribe':\n                    if (contact && contact.subscription === 'to') {\n                        contact ? (contact.ask = null) : (contact = { ask: null });\n                        contact.subscription = 'both';\n\n                        self.contactList._sendSubscriptionPresence({\n                            jid: from,\n                            type: 'subscribed'\n                        });\n                    } else {\n                        if (typeof self.onSubscribeListener === 'function') {\n                            Utils.safeCallbackCall(self.onSubscribeListener, userId);\n                        }\n                    }\n                    break;\n                case 'subscribed':\n                    if (contact && contact.subscription === 'from') {\n                        contact ? (contact.ask = null) : (contact = { ask: null });\n                        contact.subscription = 'both';\n                    } else {\n                        contact ? (contact.ask = null) : (contact = { ask: null });\n                        contact.subscription = 'to';\n\n                        if (typeof self.onConfirmSubscribeListener === 'function') {\n                            Utils.safeCallbackCall(self.onConfirmSubscribeListener, userId);\n                        }\n                    }\n                    break;\n                case 'unsubscribed':\n                    contact ? (contact.ask = null) : (contact = { ask: null });\n                    contact.subscription = 'none';\n\n                    if (typeof self.onRejectSubscribeListener === 'function') {\n                        Utils.safeCallbackCall(self.onRejectSubscribeListener, userId);\n                    }\n\n                    break;\n                case 'unsubscribe':\n                    contact ? (contact.ask = null) : (contact = { ask: null });\n                    contact.subscription = 'to';\n\n                    break;\n                case 'unavailable':\n                    if (\n                        typeof self.onContactListListener === 'function' &&\n                        contact &&\n                        contact.subscription !== 'none'\n                    ) {\n                        Utils.safeCallbackCall(self.onContactListListener, userId, type);\n                    }\n\n                    // send initial presence if one of client (instance) goes offline\n                    if (userId === currentUserId) {\n                        self.xmppClient.send(ChatUtils.createPresenceStanza());\n                    }\n\n                    break;\n            }\n        }\n\n        // we must return true to keep the handler alive\n        // returning false would remove it after it finishes\n        return true;\n    };\n\n    this._onIQ = function(stanza) {\n        var stanzaId = ChatUtils.getAttr(stanza, 'id'),\n            isLastActivity = stanzaId.indexOf('lastActivity') > -1;\n\n        if (typeof self.onLastUserActivityListener === 'function' && isLastActivity) {\n            var from = ChatUtils.getAttr(stanza, 'from'),\n                userId = self.helpers.getIdFromNode(from),\n                query = ChatUtils.getElement(stanza, 'query'),\n                error = ChatUtils.getElement(stanza, 'error'),\n                seconds = error ? undefined : +ChatUtils.getAttr(query, 'seconds');\n\n            Utils.safeCallbackCall(self.onLastUserActivityListener, userId, seconds);\n        }\n\n        if (!Utils.getEnv().browser) {\n            if (self.nodeStanzasCallbacks[stanzaId]) {\n                Utils.safeCallbackCall(self.nodeStanzasCallbacks[stanzaId], stanza);\n                delete self.nodeStanzasCallbacks[stanzaId];\n            }\n        }\n\n        return true;\n    };\n\n    this._onSystemMessageListener = function(stanza) {\n        var from = ChatUtils.getAttr(stanza, 'from'),\n            to = ChatUtils.getAttr(stanza, 'to'),\n            messageId = ChatUtils.getAttr(stanza, 'id'),\n            extraParams = ChatUtils.getElement(stanza, 'extraParams'),\n            userId = self.helpers.getIdFromNode(from),\n            delay = ChatUtils.getElement(stanza, 'delay'),\n            moduleIdentifier = ChatUtils.getElementText(extraParams, 'moduleIdentifier'),\n            bodyContent = ChatUtils.getElementText(stanza, 'body'),\n            extraParamsParsed = ChatUtils.parseExtraParams(extraParams),\n            message;\n\n        if (moduleIdentifier === 'SystemNotifications' && typeof self.onSystemMessageListener === 'function') {\n            message = {\n                id: messageId,\n                userId: userId,\n                body: bodyContent,\n                extension: extraParamsParsed.extension\n            };\n\n            Utils.safeCallbackCall(self.onSystemMessageListener, message);\n        } else if (self.webrtcSignalingProcessor && !delay && moduleIdentifier === 'WebRTCVideoChat') {\n            self.webrtcSignalingProcessor._onMessage(from, extraParams, delay, userId, extraParamsParsed.extension);\n        }\n\n        /**\n         * we must return true to keep the handler alive\n         * returning false would remove it after it finishes\n         */\n        return true;\n    };\n\n    this._onMessageErrorListener = function(stanza) {\n        // <error code=\"503\" type=\"cancel\">\n        //   <service-unavailable xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"/>\n        //   <text xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\" xml:lang=\"en\">Service not available.</text>\n        // </error>\n\n        var messageId = ChatUtils.getAttr(stanza, 'id');\n        var error = ChatUtils.getErrorFromXMLNode(stanza);\n\n        // fire 'onMessageErrorListener'\n        //\n        if (typeof self.onMessageErrorListener === 'function') {\n            Utils.safeCallbackCall(self.onMessageErrorListener, messageId, error);\n        }\n\n        // we must return true to keep the handler alive\n        // returning false would remove it after it finishes\n        return true;\n    };\n}\n\n/* Chat module: Core\n ----------------------------------------------------------------------------- */\nChatProxy.prototype = {\n    /**\n     * Connect to chat\n     *\n     * @memberof CB.chat\n     * @param {Object} params - Connect to the chat parameters\n     * @param {Number} params.userId - Connect to the chat by user id (use instead params.email and params.jid)\n     * @param {String} params.jid - Connect to the chat by user jid (use instead params.userId and params.email)\n     * @param {String} params.email - Connect to the chat by user's email (use instead params.userId and params.jid)\n     * @param {String} params.password - The user's password or session token\n     * @param {chatConnectCallback} callback - The chatConnectCallback callback\n     * */\n    connect: function(params, callback) {\n        /**\n         * This callback Returns error or contact list.\n         * @callback chatConnectCallback\n         * @param {Object} error - The error object\n         * @param {(Object|Boolean)} response - Object of subscribed users (roster) or empty body.\n         * */\n        Utils.DLog('[Chat]', 'Connect with parameters ' + JSON.stringify(params));\n\n        var self = this,\n            userJid = ChatUtils.buildUserJid(params),\n            isInitialConnect = typeof callback === 'function',\n            err;\n\n        if (self._isConnecting) {\n            err = Utils.getError(422, 'REJECT - The connection is still in the CONNECTING state', 'Chat');\n\n            if (isInitialConnect) {\n                callback(err, null);\n            }\n\n            return;\n        }\n\n        if (self.isConnected) {\n            Utils.DLog('[Chat]', 'CONNECTED - You are already connected');\n\n            if (isInitialConnect) {\n                callback(null, self.contactList.contacts);\n            }\n\n            return;\n        }\n\n        self._isConnecting = true;\n        self._isLogout = false;\n\n        // connect for Browser\n        //\n        if (Utils.getEnv().browser) {\n            self.xmppClient.connect(\n                userJid,\n                params.password,\n                function(status) {\n                    switch (status) {\n                        case Strophe.Status.ERROR:\n                            self.isConnected = false;\n                            self._isConnecting = false;\n\n                            err = Utils.getError(422, 'ERROR - An error has occurred', 'Chat');\n\n                            if (isInitialConnect) {\n                                callback(err, null);\n                            }\n\n                            break;\n                        case Strophe.Status.CONNFAIL:\n                            self.isConnected = false;\n                            self._isConnecting = false;\n\n                            err = Utils.getError(422, 'CONNFAIL - The connection attempt failed', 'Chat');\n\n                            if (isInitialConnect) {\n                                callback(err, null);\n                            }\n\n                            break;\n                        case Strophe.Status.AUTHENTICATING:\n                            Utils.DLog('[Chat]', 'AUTHENTICATING');\n\n                            break;\n                        case Strophe.Status.AUTHFAIL:\n                            self.isConnected = false;\n                            self._isConnecting = false;\n\n                            err = Utils.getError(401, 'Status.AUTHFAIL - The authentication attempt failed', 'Chat');\n\n                            if (isInitialConnect) {\n                                callback(err, null);\n                            }\n\n                            if (!self.isConnected && typeof self.onReconnectFailedListener === 'function') {\n                                Utils.safeCallbackCall(self.onReconnectFailedListener, err);\n                            }\n\n                            break;\n                        case Strophe.Status.CONNECTING:\n                            Utils.DLog(\n                                '[Chat]',\n                                'Status.CONNECTING',\n                                '(Chat Protocol - ' + (Config.chatProtocol.active === 1 ? 'BOSH' : 'WebSocket' + ')')\n                            );\n\n                            break;\n                        case Strophe.Status.CONNECTED:\n                            // Remove any handlers that might exist from a previous connection via\n                            // extension method added to the connection on initialization in cubeMain.\n                            // NOTE: streamManagement also adds handlers, so do this first.\n                            self.xmppClient.XDeleteHandlers();\n\n                            self.xmppClient.XAddTrackedHandler(self._onMessage, null, 'message', 'chat');\n                            self.xmppClient.XAddTrackedHandler(self._onMessage, null, 'message', 'groupchat');\n                            self.xmppClient.XAddTrackedHandler(self._onPresence, null, 'presence');\n                            self.xmppClient.XAddTrackedHandler(self._onIQ, null, 'iq');\n                            self.xmppClient.XAddTrackedHandler(\n                                self._onSystemMessageListener,\n                                null,\n                                'message',\n                                'headline'\n                            );\n                            self.xmppClient.XAddTrackedHandler(self._onMessageErrorListener, null, 'message', 'error');\n\n                            self._postConnectActions(function(roster) {\n                                callback(null, roster);\n                            }, isInitialConnect);\n\n                            break;\n                        case Strophe.Status.DISCONNECTING:\n                            Utils.DLog('[Chat]', 'DISCONNECTING');\n                            break;\n                        case Strophe.Status.DISCONNECTED:\n                            Utils.DLog('[Chat]', 'DISCONNECTED');\n\n                            // fire 'onDisconnectedListener' only once\n                            if (self.isConnected && typeof self.onDisconnectedListener === 'function') {\n                                Utils.safeCallbackCall(self.onDisconnectedListener);\n                            }\n\n                            self.isConnected = false;\n                            self._isConnecting = false;\n\n                            // reconnect to chat and enable check connection\n                            self._establishConnection(params);\n\n                            break;\n                        case Strophe.Status.ATTACHED:\n                            Utils.DLog('[Chat]', 'Status.ATTACHED');\n                            break;\n                    }\n                }\n            );\n\n            // connect for Node.js/Native-Script\n            //\n        } else if (Utils.getEnv().node || Utils.getEnv().nativescript) {\n            // Remove all connection handlers exist from a previous connection\n            self.xmppClient.removeAllListeners();\n\n            self.xmppClient.on('connect', function() {\n                Utils.DLog(\n                    '[Chat]',\n                    'CONNECTING',\n                    '(Chat Protocol - ' + (Config.chatProtocol.active === 1 ? 'BOSH' : 'WebSocket' + ')')\n                );\n            });\n\n            self.xmppClient.on('auth', function() {\n                Utils.DLog('[Chat]', 'AUTHENTICATING');\n            });\n\n            self.xmppClient.on('online', function() {\n                Utils.DLog('[Chat]', 'ONLINE');\n\n                self._postConnectActions(function(roster) {\n                    callback(null, roster);\n                }, isInitialConnect);\n            });\n\n            self.xmppClient.on('stanza', function(stanza) {\n                Utils.DLog('[Chat] RECV:', stanza.toString());\n                /**\n                 * Detect typeof incoming stanza\n                 * and fire the Listener\n                 */\n                if (stanza.is('presence')) {\n                    self._onPresence(stanza);\n                } else if (stanza.is('iq')) {\n                    self._onIQ(stanza);\n                } else if (stanza.is('message')) {\n                    if (stanza.attrs.type === 'headline') {\n                        self._onSystemMessageListener(stanza);\n                    } else if (stanza.attrs.type === 'error') {\n                        self._onMessageErrorListener(stanza);\n                    } else {\n                        self._onMessage(stanza);\n                    }\n                }\n            });\n\n            self.xmppClient.on('disconnect', function() {\n                Utils.DLog('[Chat]', 'DISCONNECTED');\n\n                if (typeof self.onDisconnectedListener === 'function') {\n                    Utils.safeCallbackCall(self.onDisconnectedListener);\n                }\n\n                self.isConnected = false;\n                self._isConnecting = false;\n\n                // reconnect to chat and enable check connection\n                self._establishConnection(params);\n            });\n\n            self.xmppClient.on('error', function() {\n                Utils.DLog('[Chat]', 'ERROR');\n                err = Utils.getError(422, 'ERROR - An error has occurred', 'Chat');\n\n                if (isInitialConnect) {\n                    callback(err, null);\n                }\n\n                self.isConnected = false;\n                self._isConnecting = false;\n            });\n\n            self.xmppClient.on('end', function() {\n                self.xmppClient.removeAllListeners();\n            });\n\n            self.xmppClient.options.jid = userJid;\n            self.xmppClient.options.password = params.password;\n            self.xmppClient.connect();\n\n            // connect for React-Native\n            //\n        } else if (Utils.getEnv().reactnative) {\n            var removeAllListeners = function() {\n                self.xmppClientListeners.forEach(function(listener) {\n                    self.xmppClient.removeListener(listener.name, listener.callback);\n                });\n                self.xmppClientListeners = [];\n            };\n            removeAllListeners();\n\n            const callbackConnect = function() {\n                Utils.DLog('[Chat]', 'CONNECTING');\n            };\n            self.xmppClient.on('connect', callbackConnect);\n            self.xmppClientListeners.push({ name: 'connect', callback: callbackConnect });\n\n            const callbackOnline = function(jid) {\n                Utils.DLog('[Chat]', 'ONLINE');\n\n                self._postConnectActions(function(roster) {\n                    callback(null, roster);\n                }, isInitialConnect);\n            };\n            self.xmppClient.on('online', callbackOnline);\n            self.xmppClientListeners.push({ name: 'online', callback: callbackOnline });\n\n            const callbackOffline = function() {\n                Utils.DLog('[Chat]', 'OFFLINE');\n            };\n            self.xmppClient.on('offline', callbackOffline);\n            self.xmppClientListeners.push({ name: 'offline', callback: callbackOffline });\n\n            const callbackDisconnect = function(data) {\n                Utils.DLog('[Chat]', 'DISCONNECTED');\n\n                var setIsConnectedToFalse = function() {\n                    self.isConnected = false;\n                    self._isConnecting = false;\n                };\n\n                // fire 'onDisconnectedListener' only once\n                if (self.isConnected && typeof self.onDisconnectedListener === 'function') {\n                    setIsConnectedToFalse();\n                    Utils.safeCallbackCall(self.onDisconnectedListener);\n                } else {\n                    setIsConnectedToFalse();\n                }\n\n                // reconnect to chat and enable check connection\n                self._establishConnection(params);\n            };\n            self.xmppClient.on('disconnect', callbackDisconnect);\n            self.xmppClientListeners.push({ name: 'disconnect', callback: callbackDisconnect });\n\n            const callbackStatus = function(status, value) {\n                Utils.DLog('[Chat]', 'status', status, value ? value.toString() : '');\n            };\n            self.xmppClient.on('status', callbackStatus);\n            self.xmppClientListeners.push({ name: 'status', callback: callbackStatus });\n\n            // self.xmppClientReconnect.on('reconnecting', function() {\n            //     Utils.DLog('[Chat]', 'RECONNECTING');\n            // });\n            //\n            // self.xmppClientReconnect.on('reconnected', function() {\n            //     Utils.DLog('[Chat]', 'RECONNECTED');\n            // });\n\n            const callbackStanza = function(stanza) {\n                // console.log('stanza', stanza.toString())\n                // after 'input' and 'element' (only if stanza, not nonza)\n\n                if (stanza.is('presence')) {\n                    self._onPresence(stanza);\n                } else if (stanza.is('iq')) {\n                    self._onIQ(stanza);\n                } else if (stanza.is('message')) {\n                    if (stanza.attrs.type === 'headline') {\n                        self._onSystemMessageListener(stanza);\n                    } else if (stanza.attrs.type === 'error') {\n                        self._onMessageErrorListener(stanza);\n                    } else {\n                        self._onMessage(stanza);\n                    }\n                }\n            };\n            self.xmppClient.on('stanza', callbackStanza);\n            self.xmppClientListeners.push({ name: 'stanza', callback: callbackStanza });\n\n            const callbackError = function(err) {\n                Utils.DLog('[Chat]', 'ERROR:', err);\n\n                if (isInitialConnect) {\n                    if (err.name == 'SASLError') {\n                        err = err.condition;\n                    }\n                    callback(err, null);\n                }\n\n                self.isConnected = false;\n                self._isConnecting = false;\n            };\n            self.xmppClient.on('error', callbackError);\n            self.xmppClientListeners.push({ name: 'error', callback: callbackError });\n\n            // self.xmppClient.on('element', function(element) {\n            //     // console.log('element', element.toString())\n            //     // after 'input'\n            // });\n\n            // self.xmppClient.on('send', function(element) {\n            //     // console.log('send', element.toString())\n            //     // after write to socket\n            // });\n\n            // self.xmppClient.on('outgoing', function(element) {\n            //     // before send\n            //     // console.log('outgoing', element.toString())\n            // });\n\n            const callbackOutput = function(str) {\n                Utils.DLog('[Chat]', 'SENT:', str);\n            };\n            self.xmppClient.on('output', callbackOutput);\n            self.xmppClientListeners.push({ name: 'output', callback: callbackOutput });\n\n            const callbackInput = function(str) {\n                Utils.DLog('[Chat]', 'RECV:', str);\n            };\n            self.xmppClient.on('input', callbackInput);\n            self.xmppClientListeners.push({ name: 'input', callback: callbackInput });\n\n            // define these properties so they will be used when authenticate (above)\n            Object.defineProperty(self.xmppClient, 'cbUserName', {\n                value: ChatUtils.buildUserJidLocalPart(params.userId),\n                writable: false\n            });\n            Object.defineProperty(self.xmppClient, 'cbUserPassword', {\n                value: params.password,\n                writable: false\n            });\n            //\n            self.xmppClient.start();\n        } else {\n            throw 'Unsupported platform for Chat/XMPP functionality';\n        }\n    },\n\n    /**\n     * Actions after the connection is established\n     *\n     * - enable stream management (the configuration setting);\n     * - save user's JID;\n     * - enable carbons;\n     * - get and storage the user's roster (if the initial connect);\n     * - recover the joined rooms and fire 'onReconnectListener' (if the reconnect);\n     * - send initial presence to the chat server.\n     */\n    _postConnectActions: function(callback, isInitialConnect) {\n        Utils.DLog('[Chat]', 'CONNECTED');\n\n        var self = this,\n            presence = ChatUtils.createPresenceStanza();\n\n        if (Config.chat.streamManagement.enable && Config.chatProtocol.active === 2) {\n            self.streamManagement.enable(self.xmppClient);\n            self.streamManagement.sentMessageCallback = self._sentMessageCallback;\n        }\n\n        self.helpers.setUserCurrentJid(self.helpers.userCurrentJid(self.xmppClient));\n\n        self.isConnected = true;\n        self._isConnecting = false;\n\n        self._enableCarbons();\n\n        if (isInitialConnect) {\n            self.contactList.get(function(contacts) {\n                self.xmppClient.send(presence);\n\n                self.contactList.contacts = contacts;\n                callback(self.contactList.contacts);\n            });\n        } else {\n            var rooms = Object.keys(self.muc.joinedRooms);\n\n            self.xmppClient.send(presence);\n\n            Utils.DLog('[Chat]', 'Re-joining ' + rooms.length + ' rooms...');\n\n            for (var i = 0, len = rooms.length; i < len; i++) {\n                self.muc.join(rooms[i]);\n            }\n\n            if (typeof self.onReconnectListener === 'function') {\n                Utils.safeCallbackCall(self.onReconnectListener);\n            }\n        }\n    },\n\n    _establishConnection: function(params) {\n        var self = this;\n\n        if (self._isLogout || self._checkConnectionTimer) {\n            return;\n        }\n\n        var _connect = function() {\n            if (!self.isConnected && !self._isConnecting) {\n                self.connect(params);\n            } else {\n                clearInterval(self._checkConnectionTimer);\n                self._checkConnectionTimer = undefined;\n            }\n        };\n\n        _connect();\n\n        self._checkConnectionTimer = setInterval(function() {\n            _connect();\n        }, Config.chat.reconnectionTimeInterval * 1000);\n    },\n\n    /**\n     * Send message to 1 to 1 or group dialog.\n     * @memberof CB.chat\n     * @param {String | Number} jidOrUserId - Use opponent id or jid for 1 to 1 chat, and room jid for group chat.\n     * @param {Object} message - The message object.\n     * @returns {String} messageId - The current message id (was generated by SDK)\n     * */\n    send: function(jidOrUserId, message) {\n        var stanzaParams = {\n            from: this.helpers.getUserCurrentJid(),\n            to: this.helpers.jidOrUserId(jidOrUserId),\n            type: message.type ? message.type : 'chat',\n            id: message.id ? message.id : Utils.getBsonObjectId()\n        };\n\n        var messageStanza = ChatUtils.createMessageStanza(stanzaParams);\n\n        if (message.body) {\n            messageStanza\n                .c('body', {\n                    xmlns: ChatUtils.MARKERS.CLIENT\n                })\n                .t(message.body)\n                .up();\n        }\n\n        if (message.markable) {\n            messageStanza\n                .c('markable', {\n                    xmlns: ChatUtils.MARKERS.CHAT\n                })\n                .up();\n        }\n\n        if (message.extension) {\n            messageStanza.c('extraParams', {\n                xmlns: ChatUtils.MARKERS.CLIENT\n            });\n\n            messageStanza = ChatUtils.filledExtraParams(messageStanza, message.extension);\n        }\n\n        if (Config.chat.streamManagement.enable) {\n            message.id = stanzaParams.id;\n            this.xmppClient.send(messageStanza, message);\n        } else {\n            this.xmppClient.send(messageStanza);\n        }\n\n        return stanzaParams.id;\n    },\n\n    /**\n     * Send system message (system notification) to 1 to 1 or group dialog.\n     * @memberof CB.chat\n     * @param {String | Number} jidOrUserId - Use opponent id or jid for 1 to 1 chat, and room jid for group chat.\n     * @param {Object} message - The message object.\n     * @returns {String} messageId - The current message id (was generated by SDK)\n     * */\n    sendSystemMessage: function(jidOrUserId, message) {\n        var stanzaParams = {\n            type: 'headline',\n            id: message.id ? message.id : Utils.getBsonObjectId(),\n            to: this.helpers.jidOrUserId(jidOrUserId)\n        };\n\n        var messageStanza = ChatUtils.createMessageStanza(stanzaParams);\n\n        if (message.body) {\n            messageStanza\n                .c('body', {\n                    xmlns: ChatUtils.MARKERS.CLIENT\n                })\n                .t(message.body)\n                .up();\n        }\n\n        // custom parameters\n        if (message.extension) {\n            messageStanza\n                .c('extraParams', {\n                    xmlns: ChatUtils.MARKERS.CLIENT\n                })\n                .c('moduleIdentifier')\n                .t('SystemNotifications')\n                .up();\n\n            messageStanza = ChatUtils.filledExtraParams(messageStanza, message.extension);\n        }\n\n        this.xmppClient.send(messageStanza);\n\n        return stanzaParams.id;\n    },\n\n    /**\n     * Send is typing status.\n     * @memberof CB.chat\n     * @param {String | Number} jidOrUserId - Use opponent id or jid for 1 to 1 chat, and room jid for group chat.\n     * */\n    sendIsTypingStatus: function(jidOrUserId) {\n        var stanzaParams = {\n            from: this.helpers.getUserCurrentJid(),\n            to: this.helpers.jidOrUserId(jidOrUserId),\n            type: this.helpers.typeChat(jidOrUserId)\n        };\n\n        var messageStanza = ChatUtils.createMessageStanza(stanzaParams);\n\n        messageStanza.c('composing', {\n            xmlns: ChatUtils.MARKERS.STATES\n        });\n\n        this.xmppClient.send(messageStanza);\n    },\n\n    /**\n     * Send is stop typing status.\n     * @memberof CB.chat\n     * @param {String | Number} jidOrUserId - Use opponent id or jid for 1 to 1 chat, and room jid for group chat.\n     * */\n    sendIsStopTypingStatus: function(jidOrUserId) {\n        var stanzaParams = {\n            from: this.helpers.getUserCurrentJid(),\n            to: this.helpers.jidOrUserId(jidOrUserId),\n            type: this.helpers.typeChat(jidOrUserId)\n        };\n\n        var messageStanza = ChatUtils.createMessageStanza(stanzaParams);\n\n        messageStanza.c('paused', {\n            xmlns: ChatUtils.MARKERS.STATES\n        });\n\n        this.xmppClient.send(messageStanza);\n    },\n\n    /**\n     * Send is delivered status.\n     * @memberof CB.chats\n     * @param {Object} params - Object of parameters\n     * @param {Number} params.userId - The receiver id\n     * @param {Number} params.messageId - The delivered message id\n     * @param {Number} params.dialogId - The dialog id\n     * */\n    sendDeliveredStatus: function(params) {\n        var stanzaParams = {\n            type: 'chat',\n            from: this.helpers.getUserCurrentJid(),\n            id: Utils.getBsonObjectId(),\n            to: this.helpers.jidOrUserId(params.userId)\n        };\n\n        var messageStanza = ChatUtils.createMessageStanza(stanzaParams);\n        messageStanza\n            .c('received', {\n                xmlns: ChatUtils.MARKERS.MARKERS,\n                id: params.messageId\n            })\n            .up();\n        messageStanza\n            .c('extraParams', {\n                xmlns: ChatUtils.MARKERS.CLIENT\n            })\n            .c('dialog_id')\n            .t(params.dialogId);\n\n        this.xmppClient.send(messageStanza);\n    },\n\n    /**\n     * Send is read status.\n     * @memberof CB.chat\n     * @param {Object} params - Object of parameters\n     * @param {Number} params.userId - The receiver id\n     * @param {Number} params.messageId - The delivered message id\n     * @param {Number} params.dialogId - The dialog id\n     * */\n    sendReadStatus: function(params) {\n        var stanzaParams = {\n            type: 'chat',\n            from: this.helpers.getUserCurrentJid(),\n            to: this.helpers.jidOrUserId(params.userId),\n            id: Utils.getBsonObjectId()\n        };\n\n        var messageStanza = ChatUtils.createMessageStanza(stanzaParams);\n        messageStanza\n            .c('displayed', {\n                xmlns: ChatUtils.MARKERS.MARKERS,\n                id: params.messageId\n            })\n            .up();\n        messageStanza\n            .c('extraParams', {\n                xmlns: ChatUtils.MARKERS.CLIENT\n            })\n            .c('dialog_id')\n            .t(params.dialogId);\n\n        this.xmppClient.send(messageStanza);\n    },\n\n    /**\n     * Send query to get last user activity by CB.chat.onLastUserActivityListener(userId, seconds). {@link https://xmpp.org/extensions/xep-0012.html More info.}\n     * @memberof CB.chat\n     * @param {(Number|String)} jidOrUserId - The user id or jid, that the last activity we want to know\n     * */\n    getLastUserActivity: function(jidOrUserId) {\n        var iqParams = {\n            from: this.helpers.getUserCurrentJid(),\n            id: this.helpers.getUniqueId('lastActivity'),\n            to: this.helpers.jidOrUserId(jidOrUserId),\n            type: 'get'\n        };\n\n        var iqStanza = ChatUtils.createIqStanza(iqParams);\n        iqStanza.c('query', {\n            xmlns: ChatUtils.MARKERS.LAST\n        });\n\n        this.xmppClient.send(iqStanza);\n    },\n\n    /**\n     * Logout from the Chat.\n     * @memberof CB.chat\n     * */\n    disconnect: function() {\n        clearInterval(this._checkConnectionTimer);\n        this._checkConnectionTimer = undefined;\n        this.muc.joinedRooms = {};\n        this._isLogout = true;\n        this.helpers.setUserCurrentJid('');\n\n        if (Utils.getEnv().browser) {\n            this.xmppClient.flush();\n            this.xmppClient.disconnect();\n        } else if (Utils.getEnv().reactnative) {\n            this.xmppClient.stop();\n        } else {\n            // Node.js & Native Script\n            this.xmppClient.end();\n        }\n    },\n\n    /**\n     * Carbons XEP [http://xmpp.org/extensions/xep-0280.html]\n     */\n    _enableCarbons: function() {\n        var carbonParams = {\n            type: 'set',\n            from: this.helpers.getUserCurrentJid(),\n            id: ChatUtils.getUniqueId('enableCarbons')\n        };\n\n        var iqStanza = ChatUtils.createIqStanza(carbonParams);\n        iqStanza.c('enable', {\n            xmlns: ChatUtils.MARKERS.CARBONS\n        });\n\n        if (Utils.getEnv().browser) {\n            this.xmppClient.sendIQ(iqStanza);\n        } else {\n            this.xmppClient.send(iqStanza);\n        }\n    }\n};\n\n/**\n * @namespace CB.chat\n * */\nmodule.exports = ChatProxy;\n","'use strict';\n\nconst Utils = require('../cubeInternalUtils'),\n\tConfig = require('../cubeConfig'),\n\tChatUtils = require('./cubeChatInternalUtils');\n\nfunction Helpers() {\n\tthis._userCurrentJid = '';\n}\n/**\n * @namespace CB.chat.helpers\n * */\nHelpers.prototype = {\n\t/**\n\t * Get unique id.\n\t * @memberof CB.chat.helpers\n\t * @param {String | Number} suffix - not required parameter.\n\t * @returns {String} - UniqueId.\n\t * */\n\tgetUniqueId: ChatUtils.getUniqueId,\n\n\t/**\n\t * Get unique id.\n\t * @memberof CB.chat.helpers\n\t * @param {String | Number} jidOrUserId - Jid or user id.\n\t * @returns {String} - jid.\n\t * */\n\tjidOrUserId: function(jidOrUserId) {\n\t\tvar jid;\n\t\tif (typeof jidOrUserId === 'string') {\n\t\t\tjid = jidOrUserId;\n\t\t} else if (typeof jidOrUserId === 'number') {\n\t\t\tjid = jidOrUserId + '-' + Config.creds.appId + '@' + Config.endpoints.chat;\n\t\t} else {\n\t\t\tthrow new Error('The method \"jidOrUserId\" may take jid or id');\n\t\t}\n\t\treturn jid;\n\t},\n\n\t/**\n\t * Get the chat type.\n\t * @memberof CB.chat.helpers\n\t * @param {String | Number} jidOrUserId - Jid or user id.\n\t * @returns {String} - jid.\n\t * */\n\ttypeChat: function(jidOrUserId) {\n\t\tvar chatType;\n\t\tif (typeof jidOrUserId === 'string') {\n\t\t\tchatType = jidOrUserId.indexOf('muc') > -1 ? 'groupchat' : 'chat';\n\t\t} else if (typeof jidOrUserId === 'number') {\n\t\t\tchatType = 'chat';\n\t\t} else {\n\t\t\tthrow new Error('Unsupported chat type');\n\t\t}\n\t\treturn chatType;\n\t},\n\n\t/**\n\t * Get the recipint id.\n\t * @memberof CB.chat.helpers\n\t * @param {Array} occupantsIds - Array of user ids.\n\t * @param {Number} UserId - Jid or user id.\n\t * @returns {Number} recipient - recipient id.\n\t * */\n\tgetRecipientId: function(occupantsIds, UserId) {\n\t\tvar recipient = null;\n\t\toccupantsIds.forEach(function(item) {\n\t\t\tif (item != UserId) {\n\t\t\t\trecipient = item;\n\t\t\t}\n\t\t});\n\t\treturn recipient;\n\t},\n\n\t/**\n\t * Get the User jid id.\n\t * @memberof CB.chat.helpers\n\t * @param {Number} UserId - The user id.\n\t * @param {Number} appId - The application id.\n\t * @returns {String} jid - The user jid.\n\t * */\n\tgetUserJid: function(userId, appId) {\n\t\tif (!appId) {\n\t\t\treturn userId + '-' + Config.creds.appId + '@' + Config.endpoints.chat;\n\t\t}\n\t\treturn userId + '-' + appId + '@' + Config.endpoints.chat;\n\t},\n\n\t/**\n\t * Get the User nick with the muc domain.\n\t * @memberof CB.chat.helpers\n\t * @param {Number} UserId - The user id.\n\t * @returns {String} mucDomainWithNick - The mac domain with he nick.\n\t * */\n\tgetUserNickWithMucDomain: function(userId) {\n\t\treturn Config.endpoints.muc + '/' + userId;\n\t},\n\n\t/**\n\t * Get the User id from jid.\n\t * @memberof CB.chat.helpers\n\t * @param {String} jid - The user jid.\n\t * @returns {Number} id - The user id.\n\t * */\n\tgetIdFromNode: function(jid) {\n\t\treturn jid.indexOf('@') < 0 ? null : parseInt(jid.split('@')[0].split('-')[0]);\n\t},\n\n\t/**\n\t * Get the dialog id from jid.\n\t * @memberof CB.chat.helpers\n\t * @param {String} jid - The dialog jid.\n\t * @returns {String} dialogId - The dialog id.\n\t * */\n\tgetDialogIdFromNode: function(jid) {\n\t\tif (jid.indexOf('@') < 0) return null;\n\t\treturn jid.split('@')[0].split('_')[1];\n\t},\n\n\t/**\n\t * Get the room jid from dialog id.\n\t * @memberof CB.chat.helpers\n\t * @param {String} dialogId - The dialog id.\n\t * @returns {String} jid - The dialog jid.\n\t * */\n\tgetRoomJidFromDialogId: function(dialogId) {\n\t\treturn Config.creds.appId + '_' + dialogId + '@' + Config.endpoints.muc;\n\t},\n\n\t/**\n\t * Get the full room jid from room bare jid & user jid.\n\t * @memberof CB.chat.helpers\n\t * @param {String} jid - dialog's bare jid.\n\t * @param {String} userJid - user's jid.\n\t * @returns {String} jid - dialog's full jid.\n\t * */\n\tgetRoomJid: function(jid) {\n\t\treturn jid + '/' + this.getIdFromNode(this._userCurrentJid);\n\t},\n\n\t/**\n\t * Get user id from dialog's full jid.\n\t * @memberof CB.chat.helpers\n\t * @param {String} jid - dialog's full jid.\n\t * @returns {String} user_id - User Id.\n\t * */\n\tgetIdFromResource: function(jid) {\n\t\tvar s = jid.split('/');\n\t\tif (s.length < 2) return null;\n\t\ts.splice(0, 1);\n\t\treturn parseInt(s.join('/'));\n\t},\n\n\t/**\n\t * Get bare dialog's jid from dialog's full jid.\n\t * @memberof CB.chat.helpers\n\t * @param {String} jid - dialog's full jid.\n\t * @returns {String} room_jid - dialog's bare jid.\n\t * */\n\tgetRoomJidFromRoomFullJid: function(jid) {\n\t\tvar s = jid.split('/');\n\t\tif (s.length < 2) return null;\n\t\treturn s[0];\n\t},\n\n\t/**\n\t * Generate BSON ObjectId.\n\t * @memberof CB.chat.helpers\n\t * @returns {String} BsonObjectId - The bson object id.\n\t **/\n\tgetBsonObjectId: function() {\n\t\treturn Utils.getBsonObjectId();\n\t},\n\n\t/**\n\t * Get the user id from the room jid.\n\t * @memberof CB.chat.helpers\n\t * @param {String} jid - resourse jid.\n\t * @returns {String} userId - The user id.\n\t * */\n\tgetUserIdFromRoomJid: function(jid) {\n\t\tvar arrayElements = jid.toString().split('/');\n\t\tif (arrayElements.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn arrayElements[arrayElements.length - 1];\n\t},\n\n\tuserCurrentJid: function(client) {\n\t\tif (Utils.getEnv().browser) {\n\t\t\treturn client.jid;\n\t\t} else if (Utils.getEnv().reactnative) {\n\t\t\treturn client.jid._local + '@' + client.jid._domain + '/' + client.jid._resource;\n\t\t} else {\n\t\t\t// Node.js & Native Script\n\t\t\treturn client.jid.user + '@' + client.jid._domain + '/' + client.jid._resource;\n\t\t}\n\t},\n\n\tgetUserCurrentJid: function() {\n\t\treturn this._userCurrentJid;\n\t},\n\n\tsetUserCurrentJid: function(jid) {\n\t\tthis._userCurrentJid = jid;\n\t},\n\n\tgetDialogJid: function(identifier) {\n\t\treturn identifier.indexOf('@') > 0 ? identifier : this.getRoomJidFromDialogId(identifier);\n\t}\n};\n\nmodule.exports = Helpers;\n","'use strict';\n\nconst Utils = require('../cubeInternalUtils'),\n    ChatUtils = require('./cubeChatInternalUtils');\n\nfunction StreamManagement() {\n    this._NS = 'urn:xmpp:sm:3';\n\n    this._isStreamManagementEnabled = false;\n\n    // Counter of the incoming stanzas\n    this._clientProcessedStanzasCounter = null;\n\n    // The client send stanza counter.\n    this._clientSentStanzasCounter = null;\n\n    this._timeInterval = 2000;\n\n    this.sentMessageCallback = null;\n\n    if(Utils.getEnv().browser){\n        this._parser = new DOMParser();\n    }\n\n    // connection\n    this._c = null;\n\n    // Original connection.send method\n    this._originalSend = null;\n\n    // In progress stanzas queue\n    this._stanzasQueue = [];\n}\n\nStreamManagement.prototype.enable = function (connection) {\n    var self = this,\n        stanza,\n        enableParams = {\n            xmlns: self._NS\n        };\n\n    if(!self._isStreamManagementEnabled){\n        self._c = connection;\n        self._originalSend = this._c.send;\n        self._c.send = this.send.bind(self);\n    }\n\n    if(Utils.getEnv().browser){\n        this._clientProcessedStanzasCounter = null;\n        this._clientSentStanzasCounter = null;\n    }\n    self._addEnableHandlers();\n\n    stanza = ChatUtils.createNonza('enable', enableParams);\n\n    self._c.send(stanza);\n};\n\nStreamManagement.prototype._timeoutCallback = function () {\n    var self = this,\n        now = Date.now(),\n        updatedStanzasQueue = [];\n\n    if(self._stanzasQueue.length){\n        for(var i = 0; i < self._stanzasQueue.length; i++){\n            if(self._stanzasQueue[i] && self._stanzasQueue[i].time < now){\n                self.sentMessageCallback(self._stanzasQueue[i].message);\n            } else {\n                updatedStanzasQueue.push(self._stanzasQueue[i]);\n            }\n        }\n\n        self._stanzasQueue = updatedStanzasQueue;\n    }\n};\n\nStreamManagement.prototype._addEnableHandlers = function () {\n    var self = this;\n\n    if (Utils.getEnv().browser) {\n        self._c.XAddTrackedHandler(_incomingStanzaHandler.bind(self));\n    } else if (Utils.getEnv().reactnative){\n        self._c.on('element', _incomingStanzaHandler.bind(self));\n    } else { // Node.js & Native Script\n        self._c.on('stanza', _incomingStanzaHandler.bind(self));\n    }\n\n    function _incomingStanzaHandler (stanza){\n        /*\n        * Getting incoming stanza tagName\n        * */\n\n        var tagName = stanza.name || stanza.tagName || stanza.nodeTree.tagName;\n\n        if(tagName === 'enabled'){\n            self._isStreamManagementEnabled = true;\n\n            setInterval(self._timeoutCallback.bind(self), self._timeInterval);\n\n            return true;\n        }\n\n        if(ChatUtils.getAttr(stanza, 'xmlns') !== self._NS){\n            self._increaseReceivedStanzasCounter();\n        }\n\n        if(tagName === 'r'){\n            var params = {\n                    xmlns: self._NS,\n                    h: self._clientProcessedStanzasCounter\n                },\n                answerStanza = ChatUtils.createNonza('a', params);\n\n            self._originalSend.call(self._c, answerStanza);\n\n            return true;\n        }\n\n        if(tagName === 'a'){\n            var h = parseInt(ChatUtils.getAttr(stanza, 'h'));\n\n            self._checkCounterOnIncomeStanza(h);\n        }\n\n        return true;\n    }\n};\n\nStreamManagement.prototype.send = function (stanza, message) {\n    var self = this,\n        stanzaXML = stanza.nodeTree ? this._parser.parseFromString(stanza.nodeTree.outerHTML, \"application/xml\").childNodes[0] : stanza,\n        tagName = stanzaXML.name || stanzaXML.tagName || stanzaXML.nodeTree.tagName,\n        type = ChatUtils.getAttr(stanzaXML, 'type'),\n        bodyContent = ChatUtils.getElementText(stanzaXML, 'body') || '',\n        attachments = ChatUtils.getAllElements(stanzaXML, 'attachment') || '';\n\n    self._originalSend.call(self._c, stanza);\n\n    if (tagName === 'message' && (type === 'chat' || type === 'groupchat') && (bodyContent || attachments.length)) {\n        self._sendStanzasRequest({\n            message: message,\n            time: Date.now() + self._timeInterval,\n            expect: self._clientSentStanzasCounter\n        });\n    }\n\n    self._clientSentStanzasCounter++;\n};\n\nStreamManagement.prototype._sendStanzasRequest = function (data) {\n    var self = this;\n\n    if(self._isStreamManagementEnabled){\n        self._stanzasQueue.push(data);\n\n        var stanza = ChatUtils.createNonza('r', {xmlns: self._NS});\n\n        self._originalSend.call(self._c, stanza);\n    }\n};\n\nStreamManagement.prototype.getClientSentStanzasCounter = function(){\n    return this._clientSentStanzasCounter;\n};\n\nStreamManagement.prototype._checkCounterOnIncomeStanza = function (count){\n    if (this._stanzasQueue[0].expect !== count){\n        this.sentMessageCallback(this._stanzasQueue[0].message);\n    } else {\n        this.sentMessageCallback(null, this._stanzasQueue[0].message);\n    }\n\n    this._stanzasQueue.shift();\n};\n\nStreamManagement.prototype._increaseReceivedStanzasCounter = function(){\n    this._clientProcessedStanzasCounter++;\n};\n\nmodule.exports = StreamManagement;\n","/* Chat module: Contact List\n *\n * Integration of Roster Items and Presence Subscriptions\n * http://xmpp.org/rfcs/rfc3921.html#int\n * default - Mutual Subscription\n *\n ----------------------------------------------------------------------------- */\n\nconst ChatUtils = require('./cubeChatInternalUtils'),\n    Utils = require('../cubeInternalUtils'),\n    Config = require('../cubeConfig');\n\nfunction ContactListProxy(options) {\n    this.helpers = options.helpers;\n    this.xmppClient = options.xmppClient;\n    this.nodeStanzasCallbacks = options.nodeStanzasCallbacks;\n    //\n    this.contacts = {};\n}\n\nContactListProxy.prototype = {\n    /**\n     * Receive contact list.\n     * @memberof CB.chat.roster\n     * @param {getRosterCallback} callback - The callback function.\n     * */\n    get: function(callback) {\n        /**\n         * This callback Return contact list.\n         * @callback getRosterCallback\n         * @param {Object} roster - Object of subscribed users.\n         * */\n\n        const self = this,\n            stanzaId = ChatUtils.getUniqueId('getRoster');\n\n        let contacts = {},\n            iqStanza = ChatUtils.createIqStanza({\n                type: 'get',\n                from: this.helpers.getUserCurrentJid(),\n                id: stanzaId\n            });\n\n        iqStanza.c('query', {\n            xmlns: ChatUtils.MARKERS.ROSTER\n        });\n\n        function _getItems(stanza) {\n            if (Utils.getEnv().browser) {\n                return stanza.getElementsByTagName('item');\n            } else {\n                return stanza.getChild('query').children;\n            }\n        }\n\n        function _callbackWrap(stanza) {\n            const items = _getItems(stanza);\n            /** TODO */\n            for (let i = 0, len = items.length; i < len; i++) {\n                const userId = self.helpers.getIdFromNode(ChatUtils.getAttr(items[i], 'jid')),\n                    ask = ChatUtils.getAttr(items[i], 'ask'),\n                    subscription = ChatUtils.getAttr(items[i], 'subscription'),\n                    name = ChatUtils.getAttr(items[i], 'name'),\n                    isUniqName = userId + '-' + Config.creds.appId !== name;\n\n                contacts[userId] = {\n                    subscription: subscription,\n                    ask: ask || null,\n                    name: isUniqName ? name : null\n                };\n            }\n\n            callback(contacts);\n        }\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(iqStanza, _callbackWrap);\n        } else {\n            self.nodeStanzasCallbacks[stanzaId] = _callbackWrap;\n            self.xmppClient.send(iqStanza);\n        }\n    },\n\n    /**\n     * Add users to contact list.\n     * @memberof CB.chat.roster\n     * @param {Object | Number} params - Object of parameters or user id.\n     * @param {Number} params.userId - The contact's id.\n     * @param {String} [params.name] - The contact's name.\n     * @param {addRosterCallback} callback - The callback function.\n     * */\n    add: function(params, callback) {\n        /**\n         * Callback for CB.chat.roster.add(). Run without parameters.\n         * @callback addRosterCallback\n         * */\n        const self = this,\n            userId = params.userId || params,\n            userJid = self.helpers.jidOrUserId(userId),\n            stanzaId = ChatUtils.getUniqueId('addContactInRoster');\n\n        let iqStanza = ChatUtils.createIqStanza({\n            type: 'set',\n            from: self.helpers.getUserCurrentJid(),\n            id: stanzaId\n        });\n\n        self.contacts[userId] = {\n            subscription: 'none',\n            ask: 'subscribe',\n            name: params.name || null\n        };\n\n        iqStanza\n            .c('query', {\n                xmlns: ChatUtils.MARKERS.ROSTER\n            })\n            .c('item', {\n                jid: userJid,\n                name: params.name || null\n            });\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(iqStanza, _callbackWrap);\n        } else {\n            self.nodeStanzasCallbacks[stanzaId] = _callbackWrap;\n            self.xmppClient.send(iqStanza);\n        }\n\n        function _callbackWrap() {\n            self._sendSubscriptionPresence({\n                jid: userJid,\n                type: 'subscribe'\n            });\n\n            if (typeof callback === 'function') {\n                callback();\n            }\n        }\n    },\n\n    /**\n     * Confirm subscription with some user.\n     * @memberof CB.chat.roster\n     * @param {Object | Number} params - Object of parameters or user id.\n     * @param {Number} params.userId - The contact's id.\n     * @param {String} [params.name] - The contact's name.\n     * @param {addRosterCallback} callback - The callback function.\n     * */\n    confirm: function(params, callback) {\n        /**\n         * Callback for CB.chat.roster.confirm(). Run without parameters.\n         * @callback confirmRosterCallback\n         * */\n        const userId = params.userId || params,\n            userJid = this.helpers.jidOrUserId(userId);\n\n        this._sendSubscriptionPresence({\n            jid: userJid,\n            type: 'subscribed'\n        });\n\n        if (Config.chat.contactList.subscriptionMode.mutual) {\n            this.add(params, function() {\n                _callbackWrap();\n            });\n        } else {\n            _callbackWrap();\n        }\n\n        function _callbackWrap() {\n            if (typeof callback === 'function') {\n                callback();\n            }\n        }\n    },\n\n    /**\n     * Reject subscription with some user.\n     * @memberof CB.chat.roster\n     * @param {Number} userId - The contact's id.\n     * @param {rejectRosterCallback} callback - The callback function.\n     * */\n    reject: function(userId, callback) {\n        /**\n         * Callback for CB.chat.roster.reject(). Run without parameters.\n         * @callback rejectRosterCallback\n         * */\n        const userJid = this.helpers.jidOrUserId(userId);\n\n        this.contacts[userId] = {\n            subscription: 'none',\n            ask: null\n        };\n\n        this._sendSubscriptionPresence({\n            jid: userJid,\n            type: 'unsubscribed'\n        });\n\n        if (typeof callback === 'function') {\n            callback();\n        }\n    },\n\n    /**\n     * Update contact's name.\n     * @memberof CB.chat.roster\n     * @param {Object} params - Object of parameters.\n     * @param {Number} params.userId - The contact's id.\n     * @param {String} params.name - The new contact's name.\n     * @param {updateNameRosterCallback} callback - The callback function.\n     * */\n    updateName: function(params, callback) {\n        /**\n         * Callback for CB.chat.roster.updateName(). Run without parameters.\n         * @callback updateNameRosterCallback\n         * */\n        const userJid = this.helpers.jidOrUserId(params.userId),\n            stanzaId = ChatUtils.getUniqueId('updateContactInRoster');\n\n        let contact = this.contacts[params.userId];\n\n        if (Utils.isObject(contact)) {\n            contact.name = params.name || null;\n        } else {\n            _callbackWrap('No contact exists with provided user id');\n            return;\n        }\n\n        let iqStanza = ChatUtils.createIqStanza({\n            type: 'set',\n            from: this.helpers.getUserCurrentJid(),\n            id: stanzaId\n        });\n\n        iqStanza\n            .c('query', {\n                xmlns: ChatUtils.MARKERS.ROSTER\n            })\n            .c('item', {\n                jid: userJid,\n                name: params.name || null\n            });\n\n        if (Utils.getEnv().browser) {\n            this.xmppClient.sendIQ(iqStanza, _callbackWrap);\n        } else {\n            this.nodeStanzasCallbacks[stanzaId] = _callbackWrap;\n            this.xmppClient.send(iqStanza);\n        }\n\n        function _callbackWrap(error) {\n            if (typeof callback === 'function') {\n                if (error) {\n                    callback(error);\n                } else {\n                    callback();\n                }\n            }\n        }\n    },\n\n    /**\n     * Remove subscription with some user from your contact list.\n     * @memberof CB.chat.roster\n     * @param {Number} userId - The contact's id.\n     * @param {removeRosterCallback} callback - The callback function.\n     * */\n    remove: function(userId, callback) {\n        /**\n         * Callback for CB.chat.roster.remove(). Run without parameters.\n         * @callback removeRosterCallback\n         * */\n        const self = this,\n            userJid = this.helpers.jidOrUserId(userId),\n            stanzaId = ChatUtils.getUniqueId('removeConactInRoster');\n\n        let iqStanza = ChatUtils.createIqStanza({\n            type: 'set',\n            from: this.helpers.getUserCurrentJid(),\n            id: stanzaId\n        });\n\n        iqStanza\n            .c('query', {\n                xmlns: ChatUtils.MARKERS.ROSTER\n            })\n            .c('item', {\n                jid: userJid,\n                subscription: 'remove'\n            });\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(iqStanza, _callbackWrap);\n        } else {\n            self.nodeStanzasCallbacks[stanzaId] = _callbackWrap;\n            self.xmppClient.send(iqStanza);\n        }\n\n        function _callbackWrap() {\n            delete self.contacts[userId];\n\n            if (typeof callback === 'function') {\n                callback();\n            }\n        }\n    },\n\n    _sendSubscriptionPresence: function(params) {\n        const presenceParams = {\n            to: params.jid,\n            type: params.type\n        };\n\n        const presenceStanza = ChatUtils.createPresenceStanza(presenceParams);\n\n        this.xmppClient.send(presenceStanza);\n    }\n};\n\nmodule.exports = ContactListProxy;\n","\n/* Chat module: Privacy list\n *\n * Privacy list\n * http://xmpp.org/extensions/xep-0016.html\n * by default 'mutualBlock' is work in one side\n----------------------------------------------------------------------------- */\n\nconst ChatUtils = require('./cubeChatInternalUtils'),\n    Utils = require('../cubeInternalUtils');\n\n\nfunction PrivacyListProxy(options) {\n    this.helpers = options.helpers;\n    this.xmppClient = options.xmppClient;\n    this.nodeStanzasCallbacks = options.nodeStanzasCallbacks;\n}\n\n/**\n * @namespace CB.chat.privacylist\n **/\nPrivacyListProxy.prototype = {\n    /**\n     * Create a privacy list.\n     * @memberof CB.chat.privacylist\n     * @param {Object} list - privacy list object.\n     * @param {createPrivacylistCallback} callback - The callback function.\n     * */\n    create: function (list, callback) {\n        /**\n         * Callback for CB.chat.privacylist.create().\n         * @param {Object} error - The error object\n         * @callback createPrivacylistCallback\n         * */\n\n        const self = this;\n\n        let userId,\n            userJid,\n            userMuc,\n            userAction,\n            mutualBlock,\n            listPrivacy = {},\n            listUserId = [];\n\n        /** Filled listPrivacys */\n        for (let i = list.items.length - 1; i >= 0; i--) {\n            const user = list.items[i];\n\n            listPrivacy[user.user_id] = {\n                action: user.action,\n                mutualBlock: user.mutualBlock === true ? true : false\n            };\n        }\n\n        /** Filled listUserId */\n        listUserId = Object.keys(listPrivacy);\n\n        const iqParams = {\n            type: 'set',\n            from: self.helpers.getUserCurrentJid(),\n            id: ChatUtils.getUniqueId('edit')\n        };\n\n        let iq = ChatUtils.createIqStanza(iqParams);\n\n        iq.c('query', {\n            xmlns: ChatUtils.MARKERS.PRIVACY\n        }).c('list', {\n            name: list.name\n        });\n\n        function createPrivacyItem(iq, params) {\n            if (Utils.getEnv().browser) {\n                iq.c('item', {\n                    type: 'jid',\n                    value: params.jidOrMuc,\n                    action: params.userAction,\n                    order: params.order\n                }).c('message', {})\n                    .up().c('presence-in', {})\n                    .up().c('presence-out', {})\n                    .up().c('iq', {})\n                    .up().up();\n            } else {\n                let list = iq.getChild('query').getChild('list');\n\n                list.c('item', {\n                    type: 'jid',\n                    value: params.jidOrMuc,\n                    action: params.userAction,\n                    order: params.order\n                }).c('message', {})\n                    .up().c('presence-in', {})\n                    .up().c('presence-out', {})\n                    .up().c('iq', {})\n                    .up().up();\n            }\n\n            return iq;\n        }\n\n        function createPrivacyItemMutal(iq, params) {\n            if (Utils.getEnv().browser) {\n                iq.c('item', {\n                    type: 'jid',\n                    value: params.jidOrMuc,\n                    action: params.userAction,\n                    order: params.order\n                }).up();\n            } else {\n                let list = iq.getChild('query').getChild('list');\n\n                list.c('item', {\n                    type: 'jid',\n                    value: params.jidOrMuc,\n                    action: params.userAction,\n                    order: params.order\n                }).up();\n            }\n\n            return iq;\n        }\n\n        for (let index = 0, j = 0, len = listUserId.length; index < len; index++ , j = j + 2) {\n            userId = listUserId[index];\n            mutualBlock = listPrivacy[userId].mutualBlock;\n\n            userAction = listPrivacy[userId].action;\n            userJid = self.helpers.jidOrUserId(parseInt(userId, 10));\n            userMuc = self.helpers.getUserNickWithMucDomain(userId);\n\n            if (mutualBlock && userAction === 'deny') {\n                iq = createPrivacyItemMutal(iq, {\n                    order: j + 1,\n                    jidOrMuc: userJid,\n                    userAction: userAction\n                });\n                iq = createPrivacyItemMutal(iq, {\n                    order: j + 2,\n                    jidOrMuc: userMuc,\n                    userAction: userAction\n                }).up().up();\n            } else {\n                iq = createPrivacyItem(iq, {\n                    order: j + 1,\n                    jidOrMuc: userJid,\n                    userAction: userAction\n                });\n                iq = createPrivacyItem(iq, {\n                    order: j + 2,\n                    jidOrMuc: userMuc,\n                    userAction: userAction\n                });\n            }\n        }\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(\n                iq,\n                function (stanzaResult) {\n                    callback(null);\n                },\n                function (stanzaError) {\n                    if (stanzaError) {\n                        callback(ChatUtils.getErrorFromXMLNode(stanzaError));\n                    } else {\n                        callback(Utils.getError(408));\n                    }\n                }\n            );\n        } else {\n            self.xmppClient.send(iq);\n\n            self.nodeStanzasCallbacks[iqParams.id] = function (stanza) {\n                if (!stanza.getChildElements('error').length) {\n                    callback(null);\n                } else {\n                    callback(Utils.getError(408));\n                }\n            };\n        }\n    },\n\n    /**\n     * Get the privacy list.\n     * @memberof CB.chat.privacylist\n     * @param {String} name - The name of the list.\n     * @param {getListPrivacylistCallback} callback - The callback function.\n     * */\n    getList: function (name, callback) {\n        /**\n         * Callback for CB.chat.privacylist.getList().\n         * @param {Object} error - The error object\n         * @param {Object} response - The privacy list object\n         * @callback getListPrivacylistCallback\n         * */\n\n        const self = this;\n\n        let items,\n            userJid,\n            userId,\n            usersList = [],\n            list = {};\n\n        const iqParams = {\n            type: 'get',\n            from: self.helpers.getUserCurrentJid(),\n            id: ChatUtils.getUniqueId('getlist')\n        };\n\n        let iq = ChatUtils.createIqStanza(iqParams);\n\n        iq.c('query', {\n            xmlns: ChatUtils.MARKERS.PRIVACY\n        }).c('list', {\n            name: name\n        });\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(\n                iq,\n                function (stanzaResult) {\n                    items = stanzaResult.getElementsByTagName('item');\n\n                    for (let i = 0, len = items.length; i < len; i = i + 2) {\n                        userJid = items[i].getAttribute('value');\n                        userId = self.helpers.getIdFromNode(userJid);\n                        usersList.push({\n                            user_id: userId,\n                            action: items[i].getAttribute('action')\n                        });\n                    }\n\n                    list = {\n                        name: name,\n                        items: usersList\n                    };\n\n                    callback(null, list);\n                },\n                function (stanzaError) {\n                    if (stanzaError) {\n                        callback(ChatUtils.getErrorFromXMLNode(stanzaError), null);\n                    } else {\n                        callback(Utils.getError(408), null);\n                    }\n                }\n            );\n        } else {\n            self.nodeStanzasCallbacks[iqParams.id] = function (stanza) {\n                const stanzaQuery = stanza.getChild('query');\n\n                list = stanzaQuery ? stanzaQuery.getChild('list') : null;\n                items = list ? list.getChildElements('item') : null;\n\n                for (let i = 0, len = items.length; i < len; i = i + 2) {\n                    userJid = items[i].attrs.value;\n                    userId = self.helpers.getIdFromNode(userJid);\n                    usersList.push({\n                        user_id: userId,\n                        action: items[i].attrs.action\n                    });\n                }\n\n                list = {\n                    name: list.attrs.name,\n                    items: usersList\n                };\n\n                callback(null, list);\n\n                delete self.nodeStanzasCallbacks[iqParams.id];\n            };\n\n            self.xmppClient.send(iq);\n        }\n    },\n\n    /**\n     * Update the privacy list.\n     * @memberof CB.chat.privacylist\n     * @param {String} name - The name of the list.\n     * @param {updatePrivacylistCallback} callback - The callback function.\n     * */\n    update: function (listWithUpdates, callback) {\n        /**\n         * Callback for CB.chat.privacylist.update().\n         * @param {Object} error - The error object\n         * @param {Object} response - The privacy list object\n         * @callback updatePrivacylistCallback\n         * */\n\n        const self = this;\n\n        self.getList(listWithUpdates.name, function (error, existentList) {\n            if (error) {\n                callback(error, null);\n            } else {\n                const updatedList = {\n                    items: Utils.MergeArrayOfObjects(existentList.items, listWithUpdates.items),\n                    name: listWithUpdates.name\n                };\n\n                self.create(updatedList, function (err, result) {\n                    if (error) {\n                        callback(err, null);\n                    } else {\n                        callback(null, result);\n                    }\n                });\n            }\n        });\n    },\n\n    /**\n     * Get names of privacy lists.\n     * Run without parameters\n     * @memberof CB.chat.privacylist\n     * @param {getNamesPrivacylistCallback} callback - The callback function.\n     * */\n    getNames: function (callback) {\n        /**\n         * Callback for CB.chat.privacylist.getNames().\n         * @param {Object} error - The error object\n         * @param {Object} response - The privacy list object (let names = response.names;)\n         * @callback getNamesPrivacylistCallback\n         * */\n\n        const self = this,\n            iqParams = {\n                'type': 'get',\n                'from': self.helpers.getUserCurrentJid(),\n                'id': ChatUtils.getUniqueId('getNames')\n            };\n\n        let iq = ChatUtils.createIqStanza(iqParams);\n\n        iq.c('query', {\n            xmlns: ChatUtils.MARKERS.PRIVACY\n        });\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(iq, function (stanzaResult) {\n                const defaultList = stanzaResult.getElementsByTagName('default'),\n                    activeList = stanzaResult.getElementsByTagName('active'),\n                    allLists = stanzaResult.getElementsByTagName('list');\n\n                let defaultName = defaultList && defaultList.length > 0 ? defaultList[0].getAttribute('name') : null,\n                    activeName = activeList && activeList.length > 0 ? activeList[0].getAttribute('name') : null;\n\n                let allNames = [];\n\n                for (let i = 0, len = allLists.length; i < len; i++) {\n                    allNames.push(allLists[i].getAttribute('name'));\n                }\n\n                const namesList = {\n                    default: defaultName,\n                    active: activeName,\n                    names: allNames\n                };\n\n                callback(null, namesList);\n            }, function (stanzaError) {\n                if (stanzaError) {\n                    callback(ChatUtils.getErrorFromXMLNode(stanzaError), null);\n                } else {\n                    callback(Utils.getError(408), null);\n                }\n            });\n        } else {\n            self.nodeStanzasCallbacks[iq.attrs.id] = function (stanza) {\n                if (stanza.attrs.type !== 'error') {\n                    const query = stanza.getChild('query'),\n                        defaultList = query.getChild('default'),\n                        activeList = query.getChild('active'),\n                        allLists = query.getChildElements('list');\n\n                    let defaultName = defaultList ? defaultList.attrs.name : null,\n                        activeName = activeList ? activeList.attrs.name : null;\n\n                    let allNames = [];\n\n                    for (let i = 0, len = allLists.length; i < len; i++) {\n                        allNames.push(allLists[i].attrs.name);\n                    }\n\n                    const namesList = {\n                        default: defaultName,\n                        active: activeName,\n                        names: allNames\n                    };\n\n                    callback(null, namesList);\n                } else {\n                    callback(Utils.getError(408));\n                }\n            };\n\n            self.xmppClient.send(iq);\n        }\n    },\n\n    /**\n     * Delete privacy list.\n     * @param {String} name - The name of privacy list.\n     * @memberof CB.chat.privacylist\n     * @param {deletePrivacylistCallback} callback - The callback function.\n     * */\n    delete: function (name, callback) {\n        /**\n         * Callback for CB.chat.privacylist.delete().\n         * @param {Object} error - The error object\n         * @callback deletePrivacylistCallback\n         * */\n\n        const iqParams = {\n            from: this.xmppClient.jid || this.xmppClient.jid.user,\n            type: 'set',\n            id: ChatUtils.getUniqueId('remove')\n        };\n\n        let iq = ChatUtils.createIqStanza(iqParams);\n\n        iq.c('query', {\n            xmlns: ChatUtils.MARKERS.PRIVACY\n        }).c('list', {\n            name: name ? name : ''\n        });\n\n        if (Utils.getEnv().browser) {\n            this.xmppClient.sendIQ(\n                iq,\n                function (stanzaResult) {\n                    callback(null);\n                },\n                function (stanzaError) {\n                    if (stanzaError) {\n                        callback(ChatUtils.getErrorFromXMLNode(stanzaError));\n                    } else {\n                        callback(Utils.getError(408));\n                    }\n                }\n            );\n        } else {\n            this.nodeStanzasCallbacks[iq.attrs.id] = function (stanza) {\n                if (!stanza.getChildElements('error').length) {\n                    callback(null);\n                } else {\n                    callback(Utils.getError(408));\n                }\n            };\n\n            this.xmppClient.send(iq);\n        }\n    },\n\n    /**\n     * Set as default privacy list.\n     * @param {String} name - The name of privacy list.\n     * @memberof CB.chat.privacylist\n     * @param {setAsDefaultPrivacylistCallback} callback - The callback function.\n     * */\n    setAsDefault: function (name, callback) {\n        /**\n         * Callback for CB.chat.privacylist.setAsDefault().\n         * @param {Object} error - The error object\n         * @callback setAsDefaultPrivacylistCallback\n         * */\n\n        const iqParams = {\n            from: this.xmppClient.jid || this.xmppClient.jid.user,\n            type: 'set',\n            id: ChatUtils.getUniqueId('default')\n        };\n\n        let iq = ChatUtils.createIqStanza(iqParams);\n\n        iq.c('query', {\n            xmlns: ChatUtils.MARKERS.PRIVACY\n        }).c('default', name && name.length > 0 ? { name: name } : {});\n\n        if (Utils.getEnv().browser) {\n            this.xmppClient.sendIQ(\n                iq,\n                function (stanzaResult) {\n                    callback(null);\n                },\n                function (stanzaError) {\n                    if (stanzaError) {\n                        callback(ChatUtils.getErrorFromXMLNode(stanzaError));\n                    } else {\n                        callback(Utils.getError(408));\n                    }\n                }\n            );\n        } else {\n            this.nodeStanzasCallbacks[iq.attrs.id] = function (stanza) {\n                if (!stanza.getChildElements('error').length) {\n                    callback(null);\n                } else {\n                    callback(Utils.getError(408));\n                }\n            };\n\n            this.xmppClient.send(iq);\n        }\n    }\n\n};\n\nmodule.exports = PrivacyListProxy;\n","\n/* Chat module: Group Chat (Dialog)\n *\n * Multi-User Chat\n * http://xmpp.org/extensions/xep-0045.html\n *\n ----------------------------------------------------------------------------- */\n\nconst ChatUtils = require('./cubeChatInternalUtils'),\n    Utils = require('../cubeInternalUtils');\n\n\nfunction MucProxy(options) {\n    this.helpers = options.helpers;\n    this.xmppClient = options.xmppClient;\n    this.nodeStanzasCallbacks = options.nodeStanzasCallbacks;\n    //\n    this.joinedRooms = {};\n}\n\nMucProxy.prototype = {\n\n    /**\n     * Join to the group dialog.\n     * @memberof CB.chat.muc\n     * @param {String} dialogIdOrJid - Use dialog jid or dialog id to join to this dialog.\n     * @param {joinMacCallback} callback - The callback function.\n     * */\n    join: function (dialogIdOrJid, callback) {\n        /**\n         * Callback for CB.chat.muc.join().\n         * @param {Object} error - Returns error object or null\n         * @param {Object} responce - Returns responce\n         * @callback joinMacCallback\n         * */\n        const self = this,\n            id = ChatUtils.getUniqueId('join'),\n            dialogJid = this.helpers.getDialogJid(dialogIdOrJid),\n            presenceParams = {\n                id: id,\n                from: self.helpers.getUserCurrentJid(),\n                to: self.helpers.getRoomJid(dialogJid)\n            }\n\n        let presenceStanza = ChatUtils.createPresenceStanza(presenceParams);\n\n        presenceStanza.c('x', {\n            xmlns: ChatUtils.MARKERS.MUC\n        }).c('history', { maxstanzas: 0 });\n\n        this.joinedRooms[dialogJid] = true;\n\n        function handleJoinAnswer(stanza) {\n            const from = ChatUtils.getAttr(stanza, 'from'),\n                dialogId = self.helpers.getDialogIdFromNode(from),\n                x = ChatUtils.getElement(stanza, 'x'),\n                xXMLNS = ChatUtils.getAttr(x, 'xmlns'),\n                status = ChatUtils.getElement(x, 'status'),\n                statusCode = ChatUtils.getAttr(status, 'code');\n\n            if (callback.length == 1) {\n                Utils.safeCallbackCall(callback, stanza);\n                return true;\n            }\n\n            if (status && statusCode == '110') {\n                Utils.safeCallbackCall(callback, null, {\n                    dialogId: dialogId\n                });\n            } else {\n                const type = ChatUtils.getAttr(stanza, 'type');\n\n                if (type && type === 'error' && xXMLNS == 'http://jabber.org/protocol/muc' && id.endsWith(':join')) {\n                    const errorEl = ChatUtils.getElement(stanza, 'error'),\n                        code = ChatUtils.getAttr(errorEl, 'code'),\n                        errorMessage = ChatUtils.getElementText(errorEl, 'text');\n\n                    Utils.safeCallbackCall(callback, {\n                        code: code || 500,\n                        message: errorMessage || 'Unknown issue'\n                    }, { dialogId: dialogId });\n                }\n            }\n        }\n\n        if (Utils.getEnv().browser) {\n            if (typeof callback === 'function') {\n                self.xmppClient.XAddTrackedHandler(handleJoinAnswer, null, 'presence', null, id);\n            }\n        } else {\n            if (typeof callback === 'function') {\n                self.nodeStanzasCallbacks[id] = handleJoinAnswer;\n            }\n        }\n\n        self.xmppClient.send(presenceStanza);\n    },\n\n    /**\n     * Leave group chat dialog.\n     * @memberof CB.chat.muc\n     * @param {String} dialogJid - Use dialog jid to join to this dialog.\n     * @param {leaveMacCallback} callback - The callback function.\n     * */\n    leave: function (jid, callback) {\n        /**\n         * Callback for CB.chat.muc.leave().\n         * run without parameters;\n         * @callback leaveMacCallback\n         * */\n\n        const self = this,\n            presenceParams = {\n                type: 'unavailable',\n                from: self.helpers.getUserCurrentJid(),\n                to: self.helpers.getRoomJid(jid)\n            };\n\n        let presenceStanza = ChatUtils.createPresenceStanza(presenceParams);\n\n        delete this.joinedRooms[jid];\n\n        if (Utils.getEnv().browser) {\n            const roomJid = self.helpers.getRoomJid(jid);\n\n            if (typeof callback === 'function') {\n                self.xmppClient.XAddTrackedHandler(callback, null, 'presence', presenceParams.type, null, roomJid);\n            }\n        } else {\n            /** The answer don't contain id */\n            if (typeof callback === 'function') {\n                self.nodeStanzasCallbacks['muc:leave'] = callback;\n            }\n        }\n        self.xmppClient.send(presenceStanza);\n    },\n\n    /**\n     * Leave group chat dialog.\n     * @memberof CB.chat.muc\n     * @param {String} dialogJid - Use dialog jid to join to this dialog.\n     * @param {listOnlineUsersMacCallback} callback - The callback function.\n     * */\n    listOnlineUsers: function (dialogJID, callback) {\n        /**\n         * Callback for CB.chat.muc.leave().\n         * @param {Object} Users - list of online users\n         * @callback listOnlineUsersMacCallback\n         * */\n\n        const self = this,\n            iqParams = {\n                type: 'get',\n                to: dialogJID,\n                from: self.helpers.getUserCurrentJid(),\n                id: ChatUtils.getUniqueId('muc_disco_items'),\n            };\n\n        let iqStanza = ChatUtils.createIqStanza(iqParams);\n\n        iqStanza.c('query', {\n            xmlns: 'http://jabber.org/protocol/disco#items'\n        });\n\n        function _getUsers(stanza) {\n            var stanzaId = stanza.attrs.id;\n\n            if (self.nodeStanzasCallbacks[stanzaId]) {\n                const items = stanza.getChild('query').getChildElements('item');\n\n                let users = [];\n\n                for (var i = 0, len = items.length; i < len; i++) {\n                    let userId = self.helpers.getUserIdFromRoomJid(items[i].attrs.jid);\n                    users.push(parseInt(userId));\n                }\n\n                callback(users);\n            }\n        }\n\n        if (Utils.getEnv().browser) {\n            self.xmppClient.sendIQ(iqStanza, function (stanza) {\n                const items = stanza.getElementsByTagName('item');\n\n                let onlineUsers = [];\n\n                for (let i = 0, len = items.length; i < len; i++) {\n                    let userId = self.helpers.getUserIdFromRoomJid(items[i].getAttribute('jid'));\n                    onlineUsers.push(parseInt(userId));\n                }\n\n                callback(onlineUsers);\n            });\n        } else {\n            self.xmppClient.send(iqStanza);\n            self.nodeStanzasCallbacks[iqParams.id] = _getUsers;\n        }\n    }\n};\n\nmodule.exports = MucProxy;\n","const Config = require('../cubeConfig'),\n    Utils = require('../cubeInternalUtils');\n\nconst DIALOGS_API_URL = Config.urls.chat + '/Dialog';\n\nfunction DialogProxy(service) {\n    this.service = service;\n}\n\nDialogProxy.prototype = {\n    /**\n     * Retrieve list of dialogs.\n     * @memberof CB.chat.dialog\n     * @param {Object} params - Some filters to get only chat dialogs you need.\n     * @param {listDialogCallback} callback - The callback function.\n     * */\n    list: function (params, callback) {\n        /**\n         * Callback for CB.chat.dialog.list().\n         * @param {Object} error - The error object\n         * @param {Object} resDialogs - the dialog list\n         * @callback listDialogCallback\n         * */\n\n        if (typeof params === 'function' && typeof callback === 'undefined') {\n            callback = params;\n            params = {};\n        }\n\n        const ajaxParams = {\n            url: Utils.getUrl(DIALOGS_API_URL),\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    },\n\n    /**\n     * Create new dialog.\n     * @memberof CB.chat.dialog\n     * @param {Object} params - Object of parameters.\n     * @param {createDialogCallback} callback - The callback function.\n     * */\n    create: function (params, callback) {\n        /**\n         * Callback for CB.chat.dialog.create().\n         * @param {Object} error - The error object\n         * @param {Object} createdDialog - the dialog object\n         * @callback createDialogCallback\n         * */\n\n        if (params && params.occupants_ids && Utils.isArray(params.occupants_ids)) {\n            params.occupants_ids = params.occupants_ids.join(', ');\n        }\n\n        const ajaxParams = {\n            url: Utils.getUrl(DIALOGS_API_URL),\n            type: 'POST',\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    },\n\n    /**\n     * Update group dialog.\n     * @memberof CB.chat.dialog\n     * @param {String} id - The dialog ID.\n     * @param {Object} params - Object of parameters.\n     * @param {updateDialogCallback} callback - The callback function.\n     * */\n    update: function (id, params, callback) {\n        /**\n         * Callback for CB.chat.dialog.update()\n         * @param {Object} error - The error object\n         * @param {Object} res - the dialog object\n         * @callback updateDialogCallback\n         * */\n\n        const ajaxParams = {\n            url: Utils.getUrl(DIALOGS_API_URL, id),\n            type: 'PUT',\n            contentType: 'application/json; charset=utf-8',\n            isNeedStringify: true,\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    },\n\n    /**\n     * Delete a dialog or dialogs.\n     * @memberof CB.chat.dialog\n     * @param {Array} id - The dialog IDs array.\n     * @param {Object | function} params_or_callback - Object of parameters or callback function.\n     * @param {deleteDialogCallback} callback - The callback function.\n     * */\n    delete: function (id, params_or_callback, callback) {\n        /**\n         * Callback for CB.chat.dialog.delete()\n         * @param {Object} error - The error object\n         * @callback deleteDialogCallback\n         * */\n\n        var ajaxParams = {\n            url: Utils.getUrl(DIALOGS_API_URL, id),\n            type: 'DELETE',\n            dataType: 'text'\n        };\n\n        if (arguments.length === 2) {\n            this.service.ajax(ajaxParams, params_or_callback);\n        } else if (arguments.length === 3) {\n            ajaxParams.data = params_or_callback;\n\n            this.service.ajax(ajaxParams, callback);\n        }\n    }\n};\n\nmodule.exports = DialogProxy;\n","const Config = require('../cubeConfig'),\n    Utils = require('../cubeInternalUtils');\n\nconst MESSAGES_API_URL = Config.urls.chat + '/Message';\n\nfunction MessageProxy(service) {\n    this.service = service;\n}\n\nMessageProxy.prototype = {\n    /**\n     * get a chat history\n     * @memberof CB.chat.message\n     * @param {Object} params - Object of parameters.\n     * @param {listMessageCallback} callback - The callback function.\n     * */\n    list: function (params, callback) {\n        /**\n         * Callback for CB.chat.message.list()\n         * @param {Object} error - The error object\n         * @param {Object} messages - The messages object.\n         * @callback listMessageCallback\n         * */\n\n        const ajaxParams = {\n            url: Utils.getUrl(MESSAGES_API_URL),\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    },\n\n    /**\n     * Create message.\n     * @memberof CB.chat.message\n     * @param {Object} params - Object of parameters.\n     * @param {createMessageCallback} callback - The callback function.\n     * */\n    create: function (params, callback) {\n        /**\n         * Callback for CB.chat.message.create()\n         * @param {Object} error - The error object\n         * @param {Object} messages - The message object.\n         * @callback createMessageCallback\n         * */\n\n        const ajaxParams = {\n            url: Utils.getUrl(MESSAGES_API_URL),\n            type: 'POST',\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    },\n\n    /**\n     * Update message.\n     * @memberof CB.chat.message\n     * @param {String} id - The message id.\n     * @param {Object} params - Object of parameters\n     * @param {Number} [params.read] - Mark message as read (read=1)\n     * @param {Number} [params.delivered] - Mark message as delivered (delivered=1)\n     * @param {String} [params.message] - The message's text\n     * @param {updateMessageCallback} callback - The callback function\n     * */\n    update: function (id, params, callback) {\n        /**\n         * Callback for CB.chat.message.update()\n         * @param {Object} error - The error object\n         * @param {Object} response - Empty body.\n         * @callback updateMessageCallback\n         * */\n\n        const ajaxParams = {\n            type: 'PUT',\n            dataType: 'text',\n            url: Utils.getUrl(MESSAGES_API_URL, id),\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    },\n\n    /**\n     * Delete message.\n     * @memberof CB.chat.message\n     * @param {String} id - The message id.\n     * @param {Object} params - Object of parameters.\n     * @param {deleteMessageCallback} callback - The callback function.\n     * */\n    delete: function (id, params_or_callback, callback) {\n        /**\n         * Callback for CB.chat.message.delete()\n         * @param {Object} error - The error object.\n         * @param {String} res - Empty string.\n         * @callback deleteMessageCallback\n         * */\n\n        const ajaxParams = {\n            url: Utils.getUrl(MESSAGES_API_URL, id),\n            type: 'DELETE',\n            dataType: 'text'\n        };\n\n        if (arguments.length === 2) {\n            this.service.ajax(ajaxParams, params_or_callback);\n        } else if (arguments.length === 3) {\n            ajaxParams.data = params_or_callback;\n\n            this.service.ajax(ajaxParams, callback);\n        }\n    },\n\n    /**\n     * Get unread messages counter for one or group of dialogs.\n     * @memberof CB.chat.message\n     * @param {Object} params - Object of parameters.\n     * @param {unreadCountMessageCallback} callback - The callback function.\n     * */\n    unreadCount: function (params, callback) {\n        /**\n         * Callback for CB.chat.message.unreadCount()\n         * @param {Object} error - The error object.\n         * @param {Object} res - The requested dialogs Object.\n         * @callback unreadCountMessageCallback\n         * */\n\n        if (params && params.chat_dialog_ids && Utils.isArray(params.chat_dialog_ids)) {\n            params.chat_dialog_ids = params.chat_dialog_ids.join(', ');\n        }\n\n        const ajaxParams = {\n            url: Utils.getUrl(MESSAGES_API_URL + '/unread'),\n            data: params\n        };\n\n        this.service.ajax(ajaxParams, callback);\n    }\n};\n\nmodule.exports = MessageProxy;\n","'use strict';\n\n/*\n * User's callbacks (listener-functions):\n * - onCallListener(session, extension)\n * - onAcceptCallListener(session, userID, extension)\n * - onRejectCallListener(session, userID, extension)\n * - onStopCallListener(session, userID, extension)\n * - onUpdateCallListener(session, userID, extension)\n * - onInvalidEventsListener (state, session, userID, extension)\n * - onDevicesChangeListener()\n */\n\nvar WebRTCSession = require('./cubeWebRTCSession');\nvar WebRTCSignalingProcessor = require('./cubeWebRTCSignalingProcessor');\nvar WebRTCSignalingProvider = require('./cubeWebRTCSignalingProvider');\nvar Helpers = require('./cubeWebRTCHelpers');\nvar RTCPeerConnection = require('./cubeRTCPeerConnection');\nvar SignalingConstants = require('./cubeWebRTCSignalingConstants');\nvar Utils = require('../cubeInternalUtils');\nvar mediaDevices = require('../cubeDependencies').mediaDevices;\n\nfunction WebRTCClient(service, connection) {\n    if (WebRTCClient.__instance) {\n        return WebRTCClient.__instance;\n    } else if (this === window) {\n        return new WebRTCClient();\n    }\n\n    WebRTCClient.__instance = this;\n\n    // Initialise all properties here\n    this.connection = connection;\n    this.signalingProcessor = new WebRTCSignalingProcessor(service, this, connection);\n    this.signalingProvider = new WebRTCSignalingProvider(service, connection);\n\n    this.SessionConnectionState = Helpers.SessionConnectionState;\n    this.CallType = Helpers.CallType;\n    this.PeerConnectionState = RTCPeerConnection.State;\n\n    this.sessions = {};\n\n    if(mediaDevices){\n      mediaDevices.ondevicechange = this._onDevicesChangeListener.bind(this);\n    }\n}\n\n/**\n * [Return data or all active devices]\n * @param  {String} spec [specify what type of devices you wnat to get.\n *                         Possible values: audioinput, audiooutput, videoinput]\n * @returns {Array}       [array of devices]\n */\nWebRTCClient.prototype.getMediaDevices = function(spec) {\n    var specDevices = [],\n        errMsg = 'Browser does not support output device selection.';\n\n    return new Promise(function(resolve, reject) {\n        if (!mediaDevices || !mediaDevices.enumerateDevices) {\n            reject(errMsg);\n            Helpers.traceWarning(errMsg);\n        } else {\n            mediaDevices.enumerateDevices().then(function(devices) {\n                if(spec) {\n                    devices.forEach(function(device, i) {\n                        if(device.kind === spec) {\n                            specDevices.push(device);\n                        }\n                    });\n\n                    resolve(specDevices);\n                } else {\n                    resolve(devices);\n                }\n            });\n        }\n    });\n};\n\n/**\n * A map with all sessions the user had/have.\n * @type {Object.<string, Object>}\n */\nWebRTCClient.prototype.sessions = {};\n\n/**\n * Creates the new session.\n * @param  {array} opponentsIDs      - Opponents IDs\n * @param  {number} callType          - Call type\n * @param  {object} [opts]\n * @param  {number} [opts.bandwidth=0] - Bandwidth limit (kbps)\n */\nWebRTCClient.prototype.createNewSession = function(opponentsIDs, callType, opts) {\n    var opponentsIdNASessions = getOpponentsIdNASessions(this.sessions),\n        callerID = Helpers.getIdFromNode(Helpers.userCurrentJid(this.connection)),\n        bandwidth = opts && opts.bandwidth && (!isNaN(opts.bandwidth)) ? +opts.bandwidth : 0,\n        isIdentifyOpponents = false;\n\n    if (!opponentsIDs) {\n        throw new Error('Can\\'t create a session without the opponentsIDs.');\n    }\n\n    isIdentifyOpponents = isOpponentsEqual(opponentsIdNASessions, opponentsIDs);\n\n    if (!isIdentifyOpponents) {\n        return this._createAndStoreSession(null, callerID, opponentsIDs, callType, bandwidth);\n    } else {\n        throw new Error('Can\\'t create a session with the same opponentsIDs. There is a session already in NEW or ACTIVE state.');\n    }\n};\n\nWebRTCClient.prototype._createAndStoreSession = function(sessionID, callerID, opponentsIDs, callType, bandwidth) {\n    var newSession = new WebRTCSession({\n        sessionID: sessionID,\n        initiatorID: callerID,\n        opIDs: opponentsIDs,\n        callType: callType,\n        signalingProvider: this.signalingProvider,\n        currentUserID: Helpers.getIdFromNode(Helpers.userCurrentJid(this.connection)),\n        bandwidth: bandwidth\n    });\n\n    /** set callbacks */\n    newSession.onUserNotAnswerListener = this.onUserNotAnswerListener;\n    newSession.onRemoteStreamListener = this.onRemoteStreamListener;\n    newSession.onSessionConnectionStateChangedListener = this.onSessionConnectionStateChangedListener;\n    newSession.onSessionCloseListener = this.onSessionCloseListener;\n    newSession.onCallStatsReport = this.onCallStatsReport;\n\n    this.sessions[newSession.ID] = newSession;\n    return newSession;\n};\n\n/**\n * Deletes a session\n * @param {string} Session ID\n *\n */\nWebRTCClient.prototype.clearSession = function(sessionId) {\n    delete this.sessions[sessionId];\n};\n\n/**\n * Check all session and find session with status 'NEW' or 'ACTIVE' which ID != provided\n * @param {string} session ID\n * @returns {boolean} if active or new session exist\n */\nWebRTCClient.prototype.isExistNewOrActiveSessionExceptSessionID = function(sessionID) {\n    var self = this;\n    var exist = false;\n\n    if (Object.keys(self.sessions).length > 0) {\n        Object.keys(self.sessions).forEach(function(key, i, arr) {\n            var session = self.sessions[key];\n            if (session.state === WebRTCSession.State.NEW || session.state === WebRTCSession.State.ACTIVE) {\n                if (session.ID !== sessionID) {\n                    exist = true;\n                    // break; // break doesn't work in 'forEach', need to find another way\n                }\n            }\n        });\n    }\n\n    return exist;\n};\n\n/**\n * DELEGATE (signaling)\n */\nWebRTCClient.prototype._onCallListener = function(userID, sessionID, extension) {\n    var userInfo = extension.userInfo || {};\n\n    Helpers.trace(\"onCall. UserID:\" + userID + \". SessionID: \" + sessionID);\n\n    if (this.isExistNewOrActiveSessionExceptSessionID(sessionID)) {\n        Helpers.trace('User with id ' + userID + ' is busy at the moment.');\n\n        delete extension.sdp;\n        delete extension.platform;\n        extension.sessionID = sessionID;\n\n        this.signalingProvider.sendMessage(userID, extension, SignalingConstants.SignalingType.REJECT);\n\n        if (typeof this.onInvalidEventsListener  === 'function'){\n            Utils.safeCallbackCall(this.onInvalidEventsListener, 'onCall', sessionID, userID, userInfo);\n        }\n    } else {\n        var session = this.sessions[sessionID];\n        var bandwidth = +userInfo.bandwidth || 0;\n\n        if (!session) {\n            session = this._createAndStoreSession(sessionID, extension.callerID, extension.opponentsIDs, extension.callType, bandwidth);\n\n            session.processOnCall(userID, extension);\n\n            if (typeof this.onCallListener === 'function') {\n                Utils.safeCallbackCall(this.onCallListener, session, userInfo);\n            }\n        } else {\n          session.processOnCall(userID, extension);\n        }\n    }\n};\n\nWebRTCClient.prototype._onAcceptListener = function(userID, sessionID, extension) {\n    var session = this.sessions[sessionID],\n        userInfo = extension.userInfo || {};\n\n    Helpers.trace(\"onAccept. UserID:\" + userID + \". SessionID: \" + sessionID);\n\n    if (session) {\n        if (session.state === WebRTCSession.State.ACTIVE) {\n            if (typeof this.onAcceptCallListener === 'function') {\n                Utils.safeCallbackCall(this.onAcceptCallListener, session, userID, userInfo);\n            }\n\n            session.processOnAccept(userID, extension);\n        } else {\n            if (typeof this.onInvalidEventsListener === 'function'){\n                Utils.safeCallbackCall(this.onInvalidEventsListener, 'onAccept', session, userID, userInfo);\n            }\n\n            Helpers.traceWarning(\"Ignore 'onAccept', the session( \" + sessionID + \" ) has invalid state.\");\n        }\n    } else {\n        Helpers.traceError(\"Ignore 'onAccept', there is no information about session \" + sessionID + \" by some reason.\");\n    }\n};\n\nWebRTCClient.prototype._onRejectListener = function(userID, sessionID, extension) {\n    var that = this,\n        session = that.sessions[sessionID];\n\n    Helpers.trace(\"onReject. UserID:\" + userID + \". SessionID: \" + sessionID);\n\n    if (session) {\n        var userInfo = extension.userInfo || {};\n\n        if (typeof this.onRejectCallListener === 'function') {\n            Utils.safeCallbackCall(that.onRejectCallListener, session, userID, userInfo);\n        }\n\n        session.processOnReject(userID, extension);\n    } else {\n        Helpers.traceError(\"Ignore 'onReject', there is no information about session \" + sessionID + \" by some reason.\");\n    }\n};\n\nWebRTCClient.prototype._onStopListener = function(userID, sessionID, extension) {\n    Helpers.trace(\"onStop. UserID:\" + userID + \". SessionID: \" + sessionID);\n\n    var session = this.sessions[sessionID],\n        userInfo = extension.userInfo || {};\n\n    if (session && (session.state === WebRTCSession.State.ACTIVE || session.state === WebRTCSession.State.NEW)) {\n        if (typeof this.onStopCallListener === 'function') {\n            Utils.safeCallbackCall(this.onStopCallListener, session, userID, userInfo);\n        }\n\n        // Need to make this asynchronously, to keep the strophe handler alive\n        setTimeout(session.processOnStop.bind(session), 10, userID, extension);\n    } else {\n        if (typeof this.onInvalidEventsListener === 'function'){\n            Utils.safeCallbackCall(this.onInvalidEventsListener, 'onStop', session, userID, userInfo);\n        }\n\n        Helpers.traceError(\"Ignore 'onStop', there is no information about session \" + sessionID + \" by some reason.\");\n    }\n};\n\nWebRTCClient.prototype._onIceCandidatesListener = function(userID, sessionID, extension) {\n    var session = this.sessions[sessionID];\n\n    Helpers.trace(\"onIceCandidates. UserID:\" + userID + \". SessionID: \" + sessionID + \". ICE candidates count: \" + extension.iceCandidates.length);\n\n    if (session) {\n        if (session.state === WebRTCSession.State.ACTIVE) {\n            session.processOnIceCandidates(userID, extension);\n        } else {\n            Helpers.traceWarning('Ignore \\'OnIceCandidates\\', the session ( ' + sessionID + ' ) has invalid state.');\n        }\n    } else {\n        Helpers.traceError(\"Ignore 'OnIceCandidates', there is no information about session \" + sessionID + \" by some reason.\");\n    }\n};\n\nWebRTCClient.prototype._onUpdateListener = function(userID, sessionID, extension) {\n    var session = this.sessions[sessionID],\n        userInfo = extension.userInfo || {};\n\n    Helpers.trace(\"onUpdate. UserID:\" + userID + \". SessionID: \" + sessionID + \". Extension: \" + JSON.stringify(userInfo));\n\n    if (typeof this.onUpdateCallListener === 'function') {\n        Utils.safeCallbackCall(this.onUpdateCallListener, session, userID, userInfo);\n    }\n};\n\nWebRTCClient.prototype._onDevicesChangeListener = function() {\n    if (typeof this.onDevicesChangeListener === 'function') {\n        Utils.safeCallbackCall(this.onDevicesChangeListener);\n    }\n};\n\nmodule.exports = WebRTCClient;\n\n/**\n * PRIVATE FUNCTIONS\n */\nfunction isOpponentsEqual(exOpponents, currentOpponents) {\n    var ans = false,\n        cOpponents = currentOpponents.sort();\n\n    if (exOpponents.length) {\n        exOpponents.forEach(function(i) {\n            var array = i.sort();\n\n            ans = (array.length == cOpponents.length) && array.every(function(el, index) {\n                return el === cOpponents[index];\n            });\n        });\n    }\n\n    return ans;\n}\n\nfunction getOpponentsIdNASessions(sessions) {\n    var opponents = [];\n\n    if (Object.keys(sessions).length > 0) {\n        Object.keys(sessions).forEach(function(key, i, arr) {\n            var session = sessions[key];\n            if (session.state === WebRTCSession.State.NEW || session.state === WebRTCSession.State.ACTIVE) {\n                opponents.push(session.opponentsIDs);\n            }\n        });\n    }\n\n    return opponents;\n}\n","'use strict';\n\n/**\n * User's callbacks (listener-functions):\n * - onUserNotAnswerListener(session, userID)\n * - onRemoteStreamListener(session, userID, stream)\n * - onSessionConnectionStateChangedListener(session, userID, connectionState)\n * - onSessionCloseListener(session)\n * - onCallStatsReport(session, userId, stats, error)\n */\n\nvar config = require('../cubeConfig');\nvar RTCPeerConnection = require('./cubeRTCPeerConnection');\nvar Utils = require('../cubeInternalUtils');\nvar Helpers = require('./cubeWebRTCHelpers');\nvar SignalingConstants = require('./cubeWebRTCSignalingConstants');\nvar MediaDevicesImpl = require('../cubeDependencies').mediaDevices;\n\n/**\n * State of a session\n */\nWebRTCSession.State = {\n    NEW: 1,\n    ACTIVE: 2,\n    HUNGUP: 3,\n    REJECTED: 4,\n    CLOSED: 5\n};\n\n\n/**\n * Creates a session\n * @param {number} An ID if the call's initiator\n * @param {array} An array with opponents\n * @param {enum} Type of a call\n */\nfunction WebRTCSession(params) {\n    this.ID = params.sessionID ? params.sessionID : generateUUID();\n    this.state = WebRTCSession.State.NEW;\n\n    this.initiatorID = parseInt(params.initiatorID);\n    this.opponentsIDs = params.opIDs;\n    this.callType = parseInt(params.callType);\n\n    this.peerConnections = {};\n\n    this.localStream = null;\n\n    this.mediaParams = null;\n\n    this.signalingProvider = params.signalingProvider;\n\n    this.currentUserID = params.currentUserID;\n\n    this.bandwidth = params.bandwidth;\n\n    /**\n     * We use this timeout to fix next issue:\n     * \"From Android/iOS make a call to Web and kill the Android/iOS app instantly. Web accept/reject popup will be still visible.\n     * We need a way to hide it if sach situation happened.\"\n     */\n    this.answerTimer = null;\n\n    this.startCallTime = 0;\n    this.acceptCallTime = 0;\n}\n\n/**\n * Get the user media stream\n * @param {map} A map media stream constrains\n * @param {function} A callback to get a result of the function\n */\nWebRTCSession.prototype.getUserMedia = function(params, callback) {\n    var self = this;\n\n    /**\n     * Additional parameters for Media Constraints\n     * http://tools.ietf.org/html/draft-alvestrand-constraints-resolution-00\n     *\n     * googEchoCancellation: true\n     * googAutoGainControl: true\n     * googNoiseSuppression: true\n     * googHighpassFilter: true\n     * minWidth: 640\n     * minHeight: 480\n     * maxWidth: 1280\n     * maxHeight: 720\n     * minFrameRate: 60\n     * maxAspectRatio: 1.333\n     */\n\n    MediaDevicesImpl.getUserMedia({\n        audio: params.audio || false,\n        video: params.video || false\n    }).then(function(stream) {\n        self.localStream = stream;\n        self.mediaParams = params;\n\n        if (params.elementId) {\n            self.attachMediaStream(params.elementId, stream, params.options);\n        }\n\n        callback(null, stream);\n    }).catch(function(err) {\n        callback(err, null);\n    });\n};\n\n/**\n * Get the state of connection\n * @param {number} The User Id\n */\nWebRTCSession.prototype.connectionStateForUser = function(userID) {\n    var peerConnection = this.peerConnections[userID];\n\n    if (peerConnection) {\n        return peerConnection.state;\n    }\n\n    return null;\n};\n\n/**\n * Attach media stream to audio/video element\n * @param {string} The Id of an ellement to attach a stream\n * @param {object} The steram to attach\n * @param {object} The additional options\n */\nWebRTCSession.prototype.attachMediaStream = function(id, stream, options) {\n    var elem = document.getElementById(id);\n\n    if (elem) {\n        if (typeof elem.srcObject === 'object') {\n            elem.srcObject = stream;\n        } else {\n            elem.src = window.URL.createObjectURL(stream);\n        }\n\n        if (options && options.muted) {\n            elem.muted = true;\n        }\n\n        if (options && options.mirror) {\n            elem.style.webkitTransform = 'scaleX(-1)';\n            elem.style.transform = 'scaleX(-1)';\n        }\n\n        elem.onloadedmetadata = function(e) {\n            elem.play();\n        };\n    } else {\n        throw new Error('Unable to attach media stream, element ' + id  + ' is undefined');\n    }\n};\n\n/**\n * Detach media stream from audio/video element\n * @param {string} The Id of an element to detach a stream\n */\nWebRTCSession.prototype.detachMediaStream = function(id) {\n    var elem = document.getElementById(id);\n\n    if (elem) {\n        elem.pause();\n\n        if (typeof elem.srcObject === 'object') {\n            elem.srcObject = null;\n        } else {\n            elem.src = '';\n        }\n    }\n};\n\n/**\n * Switch media tracks in audio/video HTML's element and replace its in peers.\n * @param {object} deviceIds - the object with deviceIds of plugged devices\n * @param {string} [deviceIds.audio] - the deviceId, it can be gotten from CB.videochat.getMediaDevices('audioinput')\n * @param {string} [deviceIds.video] - the deviceId, it can be gotten from CB.videochat.getMediaDevices('videoinput')\n * @param {switchMediaTracksCallback} callback - the callback to get a result of the function\n *\n */\nWebRTCSession.prototype.switchMediaTracks = function(deviceIds, callback) {\n    /**\n     * Callback for webRTCSession.switchMediaTracks(deviceIds, callback)\n     * @callback switchMediaTracksCallback\n     * @param {object} error - The error object\n     * @param {object} stream - The stream from new media device\n     */\n\n    var self = this,\n        localStream = this.localStream;\n\n    if (deviceIds && deviceIds.audio) {\n        if(typeof(self.mediaParams.audio) === \"boolean\"){\n            self.mediaParams.audio = {};\n        }\n        self.mediaParams.audio.deviceId = deviceIds.audio;\n    }\n\n    if (deviceIds && deviceIds.video) {\n        if(typeof(self.mediaParams.video) === \"boolean\"){\n            self.mediaParams.video = {};\n        }\n        self.mediaParams.video.deviceId = deviceIds.video;\n    }\n\n    localStream.getTracks().forEach(function(track) {\n        track.stop();\n    });\n\n    MediaDevicesImpl.getUserMedia({\n        audio: self.mediaParams.audio || false,\n        video: self.mediaParams.video || false\n    }).then(function(stream) {\n        self._replaceTracks(stream);\n        callback(null, stream);\n    }).catch(function(error) {\n        callback(error, null);\n    });\n};\n\nWebRTCSession.prototype._replaceTracks = function(stream) {\n    var peers = this.peerConnections,\n        localStream = this.localStream,\n        elementId = this.mediaParams.elementId,\n        ops = this.mediaParams.options,\n        newStreamTracks = stream.getTracks();\n\n    if (!Utils.getEnv().reactnative) {\n      this.detachMediaStream(elementId);\n    }\n\n    newStreamTracks.forEach(function(track) {\n        localStream.addTrack(track);\n    });\n\n    if (!Utils.getEnv().reactnative) {\n      this.attachMediaStream(elementId, stream, ops);\n    }\n\n    if (!Utils.getEnv().reactnative) {\n      for (var userId in peers) {\n          _replaceTracksForPeer(peers[userId]);\n      }\n\n      function _replaceTracksForPeer(peer) {\n          peer.getSenders().map(function(sender) {\n              sender.replaceTrack(newStreamTracks.find(function(track) {\n                  return track.kind === sender.track.kind;\n              }));\n          });\n      }\n    }\n};\n\n/**\n * [Initiate a call]\n * @param  {object}   extension [custom parametrs]\n * @param  {Function} callback\n */\nWebRTCSession.prototype.call = function(extension, callback) {\n    var self = this,\n        ext = _prepareExtension(extension);\n\n    Helpers.trace('Call, extension: ' + JSON.stringify(ext.userInfo));\n\n    self.state = WebRTCSession.State.ACTIVE;\n\n    // create a peer connection for each opponent\n    self.opponentsIDs.forEach(function(userID, i, arr) {\n        self._callInternal(userID, ext, true);\n    });\n\n    if (typeof callback === 'function') {\n        callback(null);\n    }\n};\n\nWebRTCSession.prototype._callInternal = function(userID, extension, withOnNotAnswerCallback) {\n    var self = this;\n    var peer = self._createPeer(userID, 'offer');\n\n    var safariVersion = Helpers.getVersionSafari();\n\n    if (safariVersion && safariVersion >= 11) {\n        self.localStream.getTracks().forEach(function(track) {\n            peer.addTrack(track, self.localStream);\n        });\n    } else {\n        peer.addLocalStream(self.localStream);\n    }\n\n    this.peerConnections[userID] = peer;\n\n    peer.getAndSetLocalSessionDescription(this.callType, function(err) {\n        if (err) {\n            Helpers.trace(\"getAndSessionDescription error: \" + err);\n        } else {\n            Helpers.trace(\"getAndSessionDescription success\");\n            /** let's send call requests to user */\n            peer._startDialingTimer(extension, withOnNotAnswerCallback);\n        }\n    });\n};\n\n/**\n * Accept a call\n * @param {array} A map with custom parameters\n */\nWebRTCSession.prototype.accept = function(extension) {\n    var self = this,\n        ext = _prepareExtension(extension);\n\n    Helpers.trace('Accept, extension: ' + JSON.stringify(ext.userInfo));\n\n    if(self.state === WebRTCSession.State.ACTIVE) {\n        Helpers.traceError(\"Can't accept, the session is already active, return.\");\n        return;\n    }\n\n    if(self.state === WebRTCSession.State.CLOSED) {\n        Helpers.traceError(\"Can't accept, the session is already closed, return.\");\n        self.stop({});\n        return;\n    }\n\n    self.state = WebRTCSession.State.ACTIVE;\n\n    self.acceptCallTime = new Date();\n\n    self._clearAnswerTimer();\n\n    self._acceptInternal(self.initiatorID, ext);\n\n    /** The group call logic starts here */\n    var oppIDs = self._uniqueOpponentsIDsWithoutInitiator();\n\n    /** in a case of group video chat */\n    if(oppIDs.length > 0){\n        var offerTime = (self.acceptCallTime - self.startCallTime) / 1000;\n        self._startWaitingOfferOrAnswerTimer(offerTime);\n\n        /**\n         * here we have to decide to which users the user should call.\n         * We have a rule: If a userID1 > userID2 then a userID1 should call to userID2.\n         */\n        oppIDs.forEach(function(opID, i, arr) {\n            if(self.currentUserID > opID){\n                /** call to the user */\n                self._callInternal(opID, {}, true);\n            }\n        });\n    }\n};\n\nWebRTCSession.prototype._acceptInternal = function(userID, extension) {\n    var self = this;\n\n    /** create a peer connection */\n    var peerConnection = this.peerConnections[userID];\n\n    if (peerConnection) {\n        var safariVersion = Helpers.getVersionSafari();\n\n        if (safariVersion && safariVersion >= 11) {\n            self.localStream.getTracks().forEach(function(track) {\n                peerConnection.addTrack(track, self.localStream);\n            });\n        } else {\n            peerConnection.addLocalStream(self.localStream);\n        }\n\n        peerConnection.setRemoteSessionDescription('offer', peerConnection.getRemoteSDP(), function(error){\n            if(error){\n                Helpers.traceError(\"'setRemoteSessionDescription' error: \" + error);\n            }else{\n                Helpers.trace(\"'setRemoteSessionDescription' success\");\n\n                peerConnection.getAndSetLocalSessionDescription(self.callType, function(err) {\n                    if (err) {\n                        Helpers.trace(\"getAndSetLocalSessionDescription error: \" + err);\n                    } else {\n\n                        extension.sessionID = self.ID;\n                        extension.callType = self.callType;\n                        extension.callerID = self.initiatorID;\n                        extension.opponentsIDs = self.opponentsIDs;\n                        extension.sdp = peerConnection.localDescription.sdp;\n\n                        self.signalingProvider.sendMessage(userID, extension, SignalingConstants.SignalingType.ACCEPT);\n                    }\n                });\n            }\n        });\n    }else{\n        Helpers.traceError(\"Can't accept the call, there is no information about peer connection by some reason.\");\n    }\n};\n\n/**\n * Reject a call\n * @param {array} A map with custom parameters\n */\nWebRTCSession.prototype.reject = function(extension) {\n    var self = this,\n        ext = _prepareExtension(extension);\n    var peersLen = Object.keys(self.peerConnections).length;\n\n    Helpers.trace('Reject, extension: ' + JSON.stringify(ext.userInfo));\n\n    self.state = WebRTCSession.State.REJECTED;\n\n    self._clearAnswerTimer();\n\n    ext.sessionID = self.ID;\n    ext.callType = self.callType;\n    ext.callerID = self.initiatorID;\n    ext.opponentsIDs = self.opponentsIDs;\n\n    if(peersLen > 0){\n        for (var key in self.peerConnections) {\n            var peerConnection = self.peerConnections[key];\n            self.signalingProvider.sendMessage(peerConnection.userID, ext, SignalingConstants.SignalingType.REJECT);\n        }\n    }\n\n    self._close();\n};\n\n/**\n * Stop a call\n * @param {array} A map with custom parameters\n */\nWebRTCSession.prototype.stop = function(extension) {\n    var self = this,\n        ext = _prepareExtension(extension),\n        peersLen = Object.keys(self.peerConnections).length;\n\n    Helpers.trace('Stop, extension: ' + JSON.stringify(ext.userInfo));\n\n    self.state = WebRTCSession.State.HUNGUP;\n\n    if(self.answerTimer) {\n        self._clearAnswerTimer();\n    }\n\n    ext.sessionID = self.ID;\n    ext.callType = self.callType;\n    ext.callerID = self.initiatorID;\n    ext.opponentsIDs = self.opponentsIDs;\n\n    if(peersLen > 0){\n        for (var key in self.peerConnections) {\n            var peerConnection = self.peerConnections[key];\n\n            self.signalingProvider.sendMessage(peerConnection.userID, ext, SignalingConstants.SignalingType.STOP);\n        }\n    }\n\n    self._close();\n};\n\n/**\n * [function close connection with user]\n * @param  {Number} userId [id of user]\n */\nWebRTCSession.prototype.closeConnection = function(userId) {\n    var self = this,\n        peer = this.peerConnections[userId];\n\n    if(!peer) {\n        Helpers.traceWarn('Not found connection with user (' + userId + ')');\n        return false;\n    }\n\n    try {\n        peer.release();\n    } catch (e) {\n        Helpers.traceError(e);\n    } finally {\n        self._closeSessionIfAllConnectionsClosed();\n    }\n};\n\n\n/**\n * Update a call\n * @param {array} A map with custom parameters\n */\nWebRTCSession.prototype.update = function(extension) {\n    var self = this,\n        ext = {};\n\n    Helpers.trace('Update, extension: ' + JSON.stringify(extension));\n\n    if(extension === null){\n        Helpers.trace(\"extension is null, no parameters to update\");\n        return;\n    }\n\n    ext = _prepareExtension(extension);\n    ext.sessionID = this.ID;\n\n    for (var key in self.peerConnections) {\n        var peerConnection = self.peerConnections[key];\n\n        self.signalingProvider.sendMessage(peerConnection.userID, ext, SignalingConstants.SignalingType.PARAMETERS_CHANGED);\n    }\n};\n\n/**\n * Mutes the stream\n * @param {string} what to mute: 'audio' or 'video'\n */\nWebRTCSession.prototype.mute = function(type) {\n    this._muteStream(0, type);\n};\n\n/**\n * Unmutes the stream\n * @param {string} what to unmute: 'audio' or 'video'\n */\nWebRTCSession.prototype.unmute = function(type) {\n    this._muteStream(1, type);\n};\n\n/**\n * DELEGATES (rtc client)\n */\nWebRTCSession.prototype.processOnCall = function(callerID, extension) {\n    var self = this,\n        oppIDs = self._uniqueOpponentsIDs();\n\n    oppIDs.forEach(function(opID, i, arr) {\n        var pConn = self.peerConnections[opID];\n\n        if(pConn){\n            if(opID == callerID){\n                pConn.updateRemoteSDP(extension.sdp);\n\n                /** The group call logic starts here */\n                if(callerID != self.initiatorID && self.state === WebRTCSession.State.ACTIVE){\n                    self._acceptInternal(callerID, {});\n                }\n            }\n        } else {\n            /** create peer connections for each opponent */\n            var peerConnection;\n            if(opID != callerID && self.currentUserID > opID){\n                peerConnection = self._createPeer(opID, 'offer');\n            }else{\n                peerConnection = self._createPeer(opID, 'answer');\n            }\n\n            self.peerConnections[opID] = peerConnection;\n\n            if(opID == callerID){\n                peerConnection.updateRemoteSDP(extension.sdp);\n                self._startAnswerTimer();\n            }\n        }\n    });\n};\n\nWebRTCSession.prototype.processOnAccept = function(userID, extension) {\n    var peerConnection = this.peerConnections[userID];\n\n    if(peerConnection){\n        peerConnection._clearDialingTimer();\n\n        peerConnection.setRemoteSessionDescription('answer', extension.sdp, function(error){\n            if(error){\n                Helpers.traceError(\"'setRemoteSessionDescription' error: \" + error);\n            }else{\n                Helpers.trace(\"'setRemoteSessionDescription' success\");\n            }\n        });\n    }else{\n        Helpers.traceError(\"Ignore 'OnAccept', there is no information about peer connection by some reason.\");\n    }\n};\n\nWebRTCSession.prototype.processOnReject = function(userID, extension) {\n    var peerConnection = this.peerConnections[userID];\n\n    this._clearWaitingOfferOrAnswerTimer();\n\n    if(peerConnection){\n        peerConnection.release();\n    }else{\n        Helpers.traceError(\"Ignore 'OnReject', there is no information about peer connection by some reason.\");\n    }\n\n    this._closeSessionIfAllConnectionsClosed();\n};\n\nWebRTCSession.prototype.processOnStop = function(userID, extension) {\n    var self = this;\n\n    this._clearAnswerTimer();\n\n    /** drop the call if the initiator did it */\n    if (userID === self.initiatorID) {\n        if (Object.keys(self.peerConnections).length) {\n            Object.keys(self.peerConnections).forEach(function(key) {\n                self.peerConnections[key].release();\n            });\n        } else {\n            Helpers.traceError(\"Ignore 'OnStop', there is no information about peer connections by some reason.\");\n        }\n    } else {\n        var pc = self.peerConnections[userID];\n        if (pc) {\n            pc.release();\n        } else {\n            Helpers.traceError(\"Ignore 'OnStop', there is no information about peer connection by some reason.\");\n        }\n    }\n\n    this._closeSessionIfAllConnectionsClosed();\n};\n\nWebRTCSession.prototype.processOnIceCandidates = function(userID, extension) {\n    var peerConnection = this.peerConnections[userID];\n\n    if(peerConnection){\n        peerConnection.addCandidates(extension.iceCandidates);\n    }else{\n        Helpers.traceError(\"Ignore 'OnIceCandidates', there is no information about peer connection by some reason.\");\n    }\n};\n\nWebRTCSession.prototype.processCall = function(peerConnection, ext) {\n    var extension = ext || {};\n\n    extension.sessionID = this.ID;\n    extension.callType = this.callType;\n    extension.callerID = this.initiatorID;\n    extension.opponentsIDs = this.opponentsIDs;\n    extension.sdp = peerConnection.localDescription.sdp;\n\n    //TODO: set bandwidth to the userInfo object\n    extension.userInfo = ext.userInfo || {};\n    extension.userInfo.bandwidth = this.bandwidth;\n\n    this.signalingProvider.sendMessage(peerConnection.userID, extension, SignalingConstants.SignalingType.CALL);\n};\n\nWebRTCSession.prototype.processIceCandidates = function(peerConnection, iceCandidates) {\n    var extension = {};\n\n    extension.sessionID = this.ID;\n    extension.callType = this.callType;\n    extension.callerID = this.initiatorID;\n    extension.opponentsIDs = this.opponentsIDs;\n\n    this.signalingProvider.sendCandidate(peerConnection.userID, iceCandidates, extension);\n};\n\nWebRTCSession.prototype.processOnNotAnswer = function(peerConnection) {\n    Helpers.trace(\"Answer timeout callback for session \" + this.ID + \" for user \" + peerConnection.userID);\n\n    this._clearWaitingOfferOrAnswerTimer();\n\n    peerConnection.release();\n\n    if (typeof this.onUserNotAnswerListener === 'function') {\n        Utils.safeCallbackCall(this.onUserNotAnswerListener, this, peerConnection.userID);\n    }\n\n    this._closeSessionIfAllConnectionsClosed();\n};\n\n/**\n * DELEGATES (peer connection)\n */\nWebRTCSession.prototype._onRemoteStreamListener = function(userID, stream) {\n    if (typeof this.onRemoteStreamListener === 'function') {\n        Utils.safeCallbackCall(this.onRemoteStreamListener, this, userID, stream);\n    }\n};\n\n/**\n * [_onCallStatsReport return statistics about the peer]\n * @param  {number} userId [id of user (callee)]\n * @param  {array} stats  [array of statistics]\n *\n * Fire onCallStatsReport callbacks with parameters(userId, stats, error).\n * If stats will be invalid callback return null and error\n */\nWebRTCSession.prototype._onCallStatsReport = function(userId, stats, error) {\n    if (typeof this.onCallStatsReport === 'function') {\n        Utils.safeCallbackCall(this.onCallStatsReport, this, userId, stats, error);\n    }\n};\n\nWebRTCSession.prototype._onSessionConnectionStateChangedListener = function(userID, connectionState) {\n    if (typeof this.onSessionConnectionStateChangedListener === 'function') {\n        Utils.safeCallbackCall(this.onSessionConnectionStateChangedListener, this, userID, connectionState);\n    }\n};\n\n/**\n * Private\n */\nWebRTCSession.prototype._createPeer = function(userID, peerConnectionType) {\n    if (!RTCPeerConnection) throw new Error('_createPeer error: RTCPeerConnection() is not supported in your browser');\n\n    this.startCallTime = new Date();\n\n    /**\n     * Additional parameters for RTCPeerConnection options\n     * new RTCPeerConnection(pcConfig, options)\n     *\n     * DtlsSrtpKeyAgreement: true\n     * RtpDataChannels: true\n     */\n\n    var pcConfig = {\n        iceServers: _prepareIceServers(config.videochat.iceServers)\n    };\n\n    Helpers.trace(\"_createPeer, iceServers: \" + JSON.stringify(pcConfig));\n\n    var peer = new RTCPeerConnection(pcConfig);\n    peer._init(this, userID, this.ID, peerConnectionType);\n\n    return peer;\n};\n\n/** close peer connection and local stream */\nWebRTCSession.prototype._close = function() {\n    Helpers.trace('_close');\n\n    for (var key in this.peerConnections) {\n        var peer = this.peerConnections[key];\n\n        try {\n            peer.release();\n        } catch (e) {\n            console.warn('Peer close error:', e);\n        }\n    }\n\n    this._closeLocalMediaStream();\n\n    this.state = WebRTCSession.State.CLOSED;\n\n    if (typeof this.onSessionCloseListener === 'function') {\n        Utils.safeCallbackCall(this.onSessionCloseListener, this);\n    }\n};\n\nWebRTCSession.prototype._closeSessionIfAllConnectionsClosed = function() {\n    var isAllConnectionsClosed = true;\n\n    for (var key in this.peerConnections) {\n        var peerCon = this.peerConnections[key],\n            peerState;\n\n        try {\n            /*\n            TODO:\n            Uses RTCPeerConnection.signalingState instead RTCPeerConnection.iceConnectionState,\n            because state 'closed' comes after few time from Safari, but signaling state comes instantly\n            */\n            peerState = peerCon.iceConnectionState === 'closed' ? 'closed' : peerCon.signalingState;\n        } catch(err) {\n            Helpers.traceError(err);\n            // need to set peerState to 'closed' on error. FF will crashed without this part.\n            peerState = 'closed';\n        }\n\n        if (peerState !== 'closed') {\n            isAllConnectionsClosed = false;\n            break;\n        }\n    }\n\n    Helpers.trace(\"All peer connections closed: \" + isAllConnectionsClosed);\n\n    if (isAllConnectionsClosed) {\n        this._closeLocalMediaStream();\n\n        if (typeof this.onSessionCloseListener === 'function') {\n            this.onSessionCloseListener(this);\n        }\n\n        this.state = WebRTCSession.State.CLOSED;\n    }\n};\n\nWebRTCSession.prototype._closeLocalMediaStream = function(){\n    /**\n     * https://developers.google.com/web/updates/2015/07/mediastream-deprecations?hl=en\n     */\n    if (this.localStream) {\n        this.localStream.getAudioTracks().forEach(function (audioTrack) {\n            audioTrack.stop();\n        });\n\n        this.localStream.getVideoTracks().forEach(function (videoTrack) {\n            videoTrack.stop();\n        });\n\n        this.localStream = null;\n    }\n};\n\nWebRTCSession.prototype._muteStream = function(bool, type) {\n    if (type === 'audio' && this.localStream.getAudioTracks().length > 0) {\n        this.localStream.getAudioTracks().forEach(function (track) {\n            track.enabled = !!bool;\n        });\n        return;\n    }\n\n    if (type === 'video' && this.localStream.getVideoTracks().length > 0) {\n        this.localStream.getVideoTracks().forEach(function (track) {\n            track.enabled = !!bool;\n        });\n        return;\n    }\n};\n\nWebRTCSession.prototype._clearAnswerTimer = function(){\n    if(this.answerTimer){\n        Helpers.trace(\"_clearAnswerTimer\");\n        clearTimeout(this.answerTimer);\n        this.answerTimer = null;\n    }\n};\n\nWebRTCSession.prototype._startAnswerTimer = function(){\n    Helpers.trace(\"_startAnswerTimer\");\n\n    var self = this;\n    var answerTimeoutCallback = function (){\n        Helpers.trace(\"_answerTimeoutCallback\");\n\n        if (typeof self.onSessionCloseListener === 'function') {\n            self._close();\n        }\n\n        self.answerTimer = null;\n    };\n\n    var answerTimeInterval = config.videochat.answerTimeInterval*1000;\n    this.answerTimer = setTimeout(answerTimeoutCallback, answerTimeInterval);\n};\n\nWebRTCSession.prototype._clearWaitingOfferOrAnswerTimer = function() {\n    if(this.waitingOfferOrAnswerTimer){\n        Helpers.trace(\"_clearWaitingOfferOrAnswerTimer\");\n        clearTimeout(this.waitingOfferOrAnswerTimer);\n        this.waitingOfferOrAnswerTimer = null;\n    }\n};\n\nWebRTCSession.prototype._startWaitingOfferOrAnswerTimer = function(time) {\n    var self = this,\n        timeout = (config.videochat.answerTimeInterval - time) < 0 ? 1 : config.videochat.answerTimeInterval - time,\n        waitingOfferOrAnswerTimeoutCallback = function() {\n            Helpers.trace(\"waitingOfferOrAnswerTimeoutCallback\");\n\n            if(Object.keys(self.peerConnections).length > 0) {\n                Object.keys(self.peerConnections).forEach(function(key) {\n                    var peerConnection = self.peerConnections[key];\n                    if (peerConnection.state === RTCPeerConnection.State.CONNECTING || peerConnection.state === RTCPeerConnection.State.NEW) {\n                        self.processOnNotAnswer(peerConnection);\n                    }\n                });\n            }\n\n            self.waitingOfferOrAnswerTimer = null;\n        };\n\n    Helpers.trace(\"_startWaitingOfferOrAnswerTimer, timeout: \" + timeout);\n\n    this.waitingOfferOrAnswerTimer = setTimeout(waitingOfferOrAnswerTimeoutCallback, timeout*1000);\n};\n\nWebRTCSession.prototype._uniqueOpponentsIDs = function(){\n    var self = this;\n    var opponents = [];\n\n    if(this.initiatorID !== this.currentUserID){\n        opponents.push(this.initiatorID);\n    }\n\n    this.opponentsIDs.forEach(function(userID, i, arr) {\n        if(userID != self.currentUserID){\n            opponents.push(parseInt(userID));\n        }\n    });\n\n    return opponents;\n};\n\nWebRTCSession.prototype._uniqueOpponentsIDsWithoutInitiator = function(){\n    var self = this;\n    var opponents = [];\n\n    this.opponentsIDs.forEach(function(userID, i, arr) {\n        if(userID != self.currentUserID){\n            opponents.push(parseInt(userID));\n        }\n    });\n\n    return opponents;\n};\n\nWebRTCSession.prototype.toString = function sessionToString() {\n    return 'ID: ' + this.ID + ', initiatorID:  ' + this.initiatorID + ', opponentsIDs: ' + this.opponentsIDs + ', state: ' + this.state + ', callType: ' + this.callType;\n};\n\nfunction generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n}\n\n/**\n * private _prepareExtension - replace property null to empty string\n * return object with property or empty if extension didn't set\n */\nfunction _prepareExtension(extension) {\n    var ext = {};\n\n    try {\n        if ( ({}).toString.call(extension) === '[object Object]' ) {\n            ext.userInfo = extension;\n            ext = JSON.parse( JSON.stringify(ext).replace(/null/g, \"\\\"\\\"\") );\n        } else {\n            throw new Error('Invalid type of \"extension\" object.');\n        }\n    } catch (err) {\n        Helpers.traceWarning(err.message);\n    }\n\n    return ext;\n}\n\nfunction _prepareIceServers(iceServers) {\n    var  iceServersCopy = JSON.parse(JSON.stringify(iceServers));\n\n    Object.keys(iceServersCopy).forEach(function(c, i, a) {\n        if(iceServersCopy[i].hasOwnProperty('url')) {\n            iceServersCopy[i].urls = iceServersCopy[i].url;\n        } else {\n            iceServersCopy[i].url = iceServersCopy[i].urls;\n        }\n    });\n\n    return iceServersCopy;\n}\n\nmodule.exports = WebRTCSession;\n","'use strict';\n\nvar SignalingConstants = require('./cubeWebRTCSignalingConstants');\nvar ChatHelpers = require('../messaging/cubeChatInternalUtils');\n\nfunction WebRTCSignalingProcessor(service, delegate, connection) {\n    var self = this;\n\n    self.service = service;\n    self.delegate = delegate;\n    self.connection = connection;\n\n    this._onMessage = function(from, extraParams, delay, userId) {\n\n        var extension = self._getExtension(extraParams),\n            sessionId = extension.sessionID,\n            signalType = extension.signalType;\n\n        /** cleanup */\n        delete extension.moduleIdentifier;\n        delete extension.sessionID;\n        delete extension.signalType;\n\n        switch (signalType) {\n            case SignalingConstants.SignalingType.CALL:\n                if (typeof self.delegate._onCallListener === 'function'){\n                    self.delegate._onCallListener(userId, sessionId, extension);\n                }\n                break;\n\n            case SignalingConstants.SignalingType.ACCEPT:\n                if (typeof self.delegate._onAcceptListener === 'function'){\n                    self.delegate._onAcceptListener(userId, sessionId, extension);\n                }\n                break;\n\n            case SignalingConstants.SignalingType.REJECT:\n                if (typeof self.delegate._onRejectListener === 'function'){\n                    self.delegate._onRejectListener(userId, sessionId, extension);\n                }\n                break;\n\n            case SignalingConstants.SignalingType.STOP:\n                if (typeof self.delegate._onStopListener === 'function'){\n                    self.delegate._onStopListener(userId, sessionId, extension);\n                }\n                break;\n\n            case SignalingConstants.SignalingType.CANDIDATE:\n                if (typeof self.delegate._onIceCandidatesListener === 'function'){\n                    self.delegate._onIceCandidatesListener(userId, sessionId, extension);\n                }\n                break;\n\n            case SignalingConstants.SignalingType.PARAMETERS_CHANGED:\n                if (typeof self.delegate._onUpdateListener === 'function'){\n                    self.delegate._onUpdateListener(userId, sessionId, extension);\n                }\n                break;\n        }\n    };\n\n    this._getExtension = function(extraParams) {\n        if (!extraParams) {\n            return null;\n        }\n\n        var extension = {}, iceCandidates = [], opponents = [],\n            candidate, opponent, childrenNodes;\n\n        var extraParamsChildNodes = extraParams.childNodes || extraParams.children;\n\n        for (var i = 0, len = extraParamsChildNodes.length; i < len; i++) {\n            const items = extraParamsChildNodes[i].childNodes || extraParamsChildNodes[i].children;\n            const itemTagName = extraParamsChildNodes[i].tagName || extraParamsChildNodes[i].name;\n\n            if (itemTagName === 'iceCandidates') {\n\n                /** iceCandidates */\n                for (var j = 0, len2 = items.length; j < len2; j++) {\n                    candidate = {};\n                    childrenNodes = items[j].childNodes || items[j].children;\n\n                    for (var k = 0, len3 = childrenNodes.length; k < len3; k++) {\n                        var childName = childrenNodes[k].tagName || childrenNodes[k].name;\n                        var childValue = childrenNodes[k].textContent || childrenNodes[k].children[0];\n                        candidate[childName] = childName === 'sdpMLineIndex' ? parseInt(childValue) : childValue;\n                    }\n\n                    iceCandidates.push(candidate);\n                }\n\n            } else if (itemTagName === 'opponentsIDs') {\n                /** opponentsIDs */\n                for (var v = 0, len2v = items.length; v < len2v; v++) {\n                    opponent = items[v].textContent || items[v].children[0];\n                    opponents.push(parseInt(opponent));\n                }\n            } else {\n                if (items.length > 1) {\n                    var nodeTextContentSize = (extraParamsChildNodes[i].textContent || extraParamsChildNodes[i].children[0]).length;\n\n                    if (nodeTextContentSize > 4096) {\n                        var wholeNodeContent = \"\";\n\n                        for (var t=0; t<items.length; ++t) {\n                            wholeNodeContent += (items.textContent || items.children[0]);\n                        }\n                        extension[itemTagName] = wholeNodeContent;\n                    } else {\n                        extension = ChatHelpers._XMLtoJS(extension, itemTagName, extraParamsChildNodes[i]);\n                    }\n                } else {\n                    if (extraParamsChildNodes[i].tagName === 'userInfo') {\n                        extension = ChatHelpers._XMLtoJS(extension, itemTagName, extraParamsChildNodes[i]);\n                    } else {\n                        extension[itemTagName] = extraParamsChildNodes[i].textContent || extraParamsChildNodes[i].children[0];\n                    }\n                }\n            }\n        }\n        if (iceCandidates.length > 0){\n            extension.iceCandidates = iceCandidates;\n        }\n        if (opponents.length > 0){\n            extension.opponentsIDs = opponents;\n        }\n\n        return extension;\n    };\n}\n\nmodule.exports = WebRTCSignalingProcessor;\n","'use strict';\n\nvar Helpers = require('./cubeWebRTCHelpers');\nvar SignalingConstants = require('./cubeWebRTCSignalingConstants');\nvar Utils = require('../cubeInternalUtils');\nvar config = require('../cubeConfig');\nvar ChatHelpers = require('../messaging/cubeChatInternalUtils');\n\nfunction WebRTCSignalingProvider(service, connection) {\n    this.service = service;\n    this.connection = connection;\n}\n\nWebRTCSignalingProvider.prototype.sendCandidate = function(userId, iceCandidates, ext) {\n    var extension = ext || {};\n    extension.iceCandidates = iceCandidates;\n\n    this.sendMessage(userId, extension, SignalingConstants.SignalingType.CANDIDATE);\n};\n\nWebRTCSignalingProvider.prototype.sendMessage = function(userId, ext, signalingType) {\n    var extension = ext || {},\n        self = this,\n        msg, params;\n\n    /** basic parameters */\n    extension.moduleIdentifier = SignalingConstants.MODULE_ID;\n    extension.signalType = signalingType;\n    /** extension.sessionID */\n    /** extension.callType */\n    extension.platform = 'web';\n    /** extension.callerID */\n    /** extension.opponentsIDs */\n    /** extension.sdp */\n\n    if (extension.userInfo && !Object.keys(extension.userInfo).length) {\n        delete extension.userInfo;\n    }\n\n    params = {\n        to: Helpers.getUserJid(userId, config.creds.appId),\n        type: 'headline',\n        id: Utils.getBsonObjectId()\n    };\n\n    msg = ChatHelpers.createMessageStanza(params).c('extraParams', {\n        xmlns: ChatHelpers.MARKERS.CLIENT\n    });\n\n    Object.keys(extension).forEach(function(field) {\n        if (field === 'iceCandidates') {\n            /** iceCandidates */\n            msg = msg.c('iceCandidates');\n            extension[field].forEach(function(candidate) {\n                msg = msg.c('iceCandidate');\n                Object.keys(candidate).forEach(function(key) {\n                    msg = msg.c(key).t(candidate[key]).up();\n                });\n                msg = msg.up();\n            });\n            msg = msg.up();\n        } else if (field === 'opponentsIDs') {\n            /** opponentsIDs */\n            msg = msg.c('opponentsIDs');\n            extension[field].forEach(function(opponentId) {\n                msg = msg.c('opponentID').t(opponentId).up();\n            });\n            msg = msg.up();\n        } else if (typeof extension[field] === 'object') {\n            ChatHelpers._JStoXML(field, extension[field], msg);\n        } else {\n            msg = msg.c(field).t(extension[field]).up();\n        }\n    });\n    msg = msg.up();\n\n    this.connection.send(msg);\n};\n\nmodule.exports = WebRTCSignalingProvider;\n","'use strict';\n\nvar Janus = require('./janus.umd');\nvar Utils = require('../cubeInternalUtils');\nvar coreConfig = require('../cubeConfig');\nvar EventEmitter = require('fbemitter').EventEmitter;\n\nvar EVENT_PARTICIPANT_JOINED = \"participantjoined\";\nvar EVENT_PARTICIPANT_LEFT = \"participantleft\";\nvar EVENT_LOCAL_STREAM = \"localstream\";\nvar EVENT_REMOTE_STREAM = \"remotestream\";\n\n\n/**\n * @class\n * @param {Object} configParams - a set of configuration parameters. The\n *  following parameters are applied:<br>\n * @param {String} configParams.server - (<b>required</b>) the address of the\n *  gateway as a specific address (e.g., http://yourserver:8088 to use\n *  the plain HTTP API or ws://yourserver:8188 for WebSockets).\n * @param {Boolean} configParams.debug - (<i>optional</i>) whether debug should\n *  be enabled on the JavaScript console (true/false). Default is true.\n * @throws \"'server' parameter is mandatory\" error if 'server' parameter is null\n *  or undefined.\n * @throws \"missing adapter.js\" error if the 'adapter.js' is not connected.\n */\nfunction VideoConferencingClient(configParams) {\n  if(!adapter){\n    throw \"Error: in order to use this library please connect adapter.js. More info https://github.com/webrtc/adapter\";\n  }\n\n  this.configs = configParams;\n  if(!this.configs.server){\n    throw \"'server' parameter is mandatory.\";\n  }else{\n    if(this.configs.server.includes(\"http\")){\n      this.configs.server = this.configs.server + \"/janus\";\n    }\n  }\n  if(!this.configs.debug){\n    this.configs.debug = \"all\";\n  }\n\n  this.engine = null;\n  this.videoRoomPlugin = null;\n  this.isOnlyAudio = false;\n  //\n  this.currentDialogId = null;\n  this.remoteFeeds = [];\n  this.remoteJseps = [];\n  this.remoteFeedsAttachingInProgress = [];\n  //\n  this.currentMidiaDeviceId = null;\n  //\n  this.bitrateTimers = [];\n  //\n  this.emitter = new EventEmitter();\n}\n\n/**\n * Attach media stream to HTML 'video' element\n *\n * @static\n * @param {Object} element - HTML 'video' element\n * @param {Object} stream - WebRTC media stream\n */\nVideoConferencingClient.attachMediaStream = function(element, stream) {\n  Janus.attachMediaStream(element, stream);\n};\n\n/**\n *  Get plugged devices\n *\n * @static\n * @param {function} callback - a callback to be notified about result\n *  (with single argument - array of all devices).\n */\nVideoConferencingClient.listDevices = function(callback) {\n  navigator.mediaDevices.enumerateDevices().then(function(devices) {\n    console.debug(devices);\n    callback(devices);\n  }).catch(function(err) {\n    console.error(err);\n    callback([]);\n  });;\n};\n\n/**\n *  Get plugged video input devices only\n *\n * @static\n * @param {function} callback - a callback to be notified about result\n *  (with single argument - array of video input devices).\n */\nVideoConferencingClient.listVideoinputDevices = function(callback) {\n  VideoConferencingClient.listDevices(function(devices){\n    var videoSelect = [];\n    // code sample\n    // https://github.com/webrtc/samples/blob/gh-pages/src/content/devices/input-output/js/main.js#L27\n    for (var i=0; i!==devices.length; ++i) {\n      var deviceInfo = devices[i];\n      if (deviceInfo.kind === 'videoinput') {\n        var videoinputDescription = deviceInfo.label || 'camera ' + (videoSelect.length + 1);\n        var videoinputId = deviceInfo.deviceId;\n        videoSelect.push({\"label\": videoinputDescription, \"deviceId\": videoinputId});\n      }\n    }\n    callback(videoSelect);\n  });\n};\n\nVideoConferencingClient.prototype = {\n\n  /**\n   * Create video session\n   *\n   * @param {Object} callbacks - a set of callbacks to be notified about result,\n   *  namely:<br>\n   * @param {function} callbacks.success - the session was successfully created\n   *  and is ready to be used.\n   * @param {function} callbacks.error - the session was NOT successfully\n   *  created. This callback passes single argument - text description of error.\n   * @param {function} callbacks.destroyed - the session was destroyed and\n   *  can't be used any more.\n   */\n   createSession: function(callbacks) {\n      var self = this;\n\n      Janus.init({debug: this.configs.debug, callback: function() {\n\n        if(!Janus.isWebrtcSupported()) {\n          if(typeof callbacks.error === 'function'){\n            callbacks.error(\"Your browser does not support WebRTC, so you can't use this functionality.\");\n          }\n          return;\n        }\n\n        self.engine = new Janus({\n          server: self.configs.server,\n          iceServers: coreConfig.videochat.iceServers,\n\n          success: function() {\n            if(typeof callbacks.success === 'function'){\n              Utils.safeCallbackCall(callbacks.success);\n            }\n          },\n          error: function(error) {\n            if(typeof callbacks.error === 'function'){\n              Utils.safeCallbackCall(callbacks.error, error);\n            }\n          },\n          destroyed: function() {\n            if(typeof callbacks.destroyed === 'function'){\n              Utils.safeCallbackCall(callbacks.destroyed);\n            }\n          },\n          timeoutSessionCallback: function(){\n            if(typeof callbacks.timeoutSessionCallback === 'function'){\n              Utils.safeCallbackCall(callbacks.timeoutSessionCallback);\n            }\n          }\n        });\n\n      }});\n    },\n\n    /**\n     * Returns the unique session identifier\n     *\n     * @returns {String} unique session identifier or null.\n     */\n    getSessionId: function(){\n      if(this.engine){\n        return this.engine.getSessionId();\n      }\n      return null;\n    },\n\n   /**\n    * Destroy video session\n    *\n    * @param {Object} callbacks - a set of callbacks to be notified about\n    *  result, namely:<br>\n    * @param {function} callbacks.success - the session was successfully\n    *  destroyed and no longer available.\n    * @param {function} callbacks.error - the session was NOT successfully\n    *  destroyed. This callback passes single argument - text description\n    *  of error.\n    */\n    destroySession: function(callbacks) {\n      var self = this;\n      this.engine.destroy({});\n\n      if(typeof callbacks.success === 'function'){\n        Utils.safeCallbackCall(callbacks.success);\n      }\n    },\n\n    /**\n     * Сreate a video conferencing plugin handle.\n     *\n     * @param  {Boolean} isRemote  To pass 'false' when you attach plugin to\n     *  current user and pass 'true' when attach to remote user.\n     * @param  {Number}  userId  To pass 'null' when you attach plugin to\n     *  current user and pass remote user id when attach to remote user.\n     * @param {Object} callbacks - a set of callbacks to be notified about\n     *  result, namely:<br>\n     * @param {function} callbacks.success - the handle was successfully\n     *  created and is ready to be used.\n     * @param {function} callbacks.error - the handle was NOT successfully\n     *  created or some error has occured. The format of error is the following:\n     *  {\"error_code\": \"some integer code\", \"error\": \"some text description\"}.\n     *  Possible values of 'error_code': <br>\n     * <ul>\n     * <li>428: No such feed - can happen when a user joins room and quickly\n     * leaves it so other user tries to subscribe to none existend feed.\n     * Usually, this error can be ignored.</li>\n     * <li>433: Unauthorized - do not have proper rights to join this room.</li>\n     * <li>436: User ID already exists in this room.</li>\n     * <li>400: Some not usual error occured, for example - no connection to\n     *  server. </li>\n     * </ul>\n     *\n     * @param {function} callbacks.consentDialog - this callback is triggered\n     *  just before <b>getUserMedia</b> is called (parameter=<b>true</b>) and\n     *  after it is completed (parameter=<b>false</b>); this means it can be\n     *  used to modify the UI accordingly, e.g., to prompt the user about the\n     *  need to accept the device access consent requests.\n     * @param {function} callbacks.mediaState - this callback is triggered\n     *  when server starts or stops receiving your media: for instance,\n     *  a <b>mediaState</b> with type=audio and on=true means server started\n     *  receiving your audio stream (or started getting them again after\n     *  a pause of more than a second); a mediaState with type=video\n     *  and on=false means server hasn't received any video from you in the\n     *  last second, after a start was detected before; useful to figure out\n     *  when server actually started handling your media, or to detect problems\n     *  on the media path (e.g., media never started, or stopped at some time).\n     * @param {function} callbacks.webrtcState - this callback is triggered\n     *  with a <b>true</b> value when the PeerConnection associated to a handle\n     *  becomes active (so ICE, DTLS and everything else succeeded) from\n     *  the library perspective, while <b>false</b> is triggered when\n     *  the PeerConnection goes down instead; useful to figure out when WebRTC\n     *  is actually up and running between you and server (e.g., to notify\n     *  a user they're actually now active in a conference).\n     * @param {function} callbacks.slowLink - this callback is triggered when\n     *  server reports trouble either sending or receiving media on the\n     *  specified PeerConnection, typically as a consequence of too many NACKs\n     *  received from/sent to the user in the last second: for instance,\n     *  a slowLink with uplink=true means you notified several missing packets\n     *  from server, while uplink=false means server is not receiving all your\n     *  packets; useful to figure out when there are problems on the media\n     *  path (e.g., excessive loss), in order to possibly react accordingly\n     *  (e.g., decrease the bitrate if most of our packets are getting lost).\n     * @param {function} callbacks.oncleanup - the WebRTC PeerConnection with\n     *  the plugin was closed.\n     */\n    attachVideoConferencingPlugin: function(isRemote, userId, callbacks){\n      var self = this;\n      var remoteFeed = null;\n\n      this.engine.attach({\n        plugin: \"janus.plugin.videoroom\",\n        success: function(pluginHandle) {\n          if(isRemote){\n            remoteFeed = pluginHandle;\n            remoteFeed.userId = userId;\n            self.remoteFeedsAttachingInProgress[userId] = remoteFeed;\n\n            // join remote's feed (listen)\n            var listen = { \"request\": \"join\", \"room\": self.currentDialogId,\n                        \"ptype\": \"listener\", \"feed\": userId};\n\n            // If the publisher is VP8 and this is Safari, let's avoid video\n            if(adapter.browserDetails.browser === \"safari\") {\n              listen[\"offer_video\"] = false;\n            }\n\n            remoteFeed.send({\"message\": listen});\n          }else{\n            self.videoRoomPlugin = pluginHandle;\n          }\n\n          if(typeof callbacks.success === 'function'){\n            Utils.safeCallbackCall(callbacks.success);\n          }\n        },\n        error: function(error) {\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, Utils.wrapError(error));\n          }\n        },\n        consentDialog: function(on) {\n          if(typeof callbacks.consentDialog === 'function'){\n            Utils.safeCallbackCall(callbacks.consentDialog, on);\n          }\n        },\n        mediaState: function(medium, on) {\n          if(typeof callbacks.mediaState === 'function'){\n            Utils.safeCallbackCall(callbacks.mediaState, medium, on);\n          }\n        },\n        webrtcState: function(on) {\n          if(typeof callbacks.webrtcState === 'function'){\n            Utils.safeCallbackCall(callbacks.webrtcState, on);\n          }\n        },\n        slowLink: function(uplink, nacks){\n          if(typeof callbacks.slowLink === 'function'){\n            Utils.safeCallbackCall(callbacks.slowLink, uplink, nacks);\n          }\n        },\n        iceState: function(iceConnectionState){\n          if(typeof callbacks.iceState === 'function'){\n            Utils.safeCallbackCall(callbacks.iceState, iceConnectionState);\n          }\n        },\n        onmessage: function(msg, jsep) {\n          var event = msg[\"videoroom\"];\n\n          // remote feed\n          if(isRemote){\n            if(event) {\n              // Remote feed attached\n              if(event === \"attached\") {\n                var feedId = msg[\"id\"];\n                self.remoteFeeds[feedId] = self.remoteFeedsAttachingInProgress[feedId];\n                self.remoteFeedsAttachingInProgress[feedId] = null;\n              }else if(msg[\"error\"]) {\n                // #define VIDEOROOM_ERROR_NO_SUCH_FEED\t\t428\n                //\n                if(typeof callbacks.error === 'function'){\n                  Utils.safeCallbackCall(callbacks.error, Utils.wrapError(msg[\"error\"]));\n                }\n              }\n            }\n\n            if(jsep) {\n              var feedId = msg[\"id\"];\n\n              // ICE restart case\n              if(!feedId){\n              }\n\n              self.remoteJseps[feedId] = jsep;\n\n              self.createAnswer(self.remoteFeeds[feedId], jsep, {\n                success: function() {\n\n                },\n                error: function(error) {\n                  if(typeof callbacks.error === 'function'){\n                    Utils.safeCallbackCall(callbacks.error, Utils.wrapError(error));\n                  }\n                }\n              });\n            }\n\n          // local feed\n          }else{\n            if(event) {\n              // We JOINED\n              if(event === \"joined\") {\n                self.createOffer({useAudio: true, useVideo: !self.isOnlyAudio}, {\n                  success: function() {\n                    // Any new feed to attach to?\n                    if(msg[\"publishers\"]) {\n                      var publishers = msg[\"publishers\"];\n                      for(var f in publishers) {\n                        var userId = publishers[f][\"id\"];\n                        var userDisplayName = publishers[f][\"display\"];\n                        self.emitter.emit(EVENT_PARTICIPANT_JOINED, userId, userDisplayName);\n                      }\n                    }\n                  },\n                  error: function(error) {\n                    if(typeof callbacks.error === 'function'){\n                      Utils.safeCallbackCall(callbacks.error, Utils.wrapError(error));\n                    }\n                  }\n                });\n\n              // We JOINED and now receiving who is online\n              }else if(event === \"event\") {\n                // Any new feed to attach to?\n                if(msg[\"publishers\"]) {\n                  var publishers = msg[\"publishers\"];\n\n                  for(var f in publishers) {\n                    var userId = publishers[f][\"id\"];\n                    var userDisplayName = publishers[f][\"display\"];\n\n                    self.emitter.emit(EVENT_PARTICIPANT_JOINED, userId, userDisplayName);\n                  }\n\n                // Someone is LEAVING\n                } else if(msg[\"leaving\"]) {\n                  // One of the publishers has gone away?\n                  var feedId = msg[\"leaving\"];\n                  var success = self.detachRemoteFeed(feedId);\n                  if(success) {\n                    self.emitter.emit(EVENT_PARTICIPANT_LEFT, feedId, null);\n                  }\n\n                } else if(msg[\"unpublished\"]) {\n\n                  // One of the publishers has gone away?\n                  var feedId = msg[\"unpublished\"];\n                  if(feedId != 'ok'){\n                    var success = self.detachRemoteFeed(feedId);\n                    if(success){\n                      self.emitter.emit(EVENT_PARTICIPANT_LEFT, feedId, null);\n                    }\n                  }\n\n                } else if(msg[\"error\"]) {\n                  // #define VIDEOROOM_ERROR_ID_EXISTS\t\t\t436\n                  // #define VIDEOROOM_ERROR_UNAUTHORIZED\t\t433\n                  //\n                  if(typeof callbacks.error === 'function'){\n                    Utils.safeCallbackCall(callbacks.error, Utils.wrapError(msg[\"error\"]));\n                  }\n                }\n              }\n            }\n\n            if(jsep) {\n              self.videoRoomPlugin.handleRemoteJsep({jsep: jsep});\n\n              // TODO:\n              // handle wrong or unsupported codecs here...\n              // var video = msg[\"video_codec\"];\n              // if(mystream && mystream.getVideoTracks() && mystream.getVideoTracks().length > 0 && !video) {\n              // \t\t\"Our video stream has been rejected, viewers won't see us\";\n              // }\n\n            }\n\n          }\n        },\n        onlocalstream: function(stream) {\n          self.emitter.emit(EVENT_LOCAL_STREAM, stream);\n        },\n        onremotestream: function(stream) {\n          remoteFeed.stream = stream;\n\n          self.emitter.emit(EVENT_REMOTE_STREAM, stream, remoteFeed.userId);\n        },\n        oncleanup: function() {\n          console.info(\"ON CLEANUP\");\n          if(typeof callbacks.oncleanup === 'function'){\n            Utils.safeCallbackCall(callbacks.oncleanup);\n          }\n        },\n        detached: function() {\n\n        }\n      });\n    },\n\n    /**\n     * Returns the unique plugin identifier\n     *\n     * @returns {String} unique plugin identifier or null.\n     */\n    getPluginId: function(){\n      if(this.videoRoomPlugin){\n        return this.videoRoomPlugin.getId();\n      }\n      return null;\n    },\n\n    /**\n     * Detach a video conferencing plugin handle.\n     *\n     * @param {Object} callbacks - a set of callbacks to be notified about\n     *  result, namely:<br>\n     * @param {function} callbacks.success - the handle was successfully\n     *  destroyed.\n     * @param {function} callbacks.error - the handle was NOT successfully\n     *  destroyed. This callback passes single argument - text description\n     *  of error.\n     */\n    detachVideoConferencingPlugin: function(callbacks){\n      var self = this;\n\n      var clean = function(){\n        self.videoRoomPlugin = null;\n\n        // detach all remote feeds\n        Object.keys(self.remoteFeeds).forEach(function(userId){\n          self.detachRemoteFeed(userId);\n        });\n\n        self.remoteFeeds = [];\n        self.remoteJseps = [];\n\n        self.currentMidiaDeviceId = null;\n      };\n\n      this.videoRoomPlugin.detach({\n        success: function() {\n          clean();\n\n          if(typeof callbacks.success === 'function'){\n            Utils.safeCallbackCall(callbacks.success);\n          }\n        },\n        error: function(error) {\n          clean();\n\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, error);\n          }\n        },\n      });\n    },\n\n    /**\n     * Join video conference room\n     *\n     * @param {String} chatDialogId - a chat dialog ID to join\n     * @param {Number} userId - an id of current user.\n     * @param {Boolean} isOnlyAudio - to join current room as audio-only.\n     * @param {Object} callbacks - a set of callbacks to be notified about\n     *  result, namely:<br>\n     * @param {function} callbacks.success - the chat dialog was successfully\n     *  joined.\n     * @param {function} callbacks.error - the chat dialog was NOT successfully\n     *  joined. This callback passes single argument - text description\n     *  of error.\n     */\n    join: function(chatDialogId, userId, isOnlyAudio, callbacks) {\n      var self = this;\n\n      if(typeof(isOnlyAudio) !== \"boolean\"){\n        throw \"'isOnlyAudio' parameter can be of type 'boolean' only.\";\n      }\n      self.isOnlyAudio = isOnlyAudio;\n      if(adapter.browserDetails.browser === \"safari\") {\n        self.isOnlyAudio = true;\n      }\n\n      console.info(\"isOnlyAudio: \" + self.isOnlyAudio);\n\n      var joinEvent = { \"request\": \"join\", \"room\": chatDialogId,\n                    \"ptype\": \"publisher\", \"id\": userId}; //\"display\": null\n    \tthis.videoRoomPlugin.send({\"message\": joinEvent,\n        success: function(resp) {\n          self.currentDialogId = chatDialogId;\n          self.currentUserId = userId;\n\n          if(typeof callbacks.success === 'function'){\n            Utils.safeCallbackCall(callbacks.success);\n          }\n        },\n        error: function(error) {\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, error);\n          }\n        }\n      });\n    },\n\n    /**\n     * Leave video conference room\n     *\n     * @param {Object} callbacks - a set of callbacks to be notified about\n     *  result, namely:<br>\n     * @param {function} callbacks.success - the chat dialog was successfully\n     *  left.\n     * @param {function} callbacks.error - the chat dialog was NOT successfully\n     *  left. This callback passes single argument - text description of error.\n     */\n    leave: function(callbacks){\n      var self = this;\n\n      console.warn(\"leave\");\n\n      if(!self.engine.isConnected()){\n        if(typeof callbacks.success === 'function'){\n          Utils.safeCallbackCall(callbacks.success);\n        }\n        return;\n      }\n\n      var leaveEvent = { \"request\": \"leave\", \"room\": this.currentDialogId, \"id\": this.currentUserId};\n      if(this.videoRoomPlugin){\n        this.videoRoomPlugin.send({\"message\": leaveEvent});\n      }\n      this.currentDialogId = null;\n      this.currentUserId = null;\n\n      console.warn(\"resp\");\n      if(typeof callbacks.success === 'function'){\n        Utils.safeCallbackCall(callbacks.success);\n      }\n    },\n\n    /**\n     * List online participants\n     *\n     * @param {String} chatDialogId - a chat dialog ID to list online\n     *  participants in.\n     * @param {Object} callbacks - a set of callbacks to be notified about\n     *  result, namely:<br>\n     * @param {function} callbacks.success - when everything is ok and you will\n     *  receive one argument - array of online participants.\n     * @param {function} callbacks.error - when an error occured. This callback\n     *  passes single argument - text description of error.\n     */\n    listOnlineParticipants: function(chatDialogId, callbacks) {\n      var listRequest = {\"request\": \"listparticipants\", \"room\": chatDialogId};\n      //\n      this.videoRoomPlugin.send({\"message\": listRequest,\n        success: function(data) {\n          var participants = [];\n          if(data){\n            participants = data.participants;\n          }\n          if(typeof callbacks.success === 'function'){\n            Utils.safeCallbackCall(callbacks.success, participants);\n          }\n        },\n        error: function(error) {\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, error);\n          }\n        }\n      });\n    },\n\n    /**\n     * Toggle audio mute.\n     *\n     * @returns {Boolean} true if audio is muted, otherwise - false.\n     */\n    toggleAudioMute: function(){\n      var muted = this.videoRoomPlugin.isAudioMuted();\n    \tif(muted){\n    \t\tthis.videoRoomPlugin.unmuteAudio();\n    \t}else{\n    \t\tthis.videoRoomPlugin.muteAudio();\n      }\n      return this.videoRoomPlugin.isAudioMuted();\n    },\n\n    /**\n     * Is audio muted.\n     *\n     * @returns {Boolean} true if audio is muted, otherwise - false.\n     */\n    isAudioMuted: function(){\n      return this.videoRoomPlugin.isAudioMuted();\n    },\n\n    /**\n     * Toggle remote user audio mute.\n     *\n     * @param {Number} userId - an id of user to mute audio.\n     *\n     * @returns {Boolean} true if audio is muted, otherwise - false.\n     */\n    toggleRemoteAudioMute: function(userId){\n      var remoteFeed = this.remoteFeeds[userId];\n      if(!remoteFeed){\n        return false;\n      }\n\n      var audioTracks = remoteFeed.stream.getAudioTracks();\n      if(audioTracks && audioTracks.length > 0) {\n        for(var i=0; i<audioTracks.length; ++i){\n          audioTracks[i].enabled = !audioTracks[i].enabled;\n        }\n        return !audioTracks[0].enabled;\n      }\n\n      return false;\n    },\n\n    /**\n     * Is remote audio muted.\n     *\n     * @param {Number} userId - an id of user to check audio mute\n     *  state.\n     *\n     * @returns {Boolean} true if audio is muted, otherwise - false.\n     */\n    isRemoteAudioMuted: function(userId){\n      var remoteFeed = this.remoteFeeds[userId];\n      if(!remoteFeed){\n        return false;\n      }\n\n      var audioTracks = remoteFeed.stream.getAudioTracks();\n      if(audioTracks && audioTracks.length > 0) {\n        return !audioTracks[0].enabled;\n      }\n\n      return false;\n    },\n\n    /**\n     * Toggle video mute.\n     *\n     * @returns {Boolean} true if video is muted, otherwise - false.\n     */\n    toggleVideoMute: function(){\n        var muted = this.videoRoomPlugin.isVideoMuted();\n        if(muted){\n            this.videoRoomPlugin.unmuteVideo();\n        }else{\n            this.videoRoomPlugin.muteVideo();\n        }\n        return this.videoRoomPlugin.isVideoMuted();\n    },\n\n    /**\n     * Is video muted.\n     *\n     * @returns {Boolean} true if video is muted, otherwise - false.\n     */\n    isVideoMuted: function(){\n        return this.videoRoomPlugin.isVideoMuted();\n    },\n\n    /**\n     * Toggle remote user video mute.\n     *\n     * @param {Number} userId - an id of user to mute video.\n     *\n     * @returns {Boolean} true if video is muted, otherwise - false.\n     */\n    toggleRemoteVideoMute: function(userId){\n        var remoteFeed = this.remoteFeeds[userId];\n        if(!remoteFeed){\n            return false;\n        }\n\n        var videoTracks = remoteFeed.stream.getVideoTracks();\n        if(videoTracks && videoTracks.length > 0) {\n            for(var i=0; i<videoTracks.length; ++i){\n                videoTracks[i].enabled = !videoTracks[i].enabled;\n            }\n            return !videoTracks[0].enabled;\n        }\n\n        return false;\n    },\n\n    /**\n     * Is remote video muted.\n     *\n     * @param {Number} userId - an id of user to check video mute\n     *  state.\n     *\n     * @returns {Boolean} true if video is muted, otherwise - false.\n     */\n    isRemoteVideoMuted: function(userId){\n        var remoteFeed = this.remoteFeeds[userId];\n        if(!remoteFeed){\n            return false;\n        }\n\n        var videoTracks = remoteFeed.stream.getVideoTracks();\n        if(videoTracks && videoTracks.length > 0) {\n            return !videoTracks[0].enabled;\n        }\n\n        return false;\n    },\n\n    /**\n     * Switch video input source.\n     *\n     * @param {String} mediaDeviceId - an id of media device (camera) to switch to.\n     *  Can be obtained via 'VideoConferencingClient.listVideoinputDevices'.\n     * @param {Object} callbacks - a set of callbacks to be notified about\n     *  result, namely:<br>\n     * @param {function} callbacks.success - when everything is ok.\n     * @param {function} callbacks.error - when an error occured. This callback\n     *  passes single argument - text description of error.\n     */\n    switchVideoinput: function(mediaDeviceId, callbacks){\n\n      if(!this.videoRoomPlugin){\n        if(typeof callbacks.error === 'function'){\n          Utils.safeCallbackCall(callbacks.error, \"No active stream\");\n        }\n        return;\n      }\n\n      if(this.isOnlyAudio){\n        throw \"Can't switch video input in audio only call.\";\n      }\n\n      this.currentMidiaDeviceId = null;\n\n      var self = this;\n\n      this.createOffer({video: {deviceId: mediaDeviceId}, replaceVideo: true}, {\n        success: function() {\n          console.info(\"switchVideoinput: success\");\n\n          self.currentMidiaDeviceId = mediaDeviceId;\n\n          if(typeof callbacks.success === 'function'){\n            Utils.safeCallbackCall(callbacks.success);\n          }\n        },\n        error: function(error){\n          console.info(\"switchVideoinput: error\", error);\n\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, error);\n          }\n        }\n      });\n    },\n\n    /**\n     * Initiate ICE restart for remote peer.\n     * These are typically needed whenever something in your network changes\n     * (e.g., you move from WiFi to mobile or a different WiFi) but want to\n     * keep the conversation going: in this case, an ICE restart needs to take\n     * place, as the peers need to exchange the new candidates they can be\n     * reached on.\n     *\n     * @param {Number} userIdOrCallbacks - an id of user to initiate ICE restart with or callbacks if it's a local peer.\n     * @param {function} callbacks.success - when everything is ok.\n     * @param {function} callbacks.error - when an error occured. This callback\n     *  passes single argument - text description of error.\n     */\n    iceRestart: function(userIdOrCallbacks, callbacks){\n      // remote ICE restart\n      if(callbacks){\n        console.info(\"Performing remote ICE restart for user: \", userIdOrCallbacks);\n\n        var remoteFeed = this.remoteFeeds[userIdOrCallbacks];\n\n        if(!remoteFeed){\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, \"No such user feed\");\n          }\n          return;\n        }\n\n        var req = {\"request\": \"configure\", \"restart\": true};\n        remoteFeed.send({\"message\": req});\n\n        if(typeof callbacks.success === 'function'){\n          Utils.safeCallbackCall(callbacks.success);\n        }\n\n      // local ICE restart\n      }else{\n        console.info(\"Performing local ICE restart\");\n\n        this.createOffer({iceRestart: true}, {\n          success: function() {\n            if(typeof userIdOrCallbacks.success === 'function'){\n              Utils.safeCallbackCall(userIdOrCallbacks.success);\n            }\n          },\n          error: function(error){\n            if(typeof userIdOrCallbacks.error === 'function'){\n              Utils.safeCallbackCall(userIdOrCallbacks.error, error);\n            }\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    createOffer: function(inputParams, callbacks){\n      console.log(\"createOffer, inputParams: \", inputParams);\n      var self = this;\n\n      var useAudio = inputParams.useAudio;\n      var useVideo = inputParams.useVideo;\n      var stream = inputParams.stream;\n      var replaceVideo = inputParams.replaceVideo;\n      var iceRestart = inputParams.iceRestart;\n\n      var videoQuality = self.configs.video ? self.configs.video.quality : null;\n      var videoFrameRate = self.configs.video ? self.configs.video.frameRate : null;\n\n      var params;\n      if(stream){\n          params = {stream: stream};\n      }else if(replaceVideo){\n          params = {media: inputParams};\n          if (videoQuality) {\n              params[\"media\"][\"video\"] = videoQuality;\n          }\n          if (videoFrameRate){\n              params[\"media\"][\"videoFrameRate\"] = {min: videoFrameRate, max: videoFrameRate}\n          }\n      }else if(iceRestart){\n          params = inputParams;\n      }else{\n          params = {media: {audioRecv: false,\n                            videoRecv: false,\n                            audioSend: useAudio,\n                            videoSend: useVideo}}; // Publishers are sendonly\n          if (videoQuality) {\n              params[\"media\"][\"video\"] = videoQuality;\n          }\n          if (videoFrameRate){\n              params[\"media\"][\"videoFrameRate\"] = {min: videoFrameRate, ideal: videoFrameRate}\n          }\n      }\n\n      console.info(\"createOffer params: \", params);\n\n      params.success = function(jsep) {\n          var publish = {\"request\": \"configure\"};\n          if(replaceVideo || iceRestart){\n            // publish[\"update\"] = true;\n          }else{\n            publish[\"audio\"] = useAudio;\n            publish[\"video\"] = useVideo;\n          }\n          console.info(\"createOffer publish: \", publish);\n\n          self.videoRoomPlugin.send({\"message\": publish, \"jsep\": jsep});\n\n          if(typeof callbacks.success === 'function'){\n              callbacks.success();\n          }\n      };\n\n      params.error = function(error) {\n          console.error(\"Error in createOffer: \", error);\n          if (useAudio) {\n              self.createOffer({useAudio: false, useVideo: false}, callbacks);\n          } else {\n              if(typeof callbacks.error === 'function'){\n                  callbacks.error(error);\n              }\n          }\n      };\n\n      this.videoRoomPlugin.createOffer(params);\n    },\n\n    /**\n     * @private\n     */\n    createAnswer: function(remoteFeed, jsep, callbacks){\n      var self = this;\n\n      remoteFeed.createAnswer({\n\t\t\t\tjsep: jsep,\n\t\t\t\tmedia: { audioSend: false, videoSend: false },\t// We want recvonly audio/video\n\t\t\t\tsuccess: function(jsep) {\n\t\t\t\t\tvar body = { \"request\": \"start\", \"room\": self.currentDialogId};\n\t\t\t\t\tremoteFeed.send({\"message\": body, \"jsep\": jsep});\n\n          if(typeof callbacks.success === 'function'){\n            Utils.safeCallbackCall(callbacks.success);\n          }\n\t\t\t\t},\n\t\t\t\terror: function(error) {\n          console.error(\"createAnswer error: \", error);\n          if(typeof callbacks.error === 'function'){\n            Utils.safeCallbackCall(callbacks.error, error);\n          }\n\t\t\t\t}\n\t\t\t});\n    },\n\n    /**\n     * @private\n     */\n    detachRemoteFeed: function(userId){\n      var remoteFeed = this.remoteFeeds[userId];\n      if(remoteFeed) {\n        remoteFeed.detach();\n        this.remoteFeeds[userId] = null;\n        this.remoteJseps[userId] = null;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Start show a verbose description of the user's stream bitrate.\n     * Refresh it every 1 second.\n     *\n     * @param {Number} userId - an id of user to gets stream bitrate.\n     * @param {Object} element - DOM element to display bitrate on.\n     */\n    showBitrate: function(userId, element){\n      var remoteFeed = this.remoteFeeds[userId];\n\n      if(adapter.browserDetails.browser === \"chrome\" || adapter.browserDetails.browser === \"firefox\") {\n        this.bitrateTimers[userId] = setInterval(function() {\n          var bitrate = remoteFeed.getBitrate();\n          element.text(bitrate);\n        }, 1000);\n      }\n    },\n\n    /**\n     * Stop show a verbose description of the user's stream bitrate.\n     *\n     * @param {Number} userId - an id of user to stop show stream\n     * bitrate.\n     * @param {Object} element - DOM element to stop display bitrate on.\n     */\n    hideBitrate: function(userId, element){\n      if(this.bitrateTimers[userId]){\n        clearInterval(this.bitrateTimers[userId]);\n      }\n      this.bitrateTimers[userId] = null;\n      element.text = null;\n    },\n\n    /**\n     * Adds a listener to be invoked when events of the specified type are\n     * emitted. The data arguments emitted will be passed to the listener\n     * function. <br>\n     * Possible events:\n     * <ul>\n     * <li>'participantjoined': (userId, userDisplayName)</li>\n     * <li>'participantleft': (userId, userDisplayName)</li>\n     * <li>'localstream': (stream)</li>\n     * <li>'remotestream': (stream, userId)</li>\n     * </ul>\n     *\n     * @param {String} eventType - Name of the event to listen to\n     * @param {function} listener - Function to invoke when the specified\n     *  event is emitted\n     */\n    on: function(eventType, listener){\n      var token = this.emitter.addListener(eventType, listener);\n    },\n\n    /**\n     * Removes all of the registered listeners.\n     *\n     * @param {?String} eventType - Optional name of the event whose registered\n     *   listeners to remove.\n     */\n    removeAllListeners: function(eventType){\n      if(eventType){\n        this.emitter.removeAllListeners(eventType);\n      }else{\n        this.emitter.removeAllListeners();\n      }\n    }\n};\n\nmodule.exports = {Client: VideoConferencingClient};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Janus = factory());\n}(this, (function () {\n\n/* eslint-disable */\n/*\n * Module shim for rollup.js to work with.\n * Simply re-export Janus from janus.js, the real 'magic' is in the rollup config.\n *\n * Since this counts as 'autogenerated' code, ESLint is instructed to ignore the contents of this file when linting your project.\n */\n\n/*\n\tThe MIT License (MIT)\n\n\tCopyright (c) 2016 Meetecho\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the \"Software\"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\tOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\tTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\tOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\tARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\tOTHER DEALINGS IN THE SOFTWARE.\n */\n\n// List of sessions\nJanus.sessions = {};\n\n// Screensharing Chrome Extension ID\nJanus.extensionId = \"hapfgfdkleiggjjpfpenajgdnfckjpaj\";\nJanus.isExtensionEnabled = function() {\n\tif(window.navigator.userAgent.match('Chrome')) {\n\t\tvar chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n\t\tvar maxver = 33;\n\t\tif(window.navigator.userAgent.match('Linux'))\n\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\tif(chromever >= 26 && chromever <= maxver) {\n\t\t\t// Older versions of Chrome don't support this extension-based approach, so lie\n\t\t\treturn true;\n\t\t}\n\t\treturn Janus.checkJanusExtension();\n\t} else {\n\t\t// Firefox of others, no need for the extension (but this doesn't mean it will work)\n\t\treturn true;\n\t}\n};\n\nJanus.useDefaultDependencies = function (deps) {\n\tvar f = (deps && deps.fetch) || fetch;\n\tvar p = (deps && deps.Promise) || Promise;\n\tvar socketCls = (deps && deps.WebSocket) || WebSocket;\n\treturn {\n\t\tnewWebSocket: function(server, proto) { return new socketCls(server, proto); },\n\t\tisArray: function(arr) { return Array.isArray(arr); },\n\t\tcheckJanusExtension: function() { return document.querySelector('#janus-extension-installed') !== null; },\n\t\twebRTCAdapter: (deps && deps.adapter) || adapter,\n\t\thttpAPICall: function(url, options) {\n\t\t\tvar fetchOptions = {method: options.verb, cache: 'no-cache'};\n\t\t\tif(options.withCredentials !== undefined) {\n\t\t\t\tfetchOptions.credentials = options.withCredentials === true ? 'include' : (options.withCredentials ? options.withCredentials : 'omit');\n\t\t\t}\n\t\t\tif(options.body !== undefined) {\n\t\t\t\tfetchOptions.body = JSON.stringify(options.body);\n\t\t\t}\n\n\t\t\tvar fetching = f(url, fetchOptions).catch(function(error) {\n\t\t\t\treturn p.reject({message: 'Probably a network error, is the gateway down?', error: error});\n\t\t\t});\n\n\t\t\t/*\n\t\t\t * fetch() does not natively support timeouts.\n\t\t\t * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n\t\t\t */\n\n\t\t\tif(options.timeout !== undefined) {\n\t\t\t\tvar timeout = new p(function(resolve, reject) {\n\t\t\t\t\tvar timerId = setTimeout(function() {\n\t\t\t\t\t\tclearTimeout(timerId);\n\t\t\t\t\t\treturn reject({message: 'Request timed out', timeout: options.timeout});\n\t\t\t\t\t}, options.timeout);\n\t\t\t\t});\n\t\t\t\tfetching = p.race([fetching,timeout]);\n\t\t\t}\n\n\t\t\tfetching.then(function(response) {\n\t\t\t\tif(response.ok) {\n\t\t\t\t\tif(typeof(options.success) === typeof(Janus.noop)) {\n\t\t\t\t\t\treturn response.json().then(function(parsed) {\n\t\t\t\t\t\t\toptions.success(parsed);\n\t\t\t\t\t\t}).catch(function(error) {\n\t\t\t\t\t\t\treturn p.reject({message: 'Failed to parse response body', error: error, response: response});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn p.reject({message: 'API call failed', response: response});\n\t\t\t\t}\n\t\t\t}).catch(function(error) {\n\t\t\t\tif(typeof(options.error) === typeof(Janus.noop)) {\n\t\t\t\t\toptions.error(error.message || '<< internal error >>', error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fetching;\n\t\t}\n\t}\n};\n\nJanus.useOldDependencies = function (deps) {\n\tvar jq = (deps && deps.jQuery) || jQuery;\n\tvar socketCls = (deps && deps.WebSocket) || WebSocket;\n\treturn {\n\t\tnewWebSocket: function(server, proto) { return new socketCls(server, proto); },\n\t\tisArray: function(arr) { return jq.isArray(arr); },\n\t\tcheckJanusExtension: function() { return jq('#janus-extension-installed').length > 0; },\n\t\twebRTCAdapter: (deps && deps.adapter) || adapter,\n\t\thttpAPICall: function(url, options) {\n\t\t\tvar payload = options.body !== undefined ? {\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tdata: JSON.stringify(options.body)\n\t\t\t} : {};\n\t\t\tvar credentials = options.withCredentials !== undefined ? {xhrFields: {withCredentials: options.withCredentials}} : {};\n\n\t\t\treturn jq.ajax(jq.extend(payload, credentials, {\n\t\t\t\turl: url,\n\t\t\t\ttype: options.verb,\n\t\t\t\tcache: false,\n\t\t\t\tdataType: 'json',\n\t\t\t\tasync: options.async,\n\t\t\t\ttimeout: options.timeout,\n\t\t\t\tsuccess: function(result) {\n\t\t\t\t\tif(typeof(options.success) === typeof(Janus.noop)) {\n\t\t\t\t\t\toptions.success(result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(xhr, status, err) {\n\t\t\t\t\tif(typeof(options.error) === typeof(Janus.noop)) {\n\t\t\t\t\t\toptions.error(status, err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\t};\n};\n\nJanus.noop = function() {};\n\n// Initialization\nJanus.init = function(options) {\n\toptions = options || {};\n\toptions.callback = (typeof options.callback == \"function\") ? options.callback : Janus.noop;\n\tif(Janus.initDone === true) {\n\t\t// Already initialized\n\t\toptions.callback();\n\t} else {\n\t\tif(typeof console == \"undefined\" || typeof console.log == \"undefined\")\n\t\t\tconsole = { log: function() {} };\n\t\t// Console logging (all debugging disabled by default)\n\t\tJanus.trace = Janus.noop;\n\t\tJanus.debug = Janus.noop;\n\t\tJanus.vdebug = Janus.noop;\n\t\tJanus.log = Janus.noop;\n\t\tJanus.warn = Janus.noop;\n\t\tJanus.error = Janus.noop;\n\t\tif(options.debug === true || options.debug === \"all\") {\n\t\t\t// Enable all debugging levels\n\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\tJanus.log = console.log.bind(console);\n\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\tJanus.error = console.error.bind(console);\n\t\t} else if(Array.isArray(options.debug)) {\n\t\t\tfor(var i in options.debug) {\n\t\t\t\tvar d = options.debug[i];\n\t\t\t\tswitch(d) {\n\t\t\t\t\tcase \"trace\":\n\t\t\t\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"debug\":\n\t\t\t\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"vdebug\":\n\t\t\t\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\tJanus.log = console.log.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"warn\":\n\t\t\t\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\tJanus.error = console.error.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error(\"Unknown debugging option '\" + d + \"' (supported: 'trace', 'debug', 'vdebug', 'log', warn', 'error')\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tJanus.log(\"Initializing library\");\n\n\t\tvar usedDependencies = options.dependencies || Janus.useDefaultDependencies();\n\t\tJanus.isArray = usedDependencies.isArray;\n\t\tJanus.webRTCAdapter = usedDependencies.webRTCAdapter;\n\t\tJanus.httpAPICall = usedDependencies.httpAPICall;\n\t\tJanus.checkJanusExtension = usedDependencies.checkJanusExtension;\n\t\tJanus.newWebSocket = usedDependencies.newWebSocket;\n\n\t\t// Helper method to enumerate devices\n\t\tJanus.listDevices = function(callback, config) {\n\t\t\tcallback = (typeof callback == \"function\") ? callback : Janus.noop;\n\t\t\tif (config == null) config = { audio: true, video: true };\n\t\t\tif(navigator.mediaDevices) {\n\t\t\t\tnavigator.mediaDevices.getUserMedia(config)\n\t\t\t\t.then(function(stream) {\n\t\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\n\t\t\t\t\t\tJanus.debug(devices);\n\t\t\t\t\t\tcallback(devices);\n\t\t\t\t\t\t// Get rid of the now useless stream\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar tracks = stream.getTracks();\n\t\t\t\t\t\t\tfor(var i in tracks) {\n\t\t\t\t\t\t\t\tvar mst = tracks[i];\n\t\t\t\t\t\t\t\tif(mst !== null && mst !== undefined)\n\t\t\t\t\t\t\t\t\tmst.stop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(e) {}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\tJanus.error(err);\n\t\t\t\t\tcallback([]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tJanus.warn(\"navigator.mediaDevices unavailable\");\n\t\t\t\tcallback([]);\n\t\t\t}\n\t\t};\n\t\t// Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n\t\tJanus.attachMediaStream = function(element, stream) {\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\tif(chromever >= 43) {\n\t\t\t\t\telement.srcObject = stream;\n\t\t\t\t} else if(typeof element.src !== 'undefined') {\n\t\t\t\t\telement.src = URL.createObjectURL(stream);\n\t\t\t\t} else {\n\t\t\t\t\tJanus.error(\"Error attaching stream to element\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.srcObject = stream;\n\t\t\t}\n\t\t};\n\t\tJanus.reattachMediaStream = function(to, from) {\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\tif(chromever >= 43) {\n\t\t\t\t\tto.srcObject = from.srcObject;\n\t\t\t\t} else if(typeof to.src !== 'undefined') {\n\t\t\t\t\tto.src = from.src;\n\t\t\t\t} else {\n\t\t\t\t\tJanus.error(\"Error reattaching stream to element\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tto.srcObject = from.srcObject;\n\t\t\t}\n\t\t};\n\t\t// Detect tab close: make sure we don't loose existing onbeforeunload handlers\n\t\tvar oldOBF = window.onbeforeunload;\n\t\twindow.onbeforeunload = function() {\n\t\t\tJanus.log(\"Closing window\");\n\t\t\tfor(var s in Janus.sessions) {\n\t\t\t\tif(Janus.sessions[s] !== null && Janus.sessions[s] !== undefined &&\n\t\t\t\t\t\tJanus.sessions[s].destroyOnUnload) {\n\t\t\t\t\tJanus.log(\"Destroying session \" + s);\n\t\t\t\t\tJanus.sessions[s].destroy({asyncRequest: false});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(oldOBF && typeof oldOBF == \"function\")\n\t\t\t\toldOBF();\n\t\t};\n\t\tJanus.initDone = true;\n\t\toptions.callback();\n\t}\n};\n\n// Helper method to check whether WebRTC is supported by this browser\nJanus.isWebrtcSupported = function() {\n\treturn window.RTCPeerConnection !== undefined && window.RTCPeerConnection !== null &&\n\t\tnavigator.getUserMedia !== undefined && navigator.getUserMedia !== null;\n};\n\n// Helper method to create random identifiers (e.g., transaction)\nJanus.randomString = function(len) {\n\tvar charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tvar randomString = '';\n\tfor (var i = 0; i < len; i++) {\n\t\tvar randomPoz = Math.floor(Math.random() * charSet.length);\n\t\trandomString += charSet.substring(randomPoz,randomPoz+1);\n\t}\n\treturn randomString;\n};\n\n\nfunction Janus(gatewayCallbacks) {\n\tif(Janus.initDone === undefined) {\n\t\tgatewayCallbacks.error(\"Library not initialized\");\n\t\treturn {};\n\t}\n\tif(!Janus.isWebrtcSupported()) {\n\t\tgatewayCallbacks.error(\"WebRTC not supported by this browser\");\n\t\treturn {};\n\t}\n\tJanus.log(\"Library initialized: \" + Janus.initDone);\n\tgatewayCallbacks = gatewayCallbacks || {};\n\tgatewayCallbacks.success = (typeof gatewayCallbacks.success == \"function\") ? gatewayCallbacks.success : Janus.noop;\n\tgatewayCallbacks.error = (typeof gatewayCallbacks.error == \"function\") ? gatewayCallbacks.error : Janus.noop;\n\tgatewayCallbacks.destroyed = (typeof gatewayCallbacks.destroyed == \"function\") ? gatewayCallbacks.destroyed : Janus.noop;\n\tif(gatewayCallbacks.server === null || gatewayCallbacks.server === undefined) {\n\t\tgatewayCallbacks.error(\"Invalid gateway url\");\n\t\treturn {};\n\t}\n\tvar websockets = false;\n\tvar ws = null;\n\tvar wsHandlers = {};\n\tvar wsKeepaliveTimeoutId = null;\n\n\tvar servers = null, serversIndex = 0;\n\tvar server = gatewayCallbacks.server;\n\tif(Janus.isArray(server)) {\n\t\tJanus.log(\"Multiple servers provided (\" + server.length + \"), will use the first that works\");\n\t\tserver = null;\n\t\tservers = gatewayCallbacks.server;\n\t\tJanus.debug(servers);\n\t} else {\n\t\tif(server.indexOf(\"ws\") === 0) {\n\t\t\twebsockets = true;\n\t\t\tJanus.log(\"Using WebSockets to contact Janus: \" + server);\n\t\t} else {\n\t\t\twebsockets = false;\n\t\t\tJanus.log(\"Using REST API to contact Janus: \" + server);\n\t\t}\n\t}\n\tvar iceServers = gatewayCallbacks.iceServers;\n\tif(iceServers === undefined || iceServers === null)\n\t\ticeServers = [{urls: \"stun:stun.l.google.com:19302\"}];\n\tvar iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n\tvar bundlePolicy = gatewayCallbacks.bundlePolicy;\n\t// Whether IPv6 candidates should be gathered\n\tvar ipv6Support = gatewayCallbacks.ipv6;\n\tif(ipv6Support === undefined || ipv6Support === null)\n\t\tipv6Support = false;\n\t// Whether we should enable the withCredentials flag for XHR requests\n\tvar withCredentials = false;\n\tif(gatewayCallbacks.withCredentials !== undefined && gatewayCallbacks.withCredentials !== null)\n\t\twithCredentials = gatewayCallbacks.withCredentials === true;\n\t// Optional max events\n\tvar maxev = null;\n\tif(gatewayCallbacks.max_poll_events !== undefined && gatewayCallbacks.max_poll_events !== null)\n\t\tmaxev = gatewayCallbacks.max_poll_events;\n\tif(maxev < 1)\n\t\tmaxev = 1;\n\t// Token to use (only if the token based authentication mechanism is enabled)\n\tvar token = null;\n\tif(gatewayCallbacks.token !== undefined && gatewayCallbacks.token !== null)\n\t\ttoken = gatewayCallbacks.token;\n\t// API secret to use (only if the shared API secret is enabled)\n\tvar apisecret = null;\n\tif(gatewayCallbacks.apisecret !== undefined && gatewayCallbacks.apisecret !== null)\n\t\tapisecret = gatewayCallbacks.apisecret;\n\t// Whether we should destroy this session when onbeforeunload is called\n\tthis.destroyOnUnload = true;\n\tif(gatewayCallbacks.destroyOnUnload !== undefined && gatewayCallbacks.destroyOnUnload !== null)\n\t\tthis.destroyOnUnload = (gatewayCallbacks.destroyOnUnload === true);\n\n\tvar connected = false;\n\t// var reconnected = false;\n\t// var reconnecting = false;\n\tvar sessionId = null;\n\tvar pluginHandles = {};\n\tvar that = this;\n\tvar retries = 0;\n\tvar transactions = {};\n\tcreateSession(gatewayCallbacks);\n\n\t// Public methods\n\tthis.getServer = function() { return server; };\n\tthis.isConnected = function() { return connected; };\n\tthis.getSessionId = function() { return sessionId; };\n\tthis.destroy = function(callbacks) { destroySession(callbacks); };\n\tthis.attach = function(callbacks) { createHandle(callbacks); };\n\tthis.timeoutSessionCallback = (typeof gatewayCallbacks.timeoutSessionCallback == \"function\") ? gatewayCallbacks.timeoutSessionCallback : Janus.noop;\n\n\tfunction eventHandler() {\n\t\tif(sessionId == null)\n\t\t\treturn;\n\t\tJanus.debug('Long poll...');\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the gateway down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar longpoll = server + \"/\" + sessionId + \"?rid=\" + new Date().getTime();\n\t\tif(maxev !== undefined && maxev !== null)\n\t\t\tlongpoll = longpoll + \"&maxev=\" + maxev;\n\t\tif(token !== null && token !== undefined)\n\t\t\tlongpoll = longpoll + \"&token=\" + token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\tlongpoll = longpoll + \"&apisecret=\" + apisecret;\n\t\tJanus.httpAPICall(longpoll, {\n\t\t\tverb: 'GET',\n\t\t\twithCredentials: withCredentials,\n\t\t\tsuccess: handleEvent,\n\t\t\ttimeout: 60000,\t// FIXME\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\n\t\t\t\tretries++;\n\t\t\t\tif(retries > 3) {\n\t\t\t\t\t// Did we just lose the gateway? :-(\n\t\t\t\t\tconnected = false;\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the gateway (is it down?)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teventHandler();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private event handler: this will trigger plugin callbacks, if set\n\tfunction handleEvent(json, skipTimeout) {\n\t\tretries = 0;\n\t\tif(!websockets && sessionId !== undefined && sessionId !== null && skipTimeout !== true)\n\t\t\tsetTimeout(eventHandler, 200);\n\t\tif(!websockets && Janus.isArray(json)) {\n\t\t\t// We got an array: it means we passed a maxev > 1, iterate on all objects\n\t\t\tfor(var i=0; i<json.length; i++) {\n\t\t\t\thandleEvent(json[i], true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(json[\"janus\"] === \"keepalive\") {\n\t\t\t// Nothing happened\n\t\t\tJanus.vdebug(\"Got a keepalive on session \" + sessionId);\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"ack\") {\n\t\t\t// Just an ack, we can probably ignore\n\t\t\tJanus.debug(\"Got an ack on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif(transaction !== null && transaction !== undefined) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif(reportSuccess !== null && reportSuccess !== undefined) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"success\") {\n\t\t\t// Success!\n\t\t\tJanus.debug(\"Got a success on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif(transaction !== null && transaction !== undefined) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif(reportSuccess !== null && reportSuccess !== undefined) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"webrtcup\") {\n\t\t\t// The PeerConnection with the gateway is up! Notify this\n\t\t\tJanus.debug(\"Got a webrtcup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(true);\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"hangup\") {\n\t\t\t// A plugin asked the core to hangup a PeerConnection on one of our handles\n\t\t\tJanus.debug(\"Got a hangup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(false, json[\"reason\"]);\n\t\t\tpluginHandle.hangup();\n\t\t} else if(json[\"janus\"] === \"detached\") {\n\t\t\t// A plugin asked the core to detach one of our handles\n\t\t\tJanus.debug(\"Got a detached event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\t// Don't warn here because destroyHandle causes this situation.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.detached = true;\n\t\t\tpluginHandle.ondetached();\n\t\t\tpluginHandle.detach();\n\t\t} else if(json[\"janus\"] === \"media\") {\n\t\t\t// Media started/stopped flowing\n\t\t\tJanus.debug(\"Got a media event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.mediaState(json[\"type\"], json[\"receiving\"]);\n\t\t} else if(json[\"janus\"] === \"slowlink\") {\n\t\t\tJanus.debug(\"Got a slowlink event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\t// Trouble uplink or downlink\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.slowLink(json[\"uplink\"], json[\"nacks\"]);\n\t\t} else if(json[\"janus\"] === \"error\") {\n\t\t\t// Oops, something wrong happened\n\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif(transaction !== null && transaction !== undefined) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif(reportSuccess !== null && reportSuccess !== undefined) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"event\") {\n\t\t\tJanus.debug(\"Got a plugin event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\tif(plugindata === undefined || plugindata === null) {\n\t\t\t\tJanus.warn(\"Missing plugindata...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tJanus.debug(\"  -- Event is coming from \" + sender + \" (\" + plugindata[\"plugin\"] + \")\");\n\t\t\tvar data = plugindata[\"data\"];\n\t\t\tJanus.debug(data);\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.warn(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar jsep = json[\"jsep\"];\n\t\t\tif(jsep !== undefined && jsep !== null) {\n\t\t\t\tJanus.debug(\"Handling SDP as well...\");\n\t\t\t\tJanus.debug(jsep);\n\t\t\t}\n\t\t\tvar callback = pluginHandle.onmessage;\n\t\t\tif(callback !== null && callback !== undefined) {\n\t\t\t\tJanus.debug(\"Notifying application...\");\n\t\t\t\t// Send to callback specified when attaching plugin handle\n\t\t\t\tcallback(data, jsep);\n\t\t\t} else {\n\t\t\t\t// Send to generic callback (?)\n\t\t\t\tJanus.debug(\"No provided notification callback\");\n\t\t\t}\n\t\t} else if(json[\"janus\"] === \"timeout\") {\n\t\t\tvar sessionId = json[\"session_id\"];\n\t\t\tvar session = Janus.sessions[sessionId];\n\t\t\tif(session){\n\t\t\t\tsession.timeoutSessionCallback();\n\t\t\t}\n\t\t} else {\n\t\t\tJanus.warn(\"Unkown message/event  '\" + json[\"janus\"] + \"' on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t}\n\t}\n\n\t// Private helper to send keep-alive messages on WebSockets\n\tfunction keepAlive() {\n\t\tif(server === null || !websockets || !connected)\n\t\t\treturn;\n\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, 30000);\n\t\tvar request = { \"janus\": \"keepalive\", \"session_id\": sessionId, \"transaction\": Janus.randomString(12) };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tws.send(JSON.stringify(request));\n\t}\n\n\t// Private method to create a session\n\tfunction createSession(callbacks) {\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"create\", \"transaction\": transaction };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(server === null && Janus.isArray(servers)) {\n\t\t\t// We still need to find a working server from the list we were given\n\t\t\tserver = servers[serversIndex];\n\t\t\tif(server.indexOf(\"ws\") === 0) {\n\t\t\t\twebsockets = true;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex+1) + \": trying WebSockets to contact Janus (\" + server + \")\");\n\t\t\t} else {\n\t\t\t\twebsockets = false;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex+1) + \": trying REST API to contact Janus (\" + server + \")\");\n\t\t\t}\n\t\t}\n\t\tif(websockets) {\n\t\t\tws = Janus.newWebSocket(server, 'janus-protocol');\n\t\t\twsHandlers = {\n\t\t\t\t'error': function() {\n\t\t\t\t\tconsole.warn(\"WS error\");\n\n\t\t\t\t\tJanus.error(\"Error connecting to the Janus WebSockets server... \" + server);\n\t\t\t\t\tif (Janus.isArray(servers)) {\n\t\t\t\t\t\tserversIndex++;\n\t\t\t\t\t\tif (serversIndex == servers.length) {\n\t\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the gateway down?\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Let's try the next server\n\t\t\t\t\t\tserver = null;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tcreateSession(callbacks);\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbacks.error(\"Error connecting to the Janus WebSockets server: Is the gateway down?\");\n\t\t\t\t},\n\n\t\t\t\t'open': function() {\n\t\t\t\t\tconsole.warn(\"WS connected\");\n\n\t\t\t\t\t// if(reconnecting){\n\t\t\t\t\t// \treconnecting = false;\n\t\t\t\t\t// \treconnected = true;\n\t\t\t\t\t// \tconsole.warn(\"WS reconnected\");\n\t\t\t\t\t// }\n\n\t\t\t\t\t// if(!reconnected){\n\t\t\t\t\t\t// We need to be notified about the success\n\t\t\t\t\t\ttransactions[transaction] = function(json) {\n\t\t\t\t\t\t\tJanus.debug(json);\n\t\t\t\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, 30000);\n\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\tsessionId = json.data[\"id\"];\n\t\t\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t\t\t\tJanus.sessions[sessionId] = that;\n\t\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\t};\n\t\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t\t// }else{\n\t\t\t\t\t// \tconnected = true;\n\t\t\t\t\t// }\n\t\t\t\t},\n\n\t\t\t\t'message': function(event) {\n\t\t\t\t\thandleEvent(JSON.parse(event.data));\n\t\t\t\t},\n\n\t\t\t\t'close': function() {\n\t\t\t\t\tif (server === null || !connected) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// if(connected){\n\t\t\t\t\t// \treconnecting = false;\n\t\t\t\t\t// }\n\t\t\t\t\tconnected = false;\n\t\t\t\t\t// reconnected = false;\n\n\t\t\t\t\tconsole.warn(\"WS close\");\n\t\t\t\t\t// // reconnection\n\t\t\t\t\t// //\n\t\t\t\t\t// // Try to reconnect in 5 seconds\n\t\t\t\t\t// setTimeout(function(){\n\t\t\t\t\t// \treconnecting = true;\n\t\t\t\t\t// \tconsole.warn(\"WS reconnection\");\n\t\t\t\t\t// \tcreateSession(callbacks);\n\t\t\t\t\t// }, 2000);\n\n\n\t\t\t\t\t// FIXME What if this is called when the page is closed?\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the gateway (is it down?)\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor(var eventName in wsHandlers) {\n\t\t\t\tws.addEventListener(eventName, wsHandlers[eventName]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconnected = true;\n\t\t\t\tsessionId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\tJanus.sessions[sessionId] = that;\n\t\t\t\teventHandler();\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\t// FIXME\n\t\t\t\tif(Janus.isArray(servers)) {\n\t\t\t\t\tserversIndex++;\n\t\t\t\t\tif(serversIndex == servers.length) {\n\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the gateway down?\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Let's try the next server\n\t\t\t\t\tserver = null;\n\t\t\t\t\tsetTimeout(function() { createSession(callbacks); }, 200);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the gateway down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to destroy a session\n\tfunction destroySession(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\t// FIXME This method triggers a success even when we fail\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tvar asyncRequest = true;\n\t\tif(callbacks.asyncRequest !== undefined && callbacks.asyncRequest !== null)\n\t\t\tasyncRequest = (callbacks.asyncRequest === true);\n\t\tJanus.log(\"Destroying session \" + sessionId + \" (async=\" + asyncRequest + \")\");\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the gateway down? (connected=false)\");\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(sessionId === undefined || sessionId === null) {\n\t\t\tJanus.warn(\"No session to destroy\");\n\t\t\tcallbacks.success();\n\t\t\tgatewayCallbacks.destroyed();\n\t\t\treturn;\n\t\t}\n\t\tdelete Janus.sessions[sessionId];\n\t\t// No need to destroy all handles first, Janus will do that itself\n\t\tvar request = { \"janus\": \"destroy\", \"transaction\": Janus.randomString(12) };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\n\t\t\tvar unbindWebSocket = function() {\n\t\t\t\tfor(var eventName in wsHandlers) {\n\t\t\t\t\tws.removeEventListener(eventName, wsHandlers[eventName]);\n\t\t\t\t}\n\t\t\t\tws.removeEventListener('message', onUnbindMessage);\n\t\t\t\tws.removeEventListener('error', onUnbindError);\n\t\t\t\tif(wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t}\n\t\t\t\tws.close();\n\t\t\t};\n\n\t\t\tvar onUnbindMessage = function(event){\n\t\t\t\tvar data = JSON.parse(event.data);\n\t\t\t\tif(data.session_id == request.session_id && data.transaction == request.transaction) {\n\t\t\t\t\tunbindWebSocket();\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar onUnbindError = function(event) {\n\t\t\t\tunbindWebSocket();\n\t\t\t\tcallbacks.error(\"Failed to destroy the gateway: Is the gateway down?\");\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t};\n\n\t\t\tws.addEventListener('message', onUnbindMessage);\n\t\t\tws.addEventListener('error', onUnbindError);\n\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\tasync: asyncRequest,\t// Sometimes we need false here, or destroying in onbeforeunload won't work\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Destroyed session:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success();\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\t// FIXME\n\t\t\t\t// Reset everything anyway\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tcallbacks.success();\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a plugin handle\n\tfunction createHandle(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.consentDialog = (typeof callbacks.consentDialog == \"function\") ? callbacks.consentDialog : Janus.noop;\n\t\tcallbacks.iceState = (typeof callbacks.iceState == \"function\") ? callbacks.iceState : Janus.noop;\n\t\tcallbacks.mediaState = (typeof callbacks.mediaState == \"function\") ? callbacks.mediaState : Janus.noop;\n\t\tcallbacks.webrtcState = (typeof callbacks.webrtcState == \"function\") ? callbacks.webrtcState : Janus.noop;\n\t\tcallbacks.slowLink = (typeof callbacks.slowLink == \"function\") ? callbacks.slowLink : Janus.noop;\n\t\tcallbacks.onmessage = (typeof callbacks.onmessage == \"function\") ? callbacks.onmessage : Janus.noop;\n\t\tcallbacks.onlocalstream = (typeof callbacks.onlocalstream == \"function\") ? callbacks.onlocalstream : Janus.noop;\n\t\tcallbacks.onremotestream = (typeof callbacks.onremotestream == \"function\") ? callbacks.onremotestream : Janus.noop;\n\t\tcallbacks.ondata = (typeof callbacks.ondata == \"function\") ? callbacks.ondata : Janus.noop;\n\t\tcallbacks.ondataopen = (typeof callbacks.ondataopen == \"function\") ? callbacks.ondataopen : Janus.noop;\n\t\tcallbacks.oncleanup = (typeof callbacks.oncleanup == \"function\") ? callbacks.oncleanup : Janus.noop;\n\t\tcallbacks.ondetached = (typeof callbacks.ondetached == \"function\") ? callbacks.ondetached : Janus.noop;\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the gateway down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the gateway down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar plugin = callbacks.plugin;\n\t\tif(plugin === undefined || plugin === null) {\n\t\t\tJanus.error(\"Invalid plugin\");\n\t\t\tcallbacks.error(\"Invalid plugin\");\n\t\t\treturn;\n\t\t}\n\t\tvar opaqueId = callbacks.opaqueId;\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"attach\", \"plugin\": plugin, \"opaque_id\": opaqueId, \"transaction\": transaction };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\t// If we know the browser supports BUNDLE and/or rtcp-mux, let's advertise those right away\n\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"chrome\" || Janus.webRTCAdapter.browserDetails.browser == \"firefox\" ||\n\t\t\t\tJanus.webRTCAdapter.browserDetails.browser == \"safari\") {\n\t\t\trequest[\"force-bundle\"] = true;\n\t\t\trequest[\"force-rtcp-mux\"] = true;\n\t\t}\n\t\tif(websockets) {\n\t\t\ttransactions[transaction] = function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tvar pluginHandle =\n\t\t\t\t\t{\n\t\t\t\t\t\tsession : that,\n\t\t\t\t\t\tplugin : plugin,\n\t\t\t\t\t\tid : handleId,\n\t\t\t\t\t\tdetached : false,\n\t\t\t\t\t\twebrtcStuff : {\n\t\t\t\t\t\t\tstarted : false,\n\t\t\t\t\t\t\tmyStream : null,\n\t\t\t\t\t\t\tstreamExternal : false,\n\t\t\t\t\t\t\tremoteStream : null,\n\t\t\t\t\t\t\tmySdp : null,\n\t\t\t\t\t\t\tmediaConstraints : null,\n\t\t\t\t\t\t\tpc : null,\n\t\t\t\t\t\t\tdataChannel : null,\n\t\t\t\t\t\t\tdtmfSender : null,\n\t\t\t\t\t\t\ttrickle : true,\n\t\t\t\t\t\t\ticeDone : false,\n\t\t\t\t\t\t\tvolume : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbitrate : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\tbsnow : null,\n\t\t\t\t\t\t\t\tbsbefore : null,\n\t\t\t\t\t\t\t\ttsnow : null,\n\t\t\t\t\t\t\t\ttsbefore : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetId : function() { return handleId; },\n\t\t\t\t\t\tgetPlugin : function() { return plugin; },\n\t\t\t\t\t\tgetVolume : function() { return getVolume(handleId); },\n\t\t\t\t\t\tisAudioMuted : function() { return isMuted(handleId, false); },\n\t\t\t\t\t\tmuteAudio : function() { return mute(handleId, false, true); },\n\t\t\t\t\t\tunmuteAudio : function() { return mute(handleId, false, false); },\n\t\t\t\t\t\tisVideoMuted : function() { return isMuted(handleId, true); },\n\t\t\t\t\t\tmuteVideo : function() { return mute(handleId, true, true); },\n\t\t\t\t\t\tunmuteVideo : function() { return mute(handleId, true, false); },\n\t\t\t\t\t\tgetBitrate : function() { return getBitrate(handleId); },\n\t\t\t\t\t\tsend : function(callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\t\tdata : function(callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\t\tdtmf : function(callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\t\tconsentDialog : callbacks.consentDialog,\n\t\t\t\t\t\ticeState : callbacks.iceState,\n\t\t\t\t\t\tmediaState : callbacks.mediaState,\n\t\t\t\t\t\twebrtcState : callbacks.webrtcState,\n\t\t\t\t\t\tslowLink : callbacks.slowLink,\n\t\t\t\t\t\tonmessage : callbacks.onmessage,\n\t\t\t\t\t\tcreateOffer : function(callbacks) { prepareWebrtc(handleId, callbacks); },\n\t\t\t\t\t\tcreateAnswer : function(callbacks) { prepareWebrtc(handleId, callbacks); },\n\t\t\t\t\t\thandleRemoteJsep : function(callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\t\tonlocalstream : callbacks.onlocalstream,\n\t\t\t\t\t\tonremotestream : callbacks.onremotestream,\n\t\t\t\t\t\tondata : callbacks.ondata,\n\t\t\t\t\t\tondataopen : callbacks.ondataopen,\n\t\t\t\t\t\toncleanup : callbacks.oncleanup,\n\t\t\t\t\t\tondetached : callbacks.ondetached,\n\t\t\t\t\t\thangup : function(sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\t\tdetach : function(callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t\t};\n\t\t\t\tpluginHandles[handleId] = pluginHandle;\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t};\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tvar pluginHandle =\n\t\t\t\t\t{\n\t\t\t\t\t\tsession : that,\n\t\t\t\t\t\tplugin : plugin,\n\t\t\t\t\t\tid : handleId,\n\t\t\t\t\t\tdetached : false,\n\t\t\t\t\t\twebrtcStuff : {\n\t\t\t\t\t\t\tstarted : false,\n\t\t\t\t\t\t\tmyStream : null,\n\t\t\t\t\t\t\tstreamExternal : false,\n\t\t\t\t\t\t\tremoteStream : null,\n\t\t\t\t\t\t\tmySdp : null,\n\t\t\t\t\t\t\tmediaConstraints : null,\n\t\t\t\t\t\t\tpc : null,\n\t\t\t\t\t\t\tdataChannel : null,\n\t\t\t\t\t\t\tdtmfSender : null,\n\t\t\t\t\t\t\ttrickle : true,\n\t\t\t\t\t\t\ticeDone : false,\n\t\t\t\t\t\t\tvolume : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbitrate : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\tbsnow : null,\n\t\t\t\t\t\t\t\tbsbefore : null,\n\t\t\t\t\t\t\t\ttsnow : null,\n\t\t\t\t\t\t\t\ttsbefore : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetId : function() { return handleId; },\n\t\t\t\t\t\tgetPlugin : function() { return plugin; },\n\t\t\t\t\t\tgetVolume : function() { return getVolume(handleId); },\n\t\t\t\t\t\tisAudioMuted : function() { return isMuted(handleId, false); },\n\t\t\t\t\t\tmuteAudio : function() { return mute(handleId, false, true); },\n\t\t\t\t\t\tunmuteAudio : function() { return mute(handleId, false, false); },\n\t\t\t\t\t\tisVideoMuted : function() { return isMuted(handleId, true); },\n\t\t\t\t\t\tmuteVideo : function() { return mute(handleId, true, true); },\n\t\t\t\t\t\tunmuteVideo : function() { return mute(handleId, true, false); },\n\t\t\t\t\t\tgetBitrate : function() { return getBitrate(handleId); },\n\t\t\t\t\t\tsend : function(callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\t\tdata : function(callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\t\tdtmf : function(callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\t\tconsentDialog : callbacks.consentDialog,\n\t\t\t\t\t\ticeState : callbacks.iceState,\n\t\t\t\t\t\tmediaState : callbacks.mediaState,\n\t\t\t\t\t\twebrtcState : callbacks.webrtcState,\n\t\t\t\t\t\tslowLink : callbacks.slowLink,\n\t\t\t\t\t\tonmessage : callbacks.onmessage,\n\t\t\t\t\t\tcreateOffer : function(callbacks) { prepareWebrtc(handleId, callbacks); },\n\t\t\t\t\t\tcreateAnswer : function(callbacks) { prepareWebrtc(handleId, callbacks); },\n\t\t\t\t\t\thandleRemoteJsep : function(callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\t\tonlocalstream : callbacks.onlocalstream,\n\t\t\t\t\t\tonremotestream : callbacks.onremotestream,\n\t\t\t\t\t\tondata : callbacks.ondata,\n\t\t\t\t\t\tondataopen : callbacks.ondataopen,\n\t\t\t\t\t\toncleanup : callbacks.oncleanup,\n\t\t\t\t\t\tondetached : callbacks.ondetached,\n\t\t\t\t\t\thangup : function(sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\t\tdetach : function(callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t\t};\n\t\t\t\tpluginHandles[handleId] = pluginHandle;\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\t// FIXME\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a message\n\tfunction sendMessage(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the gateway down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the gateway down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar message = callbacks.message;\n\t\tvar jsep = callbacks.jsep;\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"message\", \"body\": message, \"transaction\": transaction };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(jsep !== null && jsep !== undefined)\n\t\t\trequest.jsep = jsep;\n\t\tJanus.debug(\"Sending message to plugin (handle=\" + handleId + \"):\");\n\t\tJanus.debug(request);\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\ttransactions[transaction] = function(json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\t\t\tif(plugindata === undefined || plugindata === null) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tvar data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif(json[\"error\"] !== undefined && json[\"error\"] !== null) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t};\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\t\t\tif(plugindata === undefined || plugindata === null) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tvar data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif(json[\"error\"] !== undefined && json[\"error\"] !== null) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\t// FIXME\n\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a trickle candidate\n\tfunction sendTrickleCandidate(handleId, candidate) {\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the gateway down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar request = { \"janus\": \"trickle\", \"candidate\": candidate, \"transaction\": Janus.randomString(12) };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tJanus.vdebug(\"Sending trickle candidate (handle=\" + handleId + \"):\");\n\t\tJanus.vdebug(request);\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.vdebug(\"Candidate sent!\");\n\t\t\t\tJanus.vdebug(json);\n\t\t\t\tif(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\t// FIXME\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a data channel message\n\tfunction sendData(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar text = callbacks.text;\n\t\tif(text === null || text === undefined) {\n\t\t\tJanus.warn(\"Invalid text\");\n\t\t\tcallbacks.error(\"Invalid text\");\n\t\t\treturn;\n\t\t}\n\t\tJanus.log(\"Sending string on data channel: \" + text);\n\t\tconfig.dataChannel.send(text);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to send a DTMF tone\n\tfunction sendDtmf(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.dtmfSender === null || config.dtmfSender === undefined) {\n\t\t\t// Create the DTMF sender, if possible\n\t\t\tif(config.myStream !== undefined && config.myStream !== null) {\n\t\t\t\tvar tracks = config.myStream.getAudioTracks();\n\t\t\t\tif(tracks !== null && tracks !== undefined && tracks.length > 0) {\n\t\t\t\t\tvar local_audio_track = tracks[0];\n\t\t\t\t\tconfig.dtmfSender = config.pc.createDTMFSender(local_audio_track);\n\t\t\t\t\tJanus.log(\"Created DTMF Sender\");\n\t\t\t\t\tconfig.dtmfSender.ontonechange = function(tone) { Janus.debug(\"Sent DTMF tone: \" + tone.tone); };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(config.dtmfSender === null || config.dtmfSender === undefined) {\n\t\t\t\tJanus.warn(\"Invalid DTMF configuration\");\n\t\t\t\tcallbacks.error(\"Invalid DTMF configuration\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tvar dtmf = callbacks.dtmf;\n\t\tif(dtmf === null || dtmf === undefined) {\n\t\t\tJanus.warn(\"Invalid DTMF parameters\");\n\t\t\tcallbacks.error(\"Invalid DTMF parameters\");\n\t\t\treturn;\n\t\t}\n\t\tvar tones = dtmf.tones;\n\t\tif(tones === null || tones === undefined) {\n\t\t\tJanus.warn(\"Invalid DTMF string\");\n\t\t\tcallbacks.error(\"Invalid DTMF string\");\n\t\t\treturn;\n\t\t}\n\t\tvar duration = dtmf.duration;\n\t\tif(duration === null || duration === undefined)\n\t\t\tduration = 500;\t// We choose 500ms as the default duration for a tone\n\t\tvar gap = dtmf.gap;\n\t\tif(gap === null || gap === undefined)\n\t\t\tgap = 50;\t// We choose 50ms as the default gap between tones\n\t\tJanus.debug(\"Sending DTMF string \" + tones + \" (duration \" + duration + \"ms, gap \" + gap + \"ms)\");\n\t\tconfig.dtmfSender.insertDTMF(tones, duration, gap);\n\t}\n\n\t// Private method to destroy a plugin handle\n\tfunction destroyHandle(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar asyncRequest = true;\n\t\tif(callbacks.asyncRequest !== undefined && callbacks.asyncRequest !== null)\n\t\t\tasyncRequest = (callbacks.asyncRequest === true);\n\t\tJanus.log(\"Destroying handle \" + handleId + \" (async=\" + asyncRequest + \")\");\n\t\tcleanupWebrtc(handleId);\n\t\tif (pluginHandles[handleId].detached) {\n\t\t\t// Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the gateway down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the gateway down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar request = { \"janus\": \"detach\", \"transaction\": Janus.randomString(12) };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\tasync: asyncRequest,\t// Sometimes we need false here, or destroying in onbeforeunload won't work\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Destroyed handle:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tdelete pluginHandles[handleId];\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \": \" + errorThrown);\t// FIXME\n\t\t\t\t// We cleanup anyway\n\t\t\t\tdelete pluginHandles[handleId];\n\t\t\t\tcallbacks.success();\n\t\t\t}\n\t\t});\n\t}\n\n\t// WebRTC stuff\n\tfunction streamsDone(handleId, jsep, media, callbacks, stream) {\n\t\tconsole.warn(\"streamsDone\", media);\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tJanus.debug(\"streamsDone:\", stream);\n\t\tif(stream) {\n\t\t\tJanus.debug(\"  -- Audio tracks:\", stream.getAudioTracks());\n\t\t\tJanus.debug(\"  -- Video tracks:\", stream.getVideoTracks());\n\t\t}\n\t\t// If we're updating, check if we need to remove/replace one of the tracks\n\t\tif(media.update && !config.streamExternal) {\n\t\t\tif(media.removeAudio || media.replaceAudio) {\n\t\t\t\tif(config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\tJanus.log(\"Removing audio track:\", config.myStream.getAudioTracks()[0]);\n\t\t\t\t\tconfig.myStream.removeTrack(config.myStream.getAudioTracks()[0]);\n\t\t\t\t}\n\t\t\t\tif(config.pc.getSenders() && config.pc.getSenders().length) {\n\t\t\t\t\tfor(var index in config.pc.getSenders()) {\n\t\t\t\t\t\tvar s = config.pc.getSenders()[index];\n\t\t\t\t\t\tif(s && s.track && s.track.kind === \"audio\") {\n\t\t\t\t\t\t\tJanus.log(\"Removing audio sender:\", s);\n\t\t\t\t\t\t\tconfig.pc.removeTrack(s);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(media.removeVideo || media.replaceVideo) {\n\t\t\t\tif(config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\tJanus.log(\"Removing video track:\", config.myStream.getVideoTracks()[0]);\n\t\t\t\t\tconfig.myStream.removeTrack(config.myStream.getVideoTracks()[0]);\n\t\t\t\t}\n\t\t\t\tif(config.pc.getSenders() && config.pc.getSenders().length) {\n\t\t\t\t\tfor(var index in config.pc.getSenders()) {\n\t\t\t\t\t\tvar s = config.pc.getSenders()[index];\n\t\t\t\t\t\tif(s && s.track && s.track.kind === \"video\") {\n\t\t\t\t\t\t\tJanus.log(\"Removing video sender:\", s);\n\t\t\t\t\t\t\tconfig.pc.removeTrack(s);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// We're now capturing the new stream: check if we're updating or if it's a new thing\n\t\tvar addTracks = false;\n\t\tif(!config.myStream || !media.update || config.streamExternal) {\n\t\t\tconfig.myStream = stream;\n\t\t\taddTracks = true;\n\t\t} else {\n\t\t\t// We only need to update the existing stream\n\t\t\tif(((!media.update && isAudioSendEnabled(media)) || (media.update && (media.addAudio || media.replaceAudio))) &&\n\t\t\t\t\tstream.getAudioTracks() && stream.getAudioTracks().length) {\n\t\t\t\tJanus.log(\"Adding audio track:\", stream.getAudioTracks()[0]);\n\t\t\t\tconfig.myStream.addTrack(stream.getAudioTracks()[0]);\n\t\t\t\tconfig.pc.addTrack(stream.getAudioTracks()[0], stream);\n\t\t\t}\n\t\t\tif(((!media.update && isVideoSendEnabled(media)) || (media.update && (media.addVideo || media.replaceVideo))) &&\n\t\t\t\t\tstream.getVideoTracks() && stream.getVideoTracks().length) {\n\t\t\t\tJanus.log(\"Adding video track:\", stream.getVideoTracks()[0]);\n\t\t\t\tconfig.myStream.addTrack(stream.getVideoTracks()[0]);\n\t\t\t\tconfig.pc.addTrack(stream.getVideoTracks()[0], stream);\n\t\t\t}\n\t\t}\n\t\t// If we still need to create a PeerConnection, let's do that\n\t\tif(!config.pc) {\n\t\t\tvar pc_config = {\"iceServers\": iceServers, \"iceTransportPolicy\": iceTransportPolicy, \"bundlePolicy\": bundlePolicy};\n\t\t\t//~ var pc_constraints = {'mandatory': {'MozDontOfferDataChannel':true}};\n\t\t\tvar pc_constraints = {\n\t\t\t\t\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]\n\t\t\t};\n\t\t\tif(ipv6Support === true) {\n\t\t\t\t// FIXME This is only supported in Chrome right now\n\t\t\t\t// For support in Firefox track this: https://bugzilla.mozilla.org/show_bug.cgi?id=797262\n\t\t\t\tpc_constraints.optional.push({\"googIPv6\":true});\n\t\t\t}\n\t\t\t// Any custom constraint to add?\n\t\t\tif(callbacks.rtcConstraints && typeof callbacks.rtcConstraints === 'object') {\n\t\t\t\tJanus.debug(\"Adding custom PeerConnection constraints:\", callbacks.rtcConstraints);\n\t\t\t\tfor(var i in callbacks.rtcConstraints) {\n\t\t\t\t\tpc_constraints.optional.push(callbacks.rtcConstraints[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n\t\t\t\t// This is Edge, enable BUNDLE explicitly\n\t\t\t\tpc_config.bundlePolicy = \"max-bundle\";\n\t\t\t}\n\t\t\tJanus.log(\"Creating PeerConnection\");\n\t\t\tJanus.debug(pc_constraints);\n\t\t\tconfig.pc = new RTCPeerConnection(pc_config, pc_constraints);\n\t\t\tJanus.debug(config.pc);\n\t\t\tif(config.pc.getStats) {\t// FIXME\n\t\t\t\tconfig.volume.value = 0;\n\t\t\t\tconfig.bitrate.value = \"0 kbits/sec\";\n\t\t\t}\n\t\t\tJanus.log(\"Preparing local SDP and gathering candidates (trickle=\" + config.trickle + \")\");\n\t\t\tconfig.pc.oniceconnectionstatechange = function(e) {\n\t\t\t\tif(config.pc)\n\t\t\t\t\tpluginHandle.iceState(config.pc.iceConnectionState);\n\t\t\t};\n\t\t\tconfig.pc.onicecandidate = function(event) {\n\t\t\t\tif (event.candidate == null ||\n\t\t\t\t\t\t(Janus.webRTCAdapter.browserDetails.browser === 'edge' && event.candidate.candidate.indexOf('endOfCandidates') > 0)) {\n\t\t\t\t\tJanus.log(\"End of candidates.\");\n\t\t\t\t\tconfig.iceDone = true;\n\t\t\t\t\tif(config.trickle === true) {\n\t\t\t\t\t\t// Notify end of candidates\n\t\t\t\t\t\tsendTrickleCandidate(handleId, {\"completed\": true});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// No trickle, time to send the complete SDP (including all candidates)\n\t\t\t\t\t\tsendSDP(handleId, callbacks);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\t\tvar candidate = {\n\t\t\t\t\t\t\"candidate\": event.candidate.candidate,\n\t\t\t\t\t\t\"sdpMid\": event.candidate.sdpMid,\n\t\t\t\t\t\t\"sdpMLineIndex\": event.candidate.sdpMLineIndex\n\t\t\t\t\t};\n\t\t\t\t\tif(config.trickle === true) {\n\t\t\t\t\t\t// Send candidate\n\t\t\t\t\t\tsendTrickleCandidate(handleId, candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tconfig.pc.ontrack = function(event) {\n\t\t\t\tJanus.log(\"Handling Remote Track\");\n\t\t\t\tJanus.debug(event);\n\t\t\t\tif(!event.streams)\n\t\t\t\t\treturn;\n\t\t\t\tconfig.remoteStream = event.streams[0];\n\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\tif(event.track && !event.track.onended) {\n\t\t\t\t\tJanus.log(\"Adding onended callback to track:\", event.track);\n\t\t\t\t\tevent.track.onended = function(ev) {\n\t\t\t\t\t\tJanus.log(\"Remote track removed:\", ev);\n\t\t\t\t\t\tif(config.remoteStream) {\n\t\t\t\t\t\t\tconfig.remoteStream.removeTrack(ev.target);\n\t\t\t\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif(addTracks && stream !== null && stream !== undefined) {\n\t\t\tJanus.log('Adding local stream');\n\t\t\tstream.getTracks().forEach(function(track) { config.pc.addTrack(track, stream); });\n\t\t}\n\t\t// Any data channel to create?\n\t\tif(isDataEnabled(media) && !config.dataChannel) {\n\t\t\tJanus.log(\"Creating data channel\");\n\t\t\tvar onDataChannelMessage = function(event) {\n\t\t\t\tJanus.log('Received message on data channel: ' + event.data);\n\t\t\t\tpluginHandle.ondata(event.data);\t// FIXME\n\t\t\t};\n\t\t\tvar onDataChannelStateChange = function() {\n\t\t\t\tvar dcState = config.dataChannel !== null ? config.dataChannel.readyState : \"null\";\n\t\t\t\tJanus.log('State change on data channel: ' + dcState);\n\t\t\t\tif(dcState === 'open') {\n\t\t\t\t\tpluginHandle.ondataopen();\t// FIXME\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar onDataChannelError = function(error) {\n\t\t\t\tJanus.error('Got error on data channel:', error);\n\t\t\t\t// TODO\n\t\t\t};\n\t\t\t// Until we implement the proxying of open requests within the Janus core, we open a channel ourselves whatever the case\n\t\t\tconfig.dataChannel = config.pc.createDataChannel(\"JanusDataChannel\", {ordered:false});\t// FIXME Add options (ordered, maxRetransmits, etc.)\n\t\t\tconfig.dataChannel.onmessage = onDataChannelMessage;\n\t\t\tconfig.dataChannel.onopen = onDataChannelStateChange;\n\t\t\tconfig.dataChannel.onclose = onDataChannelStateChange;\n\t\t\tconfig.dataChannel.onerror = onDataChannelError;\n\t\t}\n\t\t// If there's a new local stream, let's notify the application\n\t\tif(config.myStream)\n\t\t\tpluginHandle.onlocalstream(config.myStream);\n\t\t// Create offer/answer now\n\t\tif(jsep === null || jsep === undefined) {\n\t\t\tcreateOffer(handleId, media, callbacks);\n\t\t} else {\n\t\t\tconfig.pc.setRemoteDescription(\n\t\t\t\t\tnew RTCSessionDescription(jsep),\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\t\tcreateAnswer(handleId, media, callbacks);\n\t\t\t\t\t}, callbacks.error);\n\t\t}\n\t}\n\n\tfunction prepareWebrtc(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tvar jsep = callbacks.jsep;\n\t\tcallbacks.media = callbacks.media || { audio: true, video: true };\n\t\tvar media = callbacks.media;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\t// Are we updating a session?\n\t\tif(config.pc === undefined || config.pc === null) {\n\t\t\t// Nope, new PeerConnection\n\t\t\tmedia.update = false;\n\t\t} else if(config.pc !== undefined && config.pc !== null) {\n\t\t\tJanus.log(\"Updating existing media session\");\n\t\t\tmedia.update = true;\n\t\t\t// Check if there's anything do add/remove/replace, or if we\n\t\t\t// can go directly to preparing the new SDP offer or answer\n\t\t\tif(callbacks.stream !== null && callbacks.stream !== undefined) {\n\t\t\t\t// External stream: is this the same as the one we were using before?\n\t\t\t\tif(callbacks.stream !== config.myStream) {\n\t\t\t\t\tJanus.log(\"Renegotiation involves a new external stream\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Check if there are changes on audio\n\t\t\t\tif(media.addAudio) {\n\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\tmedia.removeAudio = false;\n\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\tif(config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\t\tJanus.error(\"Can't add audio stream, there already is one\");\n\t\t\t\t\t\tcallbacks.error(\"Can't add audio stream, there already is one\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if(media.removeAudio) {\n\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\tmedia.addAudio = false;\n\t\t\t\t\tmedia.audioSend = false;\n\t\t\t\t} else if(media.replaceAudio) {\n\t\t\t\t\tmedia.addAudio = false;\n\t\t\t\t\tmedia.removeAudio = false;\n\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t}\n\t\t\t\tif(config.myStream === null || config.myStream === undefined) {\n\t\t\t\t\t// No media stream: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\tif(media.replaceAudio) {\n\t\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isAudioSendEnabled(media))\n\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t} else {\n\t\t\t\t\tif(config.myStream.getAudioTracks() === null\n\t\t\t\t\t\t\t|| config.myStream.getAudioTracks() === undefined\n\t\t\t\t\t\t\t|| config.myStream.getAudioTracks().length === 0) {\n\t\t\t\t\t\t// No audio track: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\t\tif(media.replaceAudio) {\n\t\t\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(isAudioSendEnabled(media))\n\t\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check if there are changes on video\n\t\t\t\tif(media.addVideo) {\n\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\tmedia.removeVideo = false;\n\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\tif(config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\t\tJanus.error(\"Can't add video stream, there already is one\");\n\t\t\t\t\t\tcallbacks.error(\"Can't add video stream, there already is one\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if(media.removeVideo) {\n\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\tmedia.addVideo = false;\n\t\t\t\t\tmedia.videoSend = false;\n\t\t\t\t} else if(media.replaceVideo) {\n\t\t\t\t\tmedia.addVideo = false;\n\t\t\t\t\tmedia.removeVideo = false;\n\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t}\n\t\t\t\tif(config.myStream === null || config.myStream === undefined) {\n\t\t\t\t\t// No media stream: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\tif(media.replaceVideo) {\n\t\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isVideoSendEnabled(media))\n\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t} else {\n\t\t\t\t\tif(config.myStream.getVideoTracks() === null\n\t\t\t\t\t\t\t|| config.myStream.getVideoTracks() === undefined\n\t\t\t\t\t\t\t|| config.myStream.getVideoTracks().length === 0) {\n\t\t\t\t\t\t// No video track: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\t\tif(media.replaceVideo) {\n\t\t\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(isVideoSendEnabled(media))\n\t\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Data channels can only be added\n\t\t\t\tif(media.addData)\n\t\t\t\t\tmedia.data = true;\n\t\t\t}\n\t\t}\n\t\tconfig.trickle = isTrickleEnabled(callbacks.trickle);\n\t\t// Was a MediaStream object passed, or do we need to take care of that?\n\t\tif(callbacks.stream !== null && callbacks.stream !== undefined) {\n\t\t\tvar stream = callbacks.stream;\n\t\t\tJanus.log(\"MediaStream provided by the application\");\n\t\t\tJanus.debug(stream);\n\t\t\t// If this is an update, let's check if we need to release the previous stream\n\t\t\tif(media.update) {\n\t\t\t\tif(config.myStream && config.myStream !== callbacks.stream && !config.streamExternal) {\n\t\t\t\t\t// We're replacing a stream we captured ourselves with an external one\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Try a MediaStreamTrack.stop() for each track\n\t\t\t\t\t\tvar tracks = config.myStream.getTracks();\n\t\t\t\t\t\tfor(var i in tracks) {\n\t\t\t\t\t\t\tvar mst = tracks[i];\n\t\t\t\t\t\t\tJanus.log(mst);\n\t\t\t\t\t\t\tif(mst !== null && mst !== undefined)\n\t\t\t\t\t\t\t\tmst.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t// Do nothing if this fails\n\t\t\t\t\t}\n\t\t\t\t\tconfig.myStream = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Skip the getUserMedia part\n\t\t\tconfig.streamExternal = true;\n\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\treturn;\n\t\t}\n\t\tif(isAudioSendEnabled(media) || isVideoSendEnabled(media)) {\n\t\t\tvar constraints = { mandatory: {}, optional: []};\n\t\t\tpluginHandle.consentDialog(true);\n\t\t\tvar audioSupport = isAudioSendEnabled(media);\n\t\t\tif(audioSupport === true && media != undefined && media != null) {\n\t\t\t\tif(typeof media.audio === 'object') {\n\t\t\t\t\taudioSupport = media.audio;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar videoSupport = isVideoSendEnabled(media);\n\t\t\tif(videoSupport === true && media != undefined && media != null) {\n\t\t\t\tvar simulcast = callbacks.simulcast === true ? true : false;\n\t\t\t\tif(simulcast && !jsep && (media.video === undefined || media.video === false))\n\t\t\t\t\tmedia.video = \"hires\";\n\t\t\t\tif(media.video && media.video != 'screen' && media.video != 'window') {\n\t\t\t\t\tif(typeof media.video === 'object') {\n\t\t\t\t\t\tvideoSupport = media.video;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar width = 0;\n\t\t\t\t\t\tvar height = 0, maxHeight = 0;\n\t\t\t\t\t\tif(media.video === 'lowres') {\n\t\t\t\t\t\t\t// Small resolution, 4:3\n\t\t\t\t\t\t\theight = 240;\n\t\t\t\t\t\t\tmaxHeight = 240;\n\t\t\t\t\t\t\twidth = 320;\n\t\t\t\t\t\t} else if(media.video === 'lowres-16:9') {\n\t\t\t\t\t\t\t// Small resolution, 16:9\n\t\t\t\t\t\t\theight = 180;\n\t\t\t\t\t\t\tmaxHeight = 180;\n\t\t\t\t\t\t\twidth = 320;\n\t\t\t\t\t\t} else if(media.video === 'hires' || media.video === 'hires-16:9' || media.video === 'hdres') {\n\t\t\t\t\t\t\t// High(HD) resolution is only 16:9\n\t\t\t\t\t\t\theight = 720;\n\t\t\t\t\t\t\tmaxHeight = 720;\n\t\t\t\t\t\t\twidth = 1280;\n\t\t\t\t\t\t} else if(media.video === 'fhdres') {\n\t\t\t\t\t\t\t// Full HD resolution is only 16:9\n\t\t\t\t\t\t\theight = 1080;\n\t\t\t\t\t\t\tmaxHeight = 1080;\n\t\t\t\t\t\t\twidth = 1920;\n\t\t\t\t\t\t} else if(media.video === '4kres') {\n\t\t\t\t\t\t\t// 4K resolution is only 16:9\n\t\t\t\t\t\t\theight = 2160;\n\t\t\t\t\t\t\tmaxHeight = 2160;\n\t\t\t\t\t\t\twidth = 3840;\n\t\t\t\t\t\t} else if(media.video === 'stdres') {\n\t\t\t\t\t\t\t// Normal resolution, 4:3\n\t\t\t\t\t\t\theight = 480;\n\t\t\t\t\t\t\tmaxHeight = 480;\n\t\t\t\t\t\t\twidth  = 640;\n\t\t\t\t\t\t} else if(media.video === 'stdres-16:9') {\n\t\t\t\t\t\t\t// Normal resolution, 16:9\n\t\t\t\t\t\t\theight = 360;\n\t\t\t\t\t\t\tmaxHeight = 360;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJanus.log(\"Default video setting is stdres 4:3\");\n\t\t\t\t\t\t\theight = 480;\n\t\t\t\t\t\t\tmaxHeight = 480;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Adding media constraint:\", media.video);\n\t\t\t\t\t\tvideoSupport = {\n\t\t\t\t\t\t\t'height': {'ideal': height},\n\t\t\t\t\t\t\t'width':  {'ideal': width}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(media.videoFrameRate){\n\t\t\t\t\t\t\tvideoSupport[\"frameRate\"] = media.videoFrameRate;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.debug(\"Adding video constraint:\", videoSupport);\n\t\t\t\t\t}\n\t\t\t\t} else if(media.video === 'screen' || media.video === 'window') {\n\t\t\t\t\tif(!media.screenshareFrameRate) {\n\t\t\t\t\t\tmedia.screenshareFrameRate = 3;\n\t\t\t\t\t}\n\t\t\t\t\t// Not a webcam, but screen capture\n\t\t\t\t\tif(window.location.protocol !== 'https:') {\n\t\t\t\t\t\t// Screen sharing mandates HTTPS\n\t\t\t\t\t\tJanus.warn(\"Screen sharing only works on HTTPS, try the https:// version of this page\");\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tcallbacks.error(\"Screen sharing only works on HTTPS, try the https:// version of this page\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// We're going to try and use the extension for Chrome 34+, the old approach\n\t\t\t\t\t// for older versions of Chrome, or the experimental support in Firefox 33+\n\t\t\t\t\tvar cache = {};\n\t\t\t\t\tfunction callbackUserMedia (error, stream) {\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tif(error) {\n\t\t\t\t\t\t\tcallbacks.error({code: error.code, name: error.name, message: error.message});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction getScreenMedia(constraints, gsmCallback, useAudio) {\n\t\t\t\t\t\tJanus.log(\"Adding media constraint (screen capture)\");\n\t\t\t\t\t\tJanus.debug(constraints);\n\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t\t\t\t\t.then(function(stream) {\n\t\t\t\t\t\t\t\tif(useAudio){\n\t\t\t\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia({ audio: true, video: false })\n\t\t\t\t\t\t\t\t\t.then(function (audioStream) {\n\t\t\t\t\t\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\t\t\t\t\t\tgsmCallback(null, stream);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tgsmCallback(null, stream);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function(error) { pluginHandle.consentDialog(false); gsmCallback(error); });\n\t\t\t\t\t}\n\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\t\t\tvar maxver = 33;\n\t\t\t\t\t\tif(window.navigator.userAgent.match('Linux'))\n\t\t\t\t\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\t\t\t\t\tif(chromever >= 26 && chromever <= maxver) {\n\t\t\t\t\t\t\t// Chrome 26->33 requires some awkward chrome://flags manipulation\n\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\t\t\tgoogLeakyBucket: true,\n\t\t\t\t\t\t\t\t\t\tmaxWidth: window.screen.width,\n\t\t\t\t\t\t\t\t\t\tmaxHeight: window.screen.height,\n\t\t\t\t\t\t\t\t\t\tminFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\tmaxFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\tchromeMediaSource: 'screen'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taudio: isAudioSendEnabled(media)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgetScreenMedia(constraints, callbackUserMedia);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Chrome 34+ requires an extension\n\t\t\t\t\t\t\tvar pending = window.setTimeout(\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\terror = new Error('NavigatorUserMediaError');\n\t\t\t\t\t\t\t\t\terror.name = 'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n\t\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\t\treturn callbacks.error(error);\n\t\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t\tcache[pending] = [callbackUserMedia, null];\n\t\t\t\t\t\t\twindow.postMessage({ type: 'janusGetScreen', id: pending }, '*');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (window.navigator.userAgent.match('Firefox')) {\n\t\t\t\t\t\tvar ffver = parseInt(window.navigator.userAgent.match(/Firefox\\/(.*)/)[1], 10);\n\t\t\t\t\t\tif(ffver >= 33) {\n\t\t\t\t\t\t\t// Firefox 33+ has experimental support for screen sharing\n\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\tmozMediaSource: media.video,\n\t\t\t\t\t\t\t\t\tmediaSource: media.video\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taudio: isAudioSendEnabled(media)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgetScreenMedia(constraints, function (err, stream) {\n\t\t\t\t\t\t\t\tcallbackUserMedia(err, stream);\n\t\t\t\t\t\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1045810\n\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\tvar lastTime = stream.currentTime;\n\t\t\t\t\t\t\t\t\tvar polly = window.setInterval(function () {\n\t\t\t\t\t\t\t\t\t\tif(!stream)\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(polly);\n\t\t\t\t\t\t\t\t\t\tif(stream.currentTime == lastTime) {\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(polly);\n\t\t\t\t\t\t\t\t\t\t\tif(stream.onended) {\n\t\t\t\t\t\t\t\t\t\t\t\tstream.onended();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlastTime = stream.currentTime;\n\t\t\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\t\t\t\t\terror.name = 'Your version of Firefox does not support screen sharing, please install Firefox 33 (or more recent versions)';\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for events from the Chrome Extension\n\t\t\t\t\twindow.addEventListener('message', function (event) {\n\t\t\t\t\t\tif(event.origin != window.location.origin)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tif(event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n\t\t\t\t\t\t\tvar data = cache[event.data.id];\n\t\t\t\t\t\t\tvar callback = data[0];\n\t\t\t\t\t\t\tdelete cache[event.data.id];\n\n\t\t\t\t\t\t\tif (event.data.sourceId === '') {\n\t\t\t\t\t\t\t\t// user canceled\n\t\t\t\t\t\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\t\t\t\t\t\terror.name = 'You cancelled the request for permission, giving up...';\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\t\taudio: false,\n\t\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\t\t\t\tchromeMediaSource: 'desktop',\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: window.screen.width,\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: window.screen.height,\n\t\t\t\t\t\t\t\t\t\t\tminFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\t\tmaxFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\toptional: [\n\t\t\t\t\t\t\t\t\t\t\t{googLeakyBucket: true},\n\t\t\t\t\t\t\t\t\t\t\t{googTemporalLayeredScreencast: true}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tconstraints.video.mandatory.chromeMediaSourceId = event.data.sourceId;\n\t\t\t\t\t\t\t\tgetScreenMedia(constraints, callback, isAudioSendEnabled(media));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (event.data.type == 'janusGetScreenPending') {\n\t\t\t\t\t\t\twindow.clearTimeout(event.data.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we got here, we're not screensharing\n\t\t\tif(media === null || media === undefined || media.video !== 'screen') {\n\t\t\t\t// Check whether all media sources are actually available or not\n\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\n\t\t\t\t\tvar audioExist = devices.some(function(device) {\n\t\t\t\t\t\treturn device.kind === 'audioinput';\n\t\t\t\t\t}),\n\t\t\t\t\tvideoExist = devices.some(function(device) {\n\t\t\t\t\t\treturn device.kind === 'videoinput';\n\t\t\t\t\t});\n\n\t\t\t\t\t// Check whether a missing device is really a problem\n\t\t\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\t\t\tvar needAudioDevice = isAudioSendRequired(media);\n\t\t\t\t\tvar needVideoDevice = isVideoSendRequired(media);\n\t\t\t\t\tif(audioSend || videoSend || needAudioDevice || needVideoDevice) {\n\t\t\t\t\t\t// We need to send either audio or video\n\t\t\t\t\t\tvar haveAudioDevice = audioSend ? audioExist : false;\n\t\t\t\t\t\tvar haveVideoDevice = videoSend ? videoExist : false;\n\t\t\t\t\t\tif(!haveAudioDevice && !haveVideoDevice) {\n\t\t\t\t\t\t\t// FIXME Should we really give up, or just assume recvonly for both?\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('No capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if(!haveAudioDevice && needAudioDevice) {\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('Audio capture is required, but no capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if(!haveVideoDevice && needVideoDevice) {\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('Video capture is required, but no capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tnavigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\taudio: audioExist ? audioSupport : false,\n\t\t\t\t\t\tvideo: videoExist ? videoSupport : false\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(stream) {\n\t\t\t\t\t\tvar videoTrack = stream.getVideoTracks()[0];\n\t\t\t\t\t\tif(videoTrack){\n\t\t\t\t\t\t\tJanus.debug(\"Video height: \" + videoTrack.getSettings().height);\n\t\t\t\t\t\t\tJanus.debug(\"Video width: \" + videoTrack.getSettings().width);\n\t\t\t\t\t\t\tJanus.debug(\"Video framerate: \" + videoTrack.getSettings().frameRate);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpluginHandle.consentDialog(false); streamsDone(handleId, jsep, media, callbacks, stream); })\n\t\t\t\t\t.catch(function(error) { pluginHandle.consentDialog(false); callbacks.error({code: error.code, name: error.name, message: error.message}); });\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\tcallbacks.error('enumerateDevices error', error);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// No need to do a getUserMedia, create offer/answer right away\n\t\t\tstreamsDone(handleId, jsep, media, callbacks);\n\t\t}\n\t}\n\n\tfunction prepareWebrtcPeer(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tvar jsep = callbacks.jsep;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(jsep !== undefined && jsep !== null) {\n\t\t\tif(config.pc === null) {\n\t\t\t\tJanus.warn(\"Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\tcallbacks.error(\"No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconfig.pc.setRemoteDescription(\n\t\t\t\t\tnew RTCSessionDescription(jsep),\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t}, callbacks.error);\n\t\t} else {\n\t\t\tcallbacks.error(\"Invalid JSEP\");\n\t\t}\n\t}\n\n\tfunction createOffer(handleId, media, callbacks) {\n\t\tconsole.warn(\"createOffer:\", media);\n\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar simulcast = callbacks.simulcast === true ? true : false;\n\t\tif(!simulcast) {\n\t\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \")\");\n\t\t} else {\n\t\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n\t\t}\n\t\t// https://code.google.com/p/webrtc/issues/detail?id=3508\n\t\tvar mediaConstraints = {\n\t\t\t'offerToReceiveAudio':isAudioRecvEnabled(media),\n\t\t\t'offerToReceiveVideo':isVideoRecvEnabled(media)\n\t\t};\n\t\tvar iceRestart = callbacks.iceRestart === true ? true : false;\n\t\tif(iceRestart) {\n\t\t\tmediaConstraints[\"iceRestart\"] = true;\n\t\t}\n\t\tJanus.debug(mediaConstraints);\n\t\t// Check if this is Firefox and we've been asked to do simulcasting\n\t\tvar sendVideo = isVideoSendEnabled(media);\n\t\tif(sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n\t\t\t// FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\tJanus.log(\"Enabling Simulcasting for Firefox (RID)\");\n\t\t\tvar sender = config.pc.getSenders()[1];\n\t\t\tJanus.log(sender);\n\t\t\tvar parameters = sender.getParameters();\n\t\t\tJanus.log(parameters);\n\t\t\tsender.setParameters({encodings: [\n\t\t\t\t{ rid: \"high\", active: true, priority: \"high\", maxBitrate: 1000000 },\n\t\t\t\t{ rid: \"medium\", active: true, priority: \"medium\", maxBitrate: 300000 },\n\t\t\t\t{ rid: \"low\", active: true, priority: \"low\", maxBitrate: 100000 }\n\t\t\t]});\n\t\t}\n\t\tconfig.pc.createOffer(\n\t\t\tfunction(offer) {\n\t\t\t\tJanus.debug(offer);\n\t\t\t\tJanus.log(\"Setting local description\");\n\t\t\t\tif(sendVideo && simulcast) {\n\t\t\t\t\t// This SDP munging only works with Chrome\n\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\t\t\t\tJanus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n\t\t\t\t\t\toffer.sdp = mungeSdpForSimulcasting(offer.sdp);\n\t\t\t\t\t} else if(Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconfig.mySdp = offer.sdp;\n\t\t\t\tconfig.pc.setLocalDescription(offer);\n\t\t\t\tconfig.mediaConstraints = mediaConstraints;\n\t\t\t\tif(!config.iceDone && !config.trickle) {\n\t\t\t\t\t// Don't do anything until we have all candidates\n\t\t\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tJanus.log(\"Offer ready\");\n\t\t\t\tJanus.debug(callbacks);\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tvar jsep = {\n\t\t\t\t\t\"type\": offer.type,\n\t\t\t\t\t\"sdp\": offer.sdp\n\t\t\t\t};\n\t\t\t\tcallbacks.success(jsep);\n\t\t\t}, callbacks.error, mediaConstraints);\n\t}\n\n\tfunction createAnswer(handleId, media, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar simulcast = callbacks.simulcast === true ? true : false;\n\t\tif(!simulcast) {\n\t\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \")\");\n\t\t} else {\n\t\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n\t\t}\n\t\tvar mediaConstraints = null;\n\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"firefox\" || Janus.webRTCAdapter.browserDetails.browser == \"edge\") {\n\t\t\tmediaConstraints = {\n\t\t\t\t'offerToReceiveAudio':isAudioRecvEnabled(media),\n\t\t\t\t'offerToReceiveVideo':isVideoRecvEnabled(media)\n\t\t\t};\n\t\t} else {\n\t\t\tmediaConstraints = {\n\t\t\t\t'mandatory': {\n\t\t\t\t\t'OfferToReceiveAudio':isAudioRecvEnabled(media),\n\t\t\t\t\t'OfferToReceiveVideo':isVideoRecvEnabled(media)\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tJanus.debug(mediaConstraints);\n\t\t// Check if this is Firefox and we've been asked to do simulcasting\n\t\tvar sendVideo = isVideoSendEnabled(media);\n\t\tif(sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n\t\t\t// FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\tJanus.log(\"Enabling Simulcasting for Firefox (RID)\");\n\t\t\tvar sender = config.pc.getSenders()[1];\n\t\t\tJanus.log(sender);\n\t\t\tvar parameters = sender.getParameters();\n\t\t\tJanus.log(parameters);\n\t\t\tsender.setParameters({encodings: [\n\t\t\t\t{ rid: \"high\", active: true, priority: \"high\", maxBitrate: 1000000 },\n\t\t\t\t{ rid: \"medium\", active: true, priority: \"medium\", maxBitrate: 300000 },\n\t\t\t\t{ rid: \"low\", active: true, priority: \"low\", maxBitrate: 100000 }\n\t\t\t]});\n\t\t}\n\t\tconfig.pc.createAnswer(\n\t\t\tfunction(answer) {\n\t\t\t\tJanus.debug(answer);\n\t\t\t\tJanus.log(\"Setting local description\");\n\t\t\t\tif(sendVideo && simulcast) {\n\t\t\t\t\t// This SDP munging only works with Chrome\n\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\t\t\t\t// FIXME Apparently trying to simulcast when answering breaks video in Chrome...\n\t\t\t\t\t\t//~ Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n\t\t\t\t\t\t//~ answer.sdp = mungeSdpForSimulcasting(answer.sdp);\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is an answer, and video breaks in Chrome if we enable it\");\n\t\t\t\t\t} else if(Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconfig.mySdp = answer.sdp;\n\t\t\t\tconfig.pc.setLocalDescription(answer);\n\t\t\t\tconfig.mediaConstraints = mediaConstraints;\n\t\t\t\tif(!config.iceDone && !config.trickle) {\n\t\t\t\t\t// Don't do anything until we have all candidates\n\t\t\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tvar jsep = {\n\t\t\t\t\t\"type\": answer.type,\n\t\t\t\t\t\"sdp\": answer.sdp\n\t\t\t\t};\n\t\t\t\tcallbacks.success(jsep);\n\t\t\t}, callbacks.error, mediaConstraints);\n\t}\n\n\tfunction sendSDP(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle, not sending anything\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tJanus.log(\"Sending offer/answer SDP...\");\n\t\tif(config.mySdp === null || config.mySdp === undefined) {\n\t\t\tJanus.warn(\"Local SDP instance is invalid, not sending anything...\");\n\t\t\treturn;\n\t\t}\n\t\tconfig.mySdp = {\n\t\t\t\"type\": config.pc.localDescription.type,\n\t\t\t\"sdp\": config.pc.localDescription.sdp\n\t\t};\n\t\tif(config.trickle === false)\n\t\t\tconfig.mySdp[\"trickle\"] = false;\n\t\tJanus.debug(callbacks);\n\t\tconfig.sdpSent = true;\n\t\tcallbacks.success(config.mySdp);\n\t}\n\n\tfunction getVolume(handleId) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn 0;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\t// Start getting the volume, if getStats is supported\n\t\tif(config.pc.getStats && Janus.webRTCAdapter.browserDetails.browser == \"chrome\") {\t// FIXME\n\t\t\tif(config.remoteStream === null || config.remoteStream === undefined) {\n\t\t\t\tJanus.warn(\"Remote stream unavailable\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t// http://webrtc.googlecode.com/svn/trunk/samples/js/demos/html/constraints-and-stats.html\n\t\t\tif(config.volume.timer === null || config.volume.timer === undefined) {\n\t\t\t\tJanus.log(\"Starting volume monitor\");\n\t\t\t\tconfig.volume.timer = setInterval(function() {\n\t\t\t\t\tconfig.pc.getStats(function(stats) {\n\t\t\t\t\t\tvar results = stats.result();\n\t\t\t\t\t\tfor(var i=0; i<results.length; i++) {\n\t\t\t\t\t\t\tvar res = results[i];\n\t\t\t\t\t\t\tif(res.type == 'ssrc' && res.stat('audioOutputLevel')) {\n\t\t\t\t\t\t\t\tconfig.volume.value = res.stat('audioOutputLevel');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, 200);\n\t\t\t\treturn 0;\t// We don't have a volume to return yet\n\t\t\t}\n\t\t\treturn config.volume.value;\n\t\t} else {\n\t\t\tJanus.log(\"Getting the remote volume unsupported by browser\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tfunction isMuted(handleId, video) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn true;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.pc === null || config.pc === undefined) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn true;\n\t\t}\n\t\tif(config.myStream === undefined || config.myStream === null) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn true;\n\t\t}\n\t\tif(video) {\n\t\t\t// Check video track\n\t\t\tif(config.myStream.getVideoTracks() === null\n\t\t\t\t\t|| config.myStream.getVideoTracks() === undefined\n\t\t\t\t\t|| config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !config.myStream.getVideoTracks()[0].enabled;\n\t\t} else {\n\t\t\t// Check audio track\n\t\t\tif(config.myStream.getAudioTracks() === null\n\t\t\t\t\t|| config.myStream.getAudioTracks() === undefined\n\t\t\t\t\t|| config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !config.myStream.getAudioTracks()[0].enabled;\n\t\t}\n\t}\n\n\tfunction mute(handleId, video, mute) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn false;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.pc === null || config.pc === undefined) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn false;\n\t\t}\n\t\tif(config.myStream === undefined || config.myStream === null) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn false;\n\t\t}\n\t\tif(video) {\n\t\t\t// Mute/unmute video track\n\t\t\tif(config.myStream.getVideoTracks() === null\n\t\t\t\t\t|| config.myStream.getVideoTracks() === undefined\n\t\t\t\t\t|| config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconfig.myStream.getVideoTracks()[0].enabled = mute ? false : true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Mute/unmute audio track\n\t\t\tif(config.myStream.getAudioTracks() === null\n\t\t\t\t\t|| config.myStream.getAudioTracks() === undefined\n\t\t\t\t\t|| config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconfig.myStream.getAudioTracks()[0].enabled = mute ? false : true;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tfunction getBitrate(handleId) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn \"Invalid handle\";\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.pc === null || config.pc === undefined)\n\t\t\treturn \"Invalid PeerConnection\";\n\t\t// Start getting the bitrate, if getStats is supported\n\t\tif(config.pc.getStats) {\n\t\t\tif(config.bitrate.timer === null || config.bitrate.timer === undefined) {\n\t\t\t\tJanus.log(\"Starting bitrate timer (via getStats)\");\n\t\t\t\tconfig.bitrate.timer = setInterval(function() {\n\t\t\t\t\tconfig.pc.getStats()\n\t\t\t\t\t\t.then(function(stats) {\n\t\t\t\t\t\t\tstats.forEach(function (res) {\n\t\t\t\t\t\t\t\tif(!res)\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\tvar inStats = false;\n\t\t\t\t\t\t\t\t// Check if these are statistics on incoming media\n\t\t\t\t\t\t\t\tif((res.mediaType === \"video\" || res.id.toLowerCase().indexOf(\"video\") > -1) &&\n\t\t\t\t\t\t\t\t\t\tres.type === \"inbound-rtp\" && res.id.indexOf(\"rtcp\") < 0) {\n\t\t\t\t\t\t\t\t\t// New stats\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t} else if(res.type == 'ssrc' && res.bytesReceived &&\n\t\t\t\t\t\t\t\t\t\t(res.googCodecName === \"VP8\" || res.googCodecName === \"\")) {\n\t\t\t\t\t\t\t\t\t// Older Chromer versions\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Parse stats now\n\t\t\t\t\t\t\t\tif(inStats) {\n\t\t\t\t\t\t\t\t\tconfig.bitrate.bsnow = res.bytesReceived;\n\t\t\t\t\t\t\t\t\tconfig.bitrate.tsnow = res.timestamp;\n\t\t\t\t\t\t\t\t\tif(config.bitrate.bsbefore === null || config.bitrate.tsbefore === null) {\n\t\t\t\t\t\t\t\t\t\t// Skip this round\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.bsbefore = config.bitrate.bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.tsbefore = config.bitrate.tsnow;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Calculate bitrate\n\t\t\t\t\t\t\t\t\t\tvar timePassed = config.bitrate.tsnow - config.bitrate.tsbefore;\n\t\t\t\t\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"safari\")\n\t\t\t\t\t\t\t\t\t\t\ttimePassed = timePassed/1000;\t// Apparently the timestamp is in microseconds, in Safari\n\t\t\t\t\t\t\t\t\t\tvar bitRate = Math.round((config.bitrate.bsnow - config.bitrate.bsbefore) * 8 / timePassed);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.value = bitRate + ' kbits/sec';\n\t\t\t\t\t\t\t\t\t\t//~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.bsbefore = config.bitrate.bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.tsbefore = config.bitrate.tsnow;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}, 1000);\n\t\t\t\treturn \"0 kbits/sec\";\t// We don't have a bitrate value yet\n\t\t\t}\n\t\t\treturn config.bitrate.value;\n\t\t} else {\n\t\t\tJanus.warn(\"Getting the video bitrate unsupported by browser\");\n\t\t\treturn \"Feature unsupported by browser\";\n\t\t}\n\t}\n\n\tfunction webrtcError(error) {\n\t\tJanus.error(\"WebRTC error:\", error);\n\t}\n\n\tfunction cleanupWebrtc(handleId, hangupRequest) {\n\t\tJanus.log(\"Cleaning WebRTC stuff\");\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined) {\n\t\t\t// Nothing to clean\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config !== null && config !== undefined) {\n\t\t\tif(hangupRequest === true) {\n\t\t\t\t// Send a hangup request (we don't really care about the response)\n\t\t\t\tvar request = { \"janus\": \"hangup\", \"transaction\": Janus.randomString(12) };\n\t\t\t\tif(token !== null && token !== undefined)\n\t\t\t\t\trequest[\"token\"] = token;\n\t\t\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\t\t\trequest[\"apisecret\"] = apisecret;\n\t\t\t\tJanus.debug(\"Sending hangup request (handle=\" + handleId + \"):\");\n\t\t\t\tJanus.debug(request);\n\t\t\t\tif(websockets) {\n\t\t\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t} else {\n\t\t\t\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\t\t\t\tverb: 'POST',\n\t\t\t\t\t\twithCredentials: withCredentials,\n\t\t\t\t\t\tdata: request\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Cleanup stack\n\t\t\tconfig.remoteStream = null;\n\t\t\tif(config.volume.timer)\n\t\t\t\tclearInterval(config.volume.timer);\n\t\t\tconfig.volume.value = null;\n\t\t\tif(config.bitrate.timer)\n\t\t\t\tclearInterval(config.bitrate.timer);\n\t\t\tconfig.bitrate.timer = null;\n\t\t\tconfig.bitrate.bsnow = null;\n\t\t\tconfig.bitrate.bsbefore = null;\n\t\t\tconfig.bitrate.tsnow = null;\n\t\t\tconfig.bitrate.tsbefore = null;\n\t\t\tconfig.bitrate.value = null;\n\t\t\ttry {\n\t\t\t\t// Try a MediaStreamTrack.stop() for each track\n\t\t\t\tif(!config.streamExternal && config.myStream !== null && config.myStream !== undefined) {\n\t\t\t\t\tJanus.log(\"Stopping local stream tracks\");\n\t\t\t\t\tvar tracks = config.myStream.getTracks();\n\t\t\t\t\tfor(var i in tracks) {\n\t\t\t\t\t\tvar mst = tracks[i];\n\t\t\t\t\t\tJanus.log(mst);\n\t\t\t\t\t\tif(mst !== null && mst !== undefined)\n\t\t\t\t\t\t\tmst.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch(e) {\n\t\t\t\t// Do nothing if this fails\n\t\t\t}\n\t\t\tconfig.streamExternal = false;\n\t\t\tconfig.myStream = null;\n\t\t\t// Close PeerConnection\n\t\t\ttry {\n\t\t\t\tconfig.pc.close();\n\t\t\t} catch(e) {\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\tconfig.pc = null;\n\t\t\tconfig.mySdp = null;\n\t\t\tconfig.iceDone = false;\n\t\t\tconfig.dataChannel = null;\n\t\t\tconfig.dtmfSender = null;\n\t\t}\n\t\tpluginHandle.oncleanup();\n\t}\n\n\t// Helper method to munge an SDP to enable simulcasting (Chrome only)\n\tfunction mungeSdpForSimulcasting(sdp) {\n\t\t// Let's munge the SDP to add the attributes for enabling simulcasting\n\t\t// (based on https://gist.github.com/ggarber/a19b4c33510028b9c657)\n\t\tvar lines = sdp.split(\"\\r\\n\");\n\t\tvar video = false;\n\t\tvar ssrc = [ -1 ], ssrc_fid = -1;\n\t\tvar cname = null, msid = null, mslabel = null, label = null;\n\t\tvar insertAt = -1;\n\t\tfor(var i=0; i<lines.length; i++) {\n\t\t\tvar mline = lines[i].match(/m=(\\w+) */);\n\t\t\tif(mline) {\n\t\t\t\tvar medium = mline[1];\n\t\t\t\tif(medium === \"video\") {\n\t\t\t\t\t// New video m-line: make sure it's the first one\n\t\t\t\t\tif(ssrc[0] < 0) {\n\t\t\t\t\t\tvideo = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// New non-video m-line: do we have what we were looking for?\n\t\t\t\t\tif(ssrc[0] > -1) {\n\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(!video)\n\t\t\t\tcontinue;\n\t\t\tvar fid = lines[i].match(/a=ssrc-group:FID (\\d+) (\\d+)/);\n\t\t\tif(fid) {\n\t\t\t\tssrc[0] = fid[1];\n\t\t\t\tssrc_fid = fid[2];\n\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(ssrc[0]) {\n\t\t\t\tvar match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)');\n\t\t\t\tif(match) {\n\t\t\t\t\tcname = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)');\n\t\t\t\tif(match) {\n\t\t\t\t\tmsid = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)');\n\t\t\t\tif(match) {\n\t\t\t\t\tmslabel = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc + ' label:(.+)');\n\t\t\t\tif(match) {\n\t\t\t\t\tlabel = match[1];\n\t\t\t\t}\n\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc_fid) === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(lines[i].length == 0) {\n\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif(ssrc[0] < 0) {\n\t\t\t// Couldn't find a FID attribute, let's just take the first video SSRC we find\n\t\t\tinsertAt = -1;\n\t\t\tvideo = false;\n\t\t\tfor(var i=0; i<lines.length; i++) {\n\t\t\t\tvar mline = lines[i].match(/m=(\\w+) */);\n\t\t\t\tif(mline) {\n\t\t\t\t\tvar medium = mline[1];\n\t\t\t\t\tif(medium === \"video\") {\n\t\t\t\t\t\t// New video m-line: make sure it's the first one\n\t\t\t\t\t\tif(ssrc[0] < 0) {\n\t\t\t\t\t\t\tvideo = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// New non-video m-line: do we have what we were looking for?\n\t\t\t\t\t\tif(ssrc[0] > -1) {\n\t\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(!video)\n\t\t\t\t\tcontinue;\n\t\t\t\tif(ssrc[0] < 0) {\n\t\t\t\t\tvar value = lines[i].match(/a=ssrc:(\\d+)/);\n\t\t\t\t\tif(value) {\n\t\t\t\t\t\tssrc[0] = value[1];\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)');\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcname = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)');\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tmsid = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)');\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tmslabel = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc + ' label:(.+)');\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tlabel = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc_fid) === 0) {\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(lines[i].length == 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(ssrc[0] < 0) {\n\t\t\t// Still nothing, let's just return the SDP we were asked to munge\n\t\t\tJanus.warn(\"Couldn't find the video SSRC, simulcasting NOT enabled\");\n\t\t\treturn sdp;\n\t\t}\n\t\tif(insertAt < 0) {\n\t\t\t// Append at the end\n\t\t\tinsertAt = lines.length;\n\t\t}\n\t\t// Generate a couple of SSRCs\n\t\tssrc[1] = Math.floor(Math.random()*0xFFFFFFFF);\n\t\tssrc[2] = Math.floor(Math.random()*0xFFFFFFFF);\n\t\t// Add attributes to the SDP\n\t\tfor(var i=0; i<ssrc.length; i++) {\n\t\t\tif(cname) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' cname:' + cname);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(msid) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' msid:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(mslabel) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' mslabel:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(label) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' label:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t}\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:SIM ' + ssrc[0] + ' ' + ssrc[1] + ' ' + ssrc[2]);\n\t\tsdp = lines.join(\"\\r\\n\");\n\t\tif(!sdp.endsWith(\"\\r\\n\"))\n\t\t\tsdp += \"\\r\\n\";\n\t\treturn sdp;\n\t}\n\n\t// Helper methods to parse a media object\n\tfunction isAudioSendEnabled(media) {\n\t\tJanus.debug(\"isAudioSendEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.audio === false)\n\t\t\treturn false;\t// Generic audio has precedence\n\t\tif(media.audioSend === undefined || media.audioSend === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.audioSend === true);\n\t}\n\n\tfunction isAudioSendRequired(media) {\n\t\tJanus.debug(\"isAudioSendRequired:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\tif(media.audio === false || media.audioSend === false)\n\t\t\treturn false;\t// If we're not asking to capture audio, it's not required\n\t\tif(media.failIfNoAudio === undefined || media.failIfNoAudio === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.failIfNoAudio === true);\n\t}\n\n\tfunction isAudioRecvEnabled(media) {\n\t\tJanus.debug(\"isAudioRecvEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.audio === false)\n\t\t\treturn false;\t// Generic audio has precedence\n\t\tif(media.audioRecv === undefined || media.audioRecv === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.audioRecv === true);\n\t}\n\n\tfunction isVideoSendEnabled(media) {\n\t\tJanus.debug(\"isVideoSendEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.video === false)\n\t\t\treturn false;\t// Generic video has precedence\n\t\tif(media.videoSend === undefined || media.videoSend === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.videoSend === true);\n\t}\n\n\tfunction isVideoSendRequired(media) {\n\t\tJanus.debug(\"isVideoSendRequired:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\tif(media.video === false || media.videoSend === false)\n\t\t\treturn false;\t// If we're not asking to capture video, it's not required\n\t\tif(media.failIfNoVideo === undefined || media.failIfNoVideo === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.failIfNoVideo === true);\n\t}\n\n\tfunction isVideoRecvEnabled(media) {\n\t\tJanus.debug(\"isVideoRecvEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.video === false)\n\t\t\treturn false;\t// Generic video has precedence\n\t\tif(media.videoRecv === undefined || media.videoRecv === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.videoRecv === true);\n\t}\n\n\tfunction isDataEnabled(media) {\n\t\tJanus.debug(\"isDataEnabled:\", media);\n\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"edge\") {\n\t\t\tJanus.warn(\"Edge doesn't support data channels yet\");\n\t\t\treturn false;\n\t\t}\n\t\tif(media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.data === true);\n\t}\n\n\tfunction isTrickleEnabled(trickle) {\n\t\tJanus.debug(\"isTrickleEnabled:\", trickle);\n\t\tif(trickle === undefined || trickle === null)\n\t\t\treturn true;\t// Default is true\n\t\treturn (trickle === true);\n\t}\n}\n\nreturn Janus;\n\n})));\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar fbemitter = {\n  EventEmitter: require('./lib/BaseEventEmitter'),\n  EmitterSubscription : require('./lib/EmitterSubscription')\n};\n\nmodule.exports = fbemitter;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BaseEventEmitter\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EmitterSubscription = require('./EmitterSubscription');\nvar EventSubscriptionVendor = require('./EventSubscriptionVendor');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @class BaseEventEmitter\n * @description\n * An EventEmitter is responsible for managing a set of listeners and publishing\n * events to them when it is told that such events happened. In addition to the\n * data for the given event it also sends a event control object which allows\n * the listeners/handlers to prevent the default behavior of the given event.\n *\n * The emitter is designed to be generic enough to support all the different\n * contexts in which one might want to emit events. It is a simple multicast\n * mechanism on top of which extra functionality can be composed. For example, a\n * more advanced emitter may use an EventHolder and EventFactory.\n */\n\nvar BaseEventEmitter = (function () {\n  /**\n   * @constructor\n   */\n\n  function BaseEventEmitter() {\n    _classCallCheck(this, BaseEventEmitter);\n\n    this._subscriber = new EventSubscriptionVendor();\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function.\n   *\n   * TODO: Annotate the listener arg's type. This is tricky because listeners\n   *       can be invoked with varargs.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));\n  };\n\n  /**\n   * Similar to addListener, except that the listener is removed after it is\n   * invoked once.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke only once when the\n   *   specified event is emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {\n    var emitter = this;\n    return this.addListener(eventType, function () {\n      emitter.removeCurrentListener();\n      listener.apply(context, arguments);\n    });\n  };\n\n  /**\n   * Removes all of the registered listeners, including those registered as\n   * listener maps.\n   *\n   * @param {?string} eventType - Optional name of the event whose registered\n   *   listeners to remove\n   */\n\n  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    this._subscriber.removeAllSubscriptions(eventType);\n  };\n\n  /**\n   * Provides an API that can be called during an eventing cycle to remove the\n   * last listener that was invoked. This allows a developer to provide an event\n   * object that can remove the listener (or listener map) during the\n   * invocation.\n   *\n   * If it is called when not inside of an emitting cycle it will throw.\n   *\n   * @throws {Error} When called not during an eventing cycle\n   *\n   * @example\n   *   var subscription = emitter.addListenerMap({\n   *     someEvent: function(data, event) {\n   *       console.log(data);\n   *       emitter.removeCurrentListener();\n   *     }\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   *   emitter.emit('someEvent', 'def'); // does not log anything\n   */\n\n  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {\n    !!!this._currentSubscription ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : invariant(false) : undefined;\n    this._subscriber.removeSubscription(this._currentSubscription);\n  };\n\n  /**\n   * Returns an array of listeners that are currently registered for the given\n   * event.\n   *\n   * @param {string} eventType - Name of the event to query\n   * @return {array}\n   */\n\n  BaseEventEmitter.prototype.listeners = function listeners(eventType) /* TODO: Array<EventSubscription> */{\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n      return subscription.listener;\n    }) : [];\n  };\n\n  /**\n   * Emits an event of the given type with the given data. All handlers of that\n   * particular type will be notified.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.addListener('someEvent', function(message) {\n   *     console.log(message);\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   */\n\n  BaseEventEmitter.prototype.emit = function emit(eventType) {\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    if (subscriptions) {\n      var keys = Object.keys(subscriptions);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        var subscription = subscriptions[key];\n        // The subscription may have been removed during this event loop.\n        if (subscription) {\n          this._currentSubscription = subscription;\n          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));\n        }\n      }\n      this._currentSubscription = null;\n    }\n  };\n\n  /**\n   * Provides a hook to override how the emitter emits an event to a specific\n   * subscription. This allows you to set up logging and error boundaries\n   * specific to your environment.\n   *\n   * @param {EmitterSubscription} subscription\n   * @param {string} eventType\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   */\n\n  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    subscription.listener.apply(subscription.context, args);\n  };\n\n  return BaseEventEmitter;\n})();\n\nmodule.exports = BaseEventEmitter;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @typechecks\n */\n\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventSubscription = (function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n})();\n\nmodule.exports = EventSubscription;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EventSubscriptionVendor\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\n\nvar EventSubscriptionVendor = (function () {\n  function EventSubscriptionVendor() {\n    _classCallCheck(this, EventSubscriptionVendor);\n\n    this._subscriptionsForType = {};\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n    !(subscription.subscriber === this) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n    var key = this._subscriptionsForType[eventType].length;\n    this._subscriptionsForType[eventType].push(subscription);\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType === undefined) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @return {?array}\n   */\n\n  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n})();\n\nmodule.exports = EventSubscriptionVendor;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;"],"sourceRoot":""}