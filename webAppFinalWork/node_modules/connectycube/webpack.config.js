const path = require('path');
const CleanWebpackPlugin = require('clean-webpack-plugin');

module.exports = env => {
    const name = 'connectycube';
    let plugins = [];

    if (env.production) {
        plugins.push(new CleanWebpackPlugin(['dist']));
    }

    return {
        mode: env.production ? 'production' : 'development',
        entry: './src/cubeMain.js',
        output: {
            path: path.resolve(__dirname, './dist'),
            filename: env.production ? `${name}.min.js` : `${name}.js`,
            sourceMapFilename: `${name}.min.map`,
            library: 'ConnectyCube',
            libraryTarget: 'umd'
        },
        optimization: {
            minimize: env.production
        },
        devtool: env.production ? 'source-map' : false,
        plugins: plugins,
        module: {
            rules: [
                {
                    test: /\.m?js$/,
                    include: /src/,
                    exclude: /(node_modules|spec|dist|docs)/,
                    use: [
                        {
                            loader: 'babel-loader',
                            options: {
                                presets: ['@babel/preset-env'],
                                plugins: ['@babel/plugin-proposal-object-rest-spread']
                            }
                        }
                    ]
                }
            ]
        },
        externals: ['nativescript-xmpp-client', 'node-xmpp-client', 'node-fetch', 'form-data']
    };
};
